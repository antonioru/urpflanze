import { ShapeLoopGenerator, ShapeBasePropArguments, ShapeBaseStreamIndexing, Repetition, ShapeBaseStreamArguments } from "../types/ShapeBase";
import { ShapeBaseSettings, ShapeBaseProps } from "../interfaces/shapes/Interfaces";
import SceneChild from "../SceneChild";
import { TArray } from "../math/Vec2";
declare abstract class ShapeBase extends SceneChild {
    static readonly EMPTY_BUFFER: Float32Array;
    static getEmptyRepetition: () => Repetition;
    static readonly EMPTY_PROP_ARGUMENTS: ShapeBasePropArguments;
    protected generate_id: number;
    protected buffer?: Float32Array;
    protected bStatic: boolean;
    protected bStaticIndexed: boolean;
    bUseParent: boolean;
    protected indexed_buffer?: Array<ShapeBaseStreamIndexing>;
    protected single_repetition_buffer_length: Uint16Array;
    constructor(settings?: ShapeBaseSettings);
    isStatic(): boolean;
    isStaticIndexed(): boolean;
    getProp(key: keyof ShapeBaseProps, prop_arguments?: ShapeBasePropArguments, default_value?: any): any;
    setProp(key: keyof ShapeBaseProps | ShapeBaseProps, value?: any, bClearIndexed?: boolean): void;
    clearBuffer(bClearIndexed?: boolean, bPropagateToParents?: boolean): void;
    generate(generate_id: number, bDirectSceneChild?: boolean, parent_prop_arguments?: ShapeBasePropArguments): void;
    protected applyVertexTransform(vertex: TArray): void;
    getRepetitionCount(): number;
    protected abstract generateBuffer(generate_id: number, prop_arguments: ShapeBasePropArguments): Float32Array;
    abstract setShape(shape_or_loop: SceneChild | Float32Array | ShapeLoopGenerator | undefined): void;
    getBuffer(): Float32Array | undefined;
    getIndexedBuffer(): Array<ShapeBaseStreamIndexing> | undefined;
    getSingleRepetitionBufferLength(): Uint16Array;
    stream(callback: (stream_arguments: ShapeBaseStreamArguments) => void): void;
    index(buffer: Array<ShapeBaseStreamIndexing>, parent?: ShapeBaseStreamIndexing): void;
    protected abstract addIndex(buffer: Array<ShapeBaseStreamIndexing>, frame_length: number, current_repetition: Repetition, parent?: ShapeBaseStreamIndexing): void;
}
export default ShapeBase;
