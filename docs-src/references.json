[
	{
		"name": "Easings",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/animation/Easings.ts",
			"line": 6,
			"character": 13
		},
		"description": "Easing functions",
		"functions": [
			{
				"name": "backIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "s",
						"description": "overshoot (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "backInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "s",
						"description": "overshoot (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "backOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "s",
						"description": "overshoot (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "bounceIn",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "bounceInOut",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "bounceOut",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "circularIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "circularInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "circularOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "cubicIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "cubicInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "cubicOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "elasticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "a",
						"description": "amplitude (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "p",
						"description": "period (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "elasticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "a",
						"description": "amplitude (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "p",
						"description": "period (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "elasticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "a",
						"description": "amplitude (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "p",
						"description": "period (optional)",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "exponentialIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "exponentialInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "exponentialOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "linear",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quadraticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duratte",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quadraticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quadraticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quarticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quarticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quarticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quinticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quinticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "quinticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "sinusoidalIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "sinusoidalInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "sinusoidalOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duration",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"category": "Services.Animation"
	},
	{
		"name": "Simple",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/animation/Simple.ts",
			"line": 17,
			"character": 12
		},
		"functions": [
			{
				"name": "compose",
				"parameters": [
					{
						"name": "simpleAnimation",
						"type": {
							"type": "reference",
							"id": 531,
							"name": "ISimpleAnimation"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 2112,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999
			},
			{
				"name": "loop",
				"parameters": [
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 551,
							"name": "TSimpleAnimationLoop"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 2112,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999
			},
			{
				"name": "static",
				"parameters": [
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 553,
							"name": "TSimpleAnimationStatic"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 2112,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999
			},
			{
				"name": "uncontrolledLoop",
				"parameters": [
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 552,
							"name": "TSimpleAnimationUncontrolledLoop"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 2112,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999
			}
		],
		"category": "Services.Animation"
	},
	{
		"name": "Drawer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/drawers/Drawer.ts",
			"line": 21,
			"character": 21
		},
		"extends": [
			"Emitter"
		],
		"description": "Abstract Drawer",
		"constructor_ref": {
			"parameters": [
				{
					"name": "scene",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "Scene",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"defaultValue": "undefined",
					"order": 9999
				},
				{
					"name": "ratio",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"defaultValue": "undefined",
					"order": 9999
				},
				{
					"name": "duration",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "framerate",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			]
		},
		"properties": [
			{
				"name": "animation_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "draw_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "drawerOptions",
				"type": {
					"type": "typeParameter",
					"name": "IADrawerOptions",
					"constraint": {
						"type": "reference",
						"id": 386,
						"name": "IDrawerOptions"
					}
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "ratio",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "redraw_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "resolution",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "scene",
				"type": {
					"type": "reference",
					"id": 2070,
					"name": "Scene"
				},
				"order": 9999,
				"bOptional": true,
				"bProtected": true
			},
			{
				"name": "timeline",
				"type": {
					"type": "reference",
					"id": 100,
					"name": "Timeline"
				},
				"order": 9999,
				"bProtected": true
			}
		],
		"methods": [
			{
				"name": "animate",
				"description": "Internal tick animation",
				"parameters": [
					{
						"name": "timestamp",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "draw",
				"description": "Draw current scene",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "getOption",
				"description": "Return option valie or default",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "typeParameter",
							"name": "K",
							"constraint": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "IADrawerOptions",
									"constraint": {
										"type": "reference",
										"id": 386,
										"name": "IDrawerOptions"
									}
								}
							}
						},
						"order": 9999
					},
					{
						"name": "defaultValue",
						"description": "\n",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "typeParameter",
										"name": "IADrawerOptions",
										"constraint": {
											"type": "reference",
											"id": 386,
											"name": "IDrawerOptions"
										}
									}
								}
							},
							"objectType": {
								"type": "typeParameter",
								"name": "IADrawerOptions",
								"constraint": {
									"type": "reference",
									"id": 386,
									"name": "IDrawerOptions"
								}
							}
						},
						"order": 9999
					}
				],
				"typeParameter": [
					{
						"id": 1390,
						"name": "K",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "IADrawerOptions",
								"constraint": {
									"type": "reference",
									"id": 386,
									"name": "IDrawerOptions"
								}
							}
						}
					}
				],
				"return_type": {
					"type": "indexedAccess",
					"indexType": {
						"type": "typeParameter",
						"name": "K",
						"constraint": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "IADrawerOptions",
								"constraint": {
									"type": "reference",
									"id": 386,
									"name": "IDrawerOptions"
								}
							}
						}
					},
					"objectType": {
						"type": "typeParameter",
						"name": "IADrawerOptions",
						"constraint": {
							"type": "reference",
							"id": 386,
							"name": "IDrawerOptions"
						}
					}
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getOptions",
				"description": "Return all options",
				"parameters": [],
				"return_type": {
					"type": "typeParameter",
					"name": "IADrawerOptions",
					"constraint": {
						"type": "reference",
						"id": 386,
						"name": "IDrawerOptions"
					}
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getRatio",
				"description": "Return drawer ratio",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getScene",
				"description": "Return scene",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "Scene"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getTimeline",
				"description": "Return timeline",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 100,
					"name": "Timeline"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "pauseAnimation",
				"description": "Pause animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "playAnimation",
				"description": "Play animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "redraw",
				"description": "Redraw",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "resize",
				"description": "Resize scene and canvas",
				"parameters": [
					{
						"name": "width",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "height",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "ratio",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setOption",
				"description": "Set draw option",
				"parameters": [
					{
						"name": "name",
						"description": "\n",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "K",
									"type": "typeParameter",
									"order": 9999
								},
								{
									"name": "IADrawerOptions",
									"type": "typeParameter",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "typeParameter",
										"name": "IADrawerOptions",
										"constraint": {
											"type": "reference",
											"id": 386,
											"name": "IDrawerOptions"
										}
									}
								}
							},
							"objectType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "typeParameter",
										"name": "IADrawerOptions",
										"constraint": {
											"type": "reference",
											"id": 386,
											"name": "IDrawerOptions"
										}
									}
								],
								"name": "Required"
							}
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"typeParameter": [
					{
						"id": 1385,
						"name": "K",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "IADrawerOptions",
								"constraint": {
									"type": "reference",
									"id": 386,
									"name": "IDrawerOptions"
								}
							}
						}
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setRatio",
				"description": "Resize by ratio",
				"parameters": [
					{
						"name": "ratio",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setScene",
				"description": "Set scene",
				"parameters": [
					{
						"name": "scene",
						"description": "\n",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "startAnimation",
				"description": "Start animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "stopAnimation",
				"description": "Stop animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "eachGhosts",
				"description": "Each ghosts index and create drawerOptions to pass at the draw method",
				"parameters": [
					{
						"name": "drawerOptions",
						"type": {
							"type": "typeParameter",
							"name": "T",
							"constraint": {
								"type": "reference",
								"id": 386,
								"name": "IDrawerOptions"
							}
						},
						"order": 9999
					},
					{
						"name": "timeline",
						"type": {
							"type": "reference",
							"id": 100,
							"name": "Timeline"
						},
						"order": 9999
					},
					{
						"name": "ghostCallback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 1423,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 1424,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 1425,
												"name": "ghostDrawerOptions",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "intersection",
													"types": [
														{
															"type": "typeParameter",
															"name": "T",
															"constraint": {
																"type": "reference",
																"id": 386,
																"name": "IDrawerOptions"
															}
														},
														{
															"type": "reflection",
															"declaration": {
																"id": 1426,
																"name": "__type",
																"kind": 65536,
																"kindString": "Type literal",
																"flags": {},
																"children": [
																	{
																		"id": 1427,
																		"name": "ghostIndex",
																		"kind": 32,
																		"kindString": "Variable",
																		"flags": {
																			"isOptional": true
																		},
																		"sources": [
																			{
																				"fileName": "src/services/drawers/Drawer.ts",
																				"line": 312,
																				"character": 54
																			}
																		],
																		"type": {
																			"type": "union",
																			"types": [
																				{
																					"type": "intrinsic",
																					"name": "undefined"
																				},
																				{
																					"type": "intrinsic",
																					"name": "number"
																				}
																			]
																		}
																	}
																],
																"groups": [
																	{
																		"title": "Variables",
																		"kind": 32,
																		"children": [
																			1427
																		]
																	}
																],
																"sources": [
																	{
																		"fileName": "src/services/drawers/Drawer.ts",
																		"line": 312,
																		"character": 41
																	}
																]
															}
														}
													]
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/services/drawers/Drawer.ts",
										"line": 312,
										"character": 16
									}
								]
							}
						},
						"order": 9999
					}
				],
				"typeParameter": [
					{
						"id": 1419,
						"name": "T",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "reference",
							"id": 386,
							"name": "IDrawerOptions"
						}
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "getStreamDrawerProp",
				"description": "Return a style value",
				"parameters": [
					{
						"name": "shape",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "typeParameter",
									"name": "T",
									"constraint": {
										"type": "reference",
										"id": 408,
										"name": "IDrawerStreamProps"
									}
								}
							],
							"name": "ShapePrimitive"
						},
						"order": 9999
					},
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"id": 408,
									"name": "IDrawerStreamProps"
								}
							}
						},
						"order": 9999
					},
					{
						"name": "propArguments",
						"type": {
							"type": "reference",
							"id": 397,
							"name": "IDrawerPropArguments"
						},
						"order": 9999
					},
					{
						"name": "defaultValue",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"typeParameter": [
					{
						"id": 1412,
						"name": "T",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "reference",
							"id": 408,
							"name": "IDrawerStreamProps"
						}
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "ghostifyColor",
				"description": "Create color based on ghostMultiplier",
				"parameters": [
					{
						"name": "color",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					},
					{
						"name": "ghostMultiplier",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"name": "DrawerCanvas",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/drawers/drawer-canvas/DrawerCanvas.ts",
			"line": 17,
			"character": 18
		},
		"extends": [
			"Drawer"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "scene",
					"type": {
						"type": "reference",
						"id": 2070,
						"name": "Scene"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "canvasOrContainer",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "HTMLElement",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "HTMLCanvasElement",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "OffscreenCanvas",
								"type": "reference",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "drawerOptions",
					"type": {
						"type": "reference",
						"id": 1474,
						"name": "GDrawerCanvasOptions"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ratio",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"defaultValue": "undefined",
					"order": 9999
				},
				{
					"name": "duration",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "framerate",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "bBuffering",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"order": 9999
				}
			]
		},
		"properties": [
			{
				"name": "bBuffering",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"defaultValue": "false",
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "buffer",
				"type": {
					"type": "reference",
					"id": 1451,
					"name": "FrameBuffer"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "canvas",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "HTMLCanvasElement",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "OffscreenCanvas",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "context",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "CanvasRenderingContext2D",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "OffscreenCanvasRenderingContext2D",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "drawerOptions",
				"type": {
					"type": "typeParameter",
					"name": "GDrawerCanvasOptions",
					"constraint": {
						"type": "reference",
						"id": 440,
						"name": "IDrawerCanvasOptions"
					},
					"default": {
						"type": "reference",
						"name": "IDrawerCanvasOptions"
					}
				},
				"order": 9999,
				"bProtected": true
			}
		],
		"methods": [
			{
				"name": "applyDraw",
				"parameters": [
					{
						"name": "options",
						"type": {
							"type": "intersection",
							"types": [
								{
									"name": "IDrawerCanvasOptions",
									"type": "reference",
									"order": 9999
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 1525,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 1526,
												"name": "ghostIndex",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "src/services/drawers/drawer-canvas/DrawerCanvas.ts",
														"line": 347,
														"character": 62
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "undefined"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													1526
												]
											}
										],
										"sources": [
											{
												"fileName": "src/services/drawers/drawer-canvas/DrawerCanvas.ts",
												"line": 347,
												"character": 49
											}
										]
									},
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "draw",
				"description": "Draw current scene",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "flushBuffer",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getBBuffering",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getCanvas",
				"description": "Return canvas element",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "HTMLCanvasElement"
						},
						{
							"type": "reference",
							"name": "OffscreenCanvas"
						}
					]
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getContext",
				"description": "Return canvas context",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "CanvasRenderingContext2D"
						},
						{
							"type": "reference",
							"name": "OffscreenCanvasRenderingContext2D"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getStoredFrames",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "redraw",
				"description": "Redraw",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "resize",
				"description": "Resize scene and canvas",
				"parameters": [
					{
						"name": "width",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "height",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "ratio",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setBuffering",
				"parameters": [
					{
						"name": "bBuffering",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setCanvas",
				"description": "Set the canvas or append to container",
				"parameters": [
					{
						"name": "canvasOrContainer",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setOption",
				"description": "Set draw option",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "K",
									"type": "typeParameter",
									"order": 9999
								},
								{
									"name": "IDrawerCanvasOptions",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 440,
										"name": "IDrawerCanvasOptions"
									}
								}
							},
							"objectType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "IDrawerCanvasOptions"
									}
								],
								"name": "Required"
							}
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"typeParameter": [
					{
						"id": 1515,
						"name": "K",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 440,
								"name": "IDrawerCanvasOptions"
							}
						}
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setScene",
				"description": "Set scene",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "drawSimmetricLines",
				"parameters": [
					{
						"name": "context",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "CanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "simmetricLines",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "width",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "height",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "color",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"name": "FrameBuffer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/drawers/drawer-canvas/FrameBuffer.ts",
			"line": 6,
			"character": 17
		},
		"properties": [
			{
				"name": "frames",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 1453,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"indexSignature": [
							{
								"id": 1454,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1455,
										"name": "frameNumber",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ImageData"
								}
							}
						],
						"sources": [
							{
								"fileName": "src/services/drawers/drawer-canvas/FrameBuffer.ts",
								"line": 7,
								"character": 16
							}
						]
					}
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "count",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "exist",
				"parameters": [
					{
						"name": "frameNumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "flush",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "get",
				"parameters": [
					{
						"name": "frameNumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "ImageData"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getStoredFrames",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "push",
				"parameters": [
					{
						"name": "frameNumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "context",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "CanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"name": "DrawerSVG",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/drawers/drawer-svg/DrawerSVG.ts",
			"line": 22,
			"character": 15
		},
		"extends": [
			"Drawer"
		],
		"description": "Abstract drawer",
		"constructor_ref": {
			"parameters": [
				{
					"name": "scene",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "Scene",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999
				},
				{
					"name": "container",
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					},
					"order": 9999
				},
				{
					"name": "drawerOptions",
					"type": {
						"type": "reference",
						"id": 428,
						"name": "IDrawerSVGOptions"
					},
					"defaultValue": "{}",
					"order": 9999
				},
				{
					"name": "ratio",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"defaultValue": "undefined",
					"order": 9999
				},
				{
					"name": "duration",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "framerate",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			]
		},
		"properties": [
			{
				"name": "container",
				"type": {
					"type": "reference",
					"name": "HTMLElement"
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "appendSVGFromPaths",
				"parameters": [
					{
						"name": "paths",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "SVGPathElement"
								}
							],
							"name": "Array"
						},
						"order": 9999
					},
					{
						"name": "drawerOptions",
						"type": {
							"type": "reference",
							"id": 428,
							"name": "IDrawerSVGOptions"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "draw",
				"description": "Draw current scene",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "draw",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "paths",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "SVGPathElement"
								}
							],
							"name": "Array"
						},
						"order": 9999
					},
					{
						"name": "options",
						"type": {
							"type": "intersection",
							"types": [
								{
									"name": "IDrawerSVGOptions",
									"type": "reference",
									"order": 9999
								},
								{
									"type": "reflection",
									"declaration": {
										"id": 1632,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"children": [
											{
												"id": 1633,
												"name": "ghostIndex",
												"kind": 32,
												"kindString": "Variable",
												"flags": {
													"isOptional": true
												},
												"sources": [
													{
														"fileName": "src/services/drawers/drawer-svg/DrawerSVG.ts",
														"line": 137,
														"character": 43
													}
												],
												"type": {
													"type": "union",
													"types": [
														{
															"type": "intrinsic",
															"name": "undefined"
														},
														{
															"type": "intrinsic",
															"name": "number"
														}
													]
												}
											}
										],
										"groups": [
											{
												"title": "Variables",
												"kind": 32,
												"children": [
													1633
												]
											}
										],
										"sources": [
											{
												"fileName": "src/services/drawers/drawer-svg/DrawerSVG.ts",
												"line": 137,
												"character": 30
											}
										]
									},
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true,
				"bStatic": true
			},
			{
				"name": "setColor",
				"parameters": [
					{
						"name": "element",
						"type": {
							"type": "reference",
							"name": "SVGElement"
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "fill",
									"order": 9999
								},
								{
									"type": "stringLiteral",
									"value": "stroke",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "color",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true,
				"bStatic": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"name": "Emitter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/events/Emitter.ts",
			"line": 9,
			"character": 22
		},
		"description": "Class used for emit and dispatch events",
		"properties": [
			{
				"name": "callbacks",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 63,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 64,
												"name": "__call",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"parameters": [
													{
														"id": 65,
														"name": "args",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "indexedAccess",
															"indexType": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "EventTypes"
																}
															},
															"objectType": {
																"type": "typeParameter",
																"name": "EventTypes"
															}
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"sources": [
											{
												"fileName": "src/services/events/Emitter.ts",
												"line": 10,
												"character": 51
											}
										]
									}
								}
							],
							"name": "Array"
						}
					],
					"name": "Record"
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "attach",
				"description": "Attach callback at event",
				"parameters": [
					{
						"name": "e",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					},
					{
						"name": "callback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 72,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 73,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 74,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "typeParameter",
															"name": "EventTypes"
														}
													},
													"objectType": {
														"type": "typeParameter",
														"name": "EventTypes"
													}
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/services/events/Emitter.ts",
										"line": 23,
										"character": 45
									}
								]
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "detach",
				"description": "Remove callbach listener at event",
				"parameters": [
					{
						"name": "e",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					},
					{
						"name": "callback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 79,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 80,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 81,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "typeParameter",
															"name": "EventTypes"
														}
													},
													"objectType": {
														"type": "typeParameter",
														"name": "EventTypes"
													}
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/services/events/Emitter.ts",
										"line": 38,
										"character": 45
									}
								]
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "dispatch",
				"description": "Dispatch event",
				"parameters": [
					{
						"name": "e",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					},
					{
						"name": "params",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							"objectType": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"category": "Services.Emitter"
	},
	{
		"name": "GCODEExporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/exporters/GCODEExporter.ts",
			"line": 5,
			"character": 19
		},
		"methods": [
			{
				"name": "concat",
				"parameters": [
					{
						"name": "result",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "string"
								}
							],
							"name": "Array"
						},
						"order": 9999
					},
					{
						"name": "data",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "Array",
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "string"
										}
									],
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "generate",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 1332,
									"name": "IGCODESettings"
								}
							],
							"name": "Required"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "gotoTo",
				"parameters": [
					{
						"name": "x",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "y",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "round",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "velocity",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "home",
				"parameters": [
					{
						"name": "penUpCommand",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "lineTo",
				"parameters": [
					{
						"name": "x",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "y",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "velocity",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "round",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "moveTo",
				"parameters": [
					{
						"name": "penUpCommand",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "penDownCommand",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "x",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "y",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "round",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "array",
					"elementType": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parse",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1332,
							"name": "IGCODESettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "round",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "round",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "setCurrentMachinePosition",
				"parameters": [
					{
						"name": "x",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "y",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "round",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "setCurrentWorkspacePosition",
				"parameters": [
					{
						"name": "x",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "y",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "round",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "setUnit",
				"parameters": [
					{
						"name": "unit",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "millimeters",
									"order": 9999
								},
								{
									"type": "stringLiteral",
									"value": "inches",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "useAbsolutePosition",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "useRelativePosition",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			}
		]
	},
	{
		"name": "JSONExporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/exporters/JSONExporter.ts",
			"line": 22,
			"character": 18
		},
		"methods": [
			{
				"name": "filterDataTye",
				"parameters": [
					{
						"name": "data",
						"type": {
							"type": "typeParameter",
							"name": "T"
						},
						"order": 9999
					},
					{
						"name": "dataType",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "props",
									"order": 9999
								},
								{
									"type": "stringLiteral",
									"value": "drawer",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"typeParameter": [
					{
						"id": 1867,
						"name": "T",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {}
					}
				],
				"return_type": {
					"type": "typeParameter",
					"name": "T"
				},
				"order": 9999,
				"bPrivate": true,
				"bStatic": true
			},
			{
				"name": "parse",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"defaultValue": "\"EmptyProject\"",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parseAsProject",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"defaultValue": "\"EmptyProject\"",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 1285,
					"name": "IProject"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parseSceneChild",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "parentId",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "depth",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 1305,
					"name": "IProjectSceneChild"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "toString",
				"parameters": [
					{
						"name": "project",
						"type": {
							"type": "reference",
							"id": 1285,
							"name": "IProject"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"name": "SVGExporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/exporters/SVGExporter.ts",
			"line": 18,
			"character": 17
		},
		"methods": [
			{
				"name": "parse",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1349,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Drawer"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1722,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parseAsSVG",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1349,
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "any"
								},
								{
									"type": "intrinsic",
									"name": "any"
								}
							],
							"name": "Drawer"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1722,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "SVGElement"
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"name": "JSONImporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/importers/JSONImporter.ts",
			"line": 21,
			"character": 18
		},
		"methods": [
			{
				"name": "createEmptyProject",
				"description": "Empty project with default value",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 1285,
					"name": "IProject"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parse",
				"description": "Parse string to DrawerCanvas",
				"parameters": [
					{
						"name": "project_json",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parseSceneChild",
				"parameters": [
					{
						"name": "projectSceneChild",
						"type": {
							"type": "reference",
							"id": 1305,
							"name": "IProjectSceneChild"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"name": "SVGImporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/importers/SVGImporter.ts",
			"line": 27,
			"character": 17
		},
		"properties": [
			{
				"name": "COMMENT_REGEX",
				"description": "Match commments",
				"type": {
					"type": "reference",
					"name": "RegExp"
				},
				"defaultValue": "/<!--([\\s\\S]*?)-->/g",
				"order": 9999,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "HEX_REGEX",
				"description": "Match hex color",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})\"",
				"order": 9999,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "SVG_REGEX",
				"description": "Match string is SVG",
				"type": {
					"type": "reference",
					"name": "RegExp"
				},
				"defaultValue": "/^\\s*(?:<\\?xml[^>]*>\\s*)?(?:<!doctype svg[^>]*\\s*(?:\\[?(?:\\s*<![^>]*>\\s*)*\\]?)*[^>]*>\\s*)?(?:<svg[^>]*>[^]*<\\/svg>|<svg[^/>]*\\/\\s*>)\\s*$/i",
				"order": 9999,
				"bStatic": true,
				"bReadonly": true
			}
		],
		"methods": [
			{
				"name": "SVGStringToBuffers",
				"description": "Convert SVG string to buffers",
				"parameters": [
					{
						"name": "input",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "simplify",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0.001",
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 1329,
							"name": "ISVGParsed"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "chunk",
				"description": "Separate multiple array",
				"parameters": [
					{
						"name": "arr",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							],
							"name": "Array"
						},
						"order": 9999
					},
					{
						"name": "size",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "2",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										}
									]
								}
							],
							"name": "Array"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bPrivate": true,
				"bStatic": true
			},
			{
				"name": "elementToPath",
				"description": "Convert SVG Element to Path",
				"parameters": [
					{
						"name": "element",
						"type": {
							"type": "reference",
							"name": "SVGElement"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "SVGPathElement"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "fromPercentage",
				"description": "Get percentage to number",
				"parameters": [
					{
						"name": "val",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "base",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true,
				"bStatic": true
			},
			{
				"name": "getStyleAttr",
				"description": "Replace 'none' to undefined",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "fill",
									"order": 9999
								},
								{
									"type": "stringLiteral",
									"value": "stroke",
									"order": 9999
								},
								{
									"type": "stringLiteral",
									"value": "stroke-width",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "element",
						"type": {
							"type": "reference",
							"name": "SVGElement"
						},
						"order": 9999
					},
					{
						"name": "defaultColor",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"order": 9999,
				"bPrivate": true,
				"bStatic": true
			},
			{
				"name": "getViewbox",
				"description": "Return SVG viewBox\nIf it is not present, calculate it based on elements",
				"parameters": [
					{
						"name": "svg",
						"type": {
							"type": "reference",
							"name": "SVGElement"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "tuple",
					"elements": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "isSVG",
				"description": "Check passed input is valid SVG string",
				"parameters": [
					{
						"name": "input",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parse",
				"description": "Convert SVG string into DrawerCanvas",
				"parameters": [
					{
						"name": "input",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "simplify",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0.001",
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parseAsShape",
				"description": "Convert SVG string to Shape or ShapeBuffer",
				"parameters": [
					{
						"name": "input",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "simplify",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0.001",
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "Shape"
						},
						{
							"type": "reference",
							"name": "ShapeBuffer"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "parsedToShape",
				"description": "Convert parsed SVG to Shape or ShapeBuffer",
				"parameters": [
					{
						"name": "parsed",
						"type": {
							"type": "reference",
							"id": 1329,
							"name": "ISVGParsed"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "Shape"
						},
						{
							"type": "reference",
							"name": "ShapeBuffer"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "pathIsClosed",
				"description": "Check path is closed",
				"parameters": [
					{
						"name": "path",
						"type": {
							"type": "reference",
							"name": "SVGPathElement"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "pathToBuffer",
				"description": "Convert path to buffer between [-1, 1]",
				"parameters": [
					{
						"name": "path",
						"type": {
							"type": "reference",
							"name": "SVGPathElement"
						},
						"order": 9999
					},
					{
						"name": "steps",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0.01",
						"order": 9999
					},
					{
						"name": "viewBox",
						"type": {
							"type": "array",
							"elementType": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						"defaultValue": "[-1, -1, 1, 1]",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "propagateGroupTransformAndStyleToChildren",
				"description": "Propagate transform for apply to point in path",
				"parameters": [
					{
						"name": "g",
						"description": "\n",
						"type": {
							"type": "reference",
							"name": "SVGGElement"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPrivate": true,
				"bStatic": true
			},
			{
				"name": "simpliyBuffer",
				"description": "Optimize number of points",
				"parameters": [
					{
						"name": "buffer",
						"type": {
							"type": "reference",
							"name": "Float32Array"
						},
						"order": 9999
					},
					{
						"name": "simplifyLevel",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0.01",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "stringToSVG",
				"description": "Convert string to SVGElement",
				"parameters": [
					{
						"name": "input",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SVGElement"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"name": "Capturer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/renderer/Capturer.ts",
			"line": 15,
			"character": 14
		},
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1746,
						"name": "ICapturerSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			]
		},
		"properties": [
			{
				"name": "chunks",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Uint8Array"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "encoder",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "jpeg",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "png",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "extension",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": ".jpg",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": ".png",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "promises",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "Promise"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "quality",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "started",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 1744,
					"name": "TRenderType"
				},
				"order": 9999
			}
		],
		"methods": [
			{
				"name": "capture",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "framenumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Promise"
				},
				"order": 9999
			},
			{
				"name": "save",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "Uint8Array"
								}
							],
							"name": "Array"
						}
					],
					"name": "Promise"
				},
				"order": 9999
			},
			{
				"name": "setSettings",
				"parameters": [
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1746,
							"name": "ICapturerSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "start",
				"parameters": [
					{
						"name": "total_frames",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "stop",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "getBlob",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "reference",
							"id": 1744,
							"name": "TRenderType"
						},
						"order": 9999
					},
					{
						"name": "quality",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Blob"
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "getRenderTime",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "reference",
							"id": 1743,
							"name": "TRenderImageType"
						},
						"order": 9999
					},
					{
						"name": "quality",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "render",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "reference",
							"id": 1744,
							"name": "TRenderType"
						},
						"order": 9999
					},
					{
						"name": "quality",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Uint8Array"
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Renderer"
	},
	{
		"name": "Renderer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/renderer/Renderer.ts",
			"line": 19,
			"character": 14
		},
		"extends": [
			"Emitter"
		],
		"properties": [
			{
				"name": "capturer",
				"type": {
					"type": "reference",
					"id": 1749,
					"name": "Capturer"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "renderPromise",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "ICancelablePromise",
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "Uint8Array"
								}
							],
							"order": 9999
						},
						{
							"name": "ICancelablePromise",
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "Blob"
										}
									],
									"name": "Array"
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "started",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"defaultValue": "false",
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "prepareRenderAnimation",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1722,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1728,
							"name": "IRenderStart"
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "renderAnimation",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1722,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "Blob"
								}
							],
							"name": "Array"
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "renderAnimationPart",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1722,
							"name": "IRenderSettings"
						},
						"order": 9999
					},
					{
						"name": "frame_from",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "frame_count",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "part",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "total_frames",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "total_parts",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "Blob"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "renderImage",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 1473,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1722,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Uint8Array"
						}
					],
					"name": "Promise"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "stop",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"category": "Services.Renderer"
	},
	{
		"type": "Interface",
		"name": "ISceneChildUtiltiesData",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
			"line": 25,
			"character": 40
		},
		"properties": [
			{
				"name": "animable",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "canBArray",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "dataType",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "props",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "drawer",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "settings",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "default",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			},
			{
				"name": "default_animate",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "initialArray",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "label",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "max",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "min",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "options",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reflection",
							"declaration": {
								"id": 596,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"children": [
									{
										"id": 597,
										"name": "key",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true
										},
										"sources": [
											{
												"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
												"line": 32,
												"character": 22
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 598,
										"name": "value",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true
										},
										"sources": [
											{
												"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
												"line": 32,
												"character": 37
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											597,
											598
										]
									}
								],
								"sources": [
									{
										"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
										"line": 32,
										"character": 17
									}
								]
							}
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "step",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "transformation",
				"type": {
					"type": "reference",
					"id": 494,
					"name": "TTransformableType"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 607,
					"name": "TPropInputType"
				},
				"order": 9999
			},
			{
				"name": "type_value",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "float",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "int",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TPropInputType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
			"line": 12,
			"character": 26
		},
		"parameter": {
			"name": "TPropInputType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "range",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "multiple-range",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "color",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "select",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "checkbox",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "radio",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "slider",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "function",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TSceneChildPropsDataKeys",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
			"line": 46,
			"character": 36
		},
		"parameter": {
			"name": "TSceneChildPropsDataKeys",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "union",
						"order": 9999
					},
					{
						"name": "TDrawerPropsExtendedKeys",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "Exclude",
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 505,
								"name": "TSettingsExtendedKeys"
							},
							{
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "id"
									},
									{
										"type": "stringLiteral",
										"value": "name"
									},
									{
										"type": "stringLiteral",
										"value": "order"
									}
								]
							}
						],
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "SceneChildUtilitiesData",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
			"line": 73,
			"character": 29
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "SceneUtilities",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneUtilities.ts",
			"line": 49,
			"character": 20
		},
		"properties": [
			{
				"name": "registeredSceneChilds",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 1180,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"indexSignature": [
							{
								"id": 1181,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 1182,
										"name": "type",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1279,
									"name": "SceneChildInstance"
								}
							}
						],
						"sources": [
							{
								"fileName": "src/services/scene-utilities/SceneUtilities.ts",
								"line": 50,
								"character": 31
							}
						]
					}
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "add",
				"description": "Add scene child to parent.\nCreate a group if parent is Shape and has one element (not Group) inside.",
				"parameters": [
					{
						"name": "parent",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "Scene",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "sceneChild",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 508,
							"name": "TSceneChildUtilitiesSettings"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 2070,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999
			},
			{
				"name": "copy",
				"description": "Return a copy of sceneChild",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 2070,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "strict",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999
			},
			{
				"name": "create",
				"description": "Logic creation of a SceneChild\nSince scene is not passed, name are set if they are present in args or type",
				"parameters": [
					{
						"name": "item",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 508,
							"name": "TSceneChildUtilitiesSettings"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 2070,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999
			},
			{
				"name": "getChildren",
				"description": "Return children of a shape.\nOnly Group has array of children, Shape has only one child.",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "SceneChild"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "getChildrenPrimitives",
				"description": "Return only primitive children",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ShapePrimitive"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "getCountOfSceneChildType",
				"description": "Return a number of element type into a scene",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "getCountSceneChildOfType",
				"description": "Return number of element from a type",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "getNeighbors",
				"description": "Return a list of neighbors",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "SceneChild"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "getParent",
				"description": "Get first level parent",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999
			},
			{
				"name": "getParents",
				"description": "Get all parents",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "SceneChild"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "getRegistered",
				"description": "Return a list of name of registered sceneChild",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getRootParent",
				"description": "Get Root parent",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"order": 9999
			},
			{
				"name": "hasLoop",
				"description": "Check scene child is a ShapeLoop",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "hasShapeBuffer",
				"description": "Check sceneChild is a ShapeBuffer an are binded",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "hasShapeChild",
				"description": "Check sceneChild are Shape and has a child",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "isAPrimitive",
				"description": "Check scene child is a Primitive",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "isGroup",
				"description": "Check sceneChild is Group",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "register",
				"description": "Register scene child for fast creation",
				"parameters": [
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "ref",
						"type": {
							"type": "reference",
							"id": 1279,
							"name": "SceneChildInstance"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "remove",
				"description": "Remove scene child from",
				"parameters": [
					{
						"name": "from",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "item",
						"type": {
							"type": "reference",
							"id": 2071,
							"name": "SceneChild"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "set",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 619,
									"name": "SceneChildUtilitiesData"
								}
							}
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "TSceneChildPropExtendedValue",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "TDrawerPropExtendedValue",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "TSettingExtendedValue",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "setDrawerProp",
				"description": "Set prop, convert raw function, animation on transformable prop",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "reference",
							"id": 502,
							"name": "TDrawerPropsExtendedKeys"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "reference",
							"id": 503,
							"name": "TDrawerPropExtendedValue"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "setProp",
				"description": "Set prop: convert animation or transformable props",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "reference",
							"id": 499,
							"name": "TSceneChildPropsExtendedKeys"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "reference",
							"id": 500,
							"name": "TSceneChildPropExtendedValue"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "setSetting",
				"description": "TODO:\nSet Args (props, drawer, other settings)\nSceneChildPropData refactoring",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "reference",
							"id": 505,
							"name": "TSettingsExtendedKeys"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "reference",
							"id": 506,
							"name": "TSettingExtendedValue"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "unregister",
				"description": "unregister scene child",
				"parameters": [
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "SceneUtilitiesExtended",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneUtilitiesExtended.ts",
			"line": 20,
			"character": 28
		},
		"properties": [
			{
				"name": "RAW_ARGUMENTS",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"{ repetition, recursion, shape }\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "RAW_ARGUMENTS_WITH_PARENT",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"{ repetition, recursion, shape, parent }\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			}
		],
		"methods": [
			{
				"name": "bPropInSceneChildUtilitiesData",
				"description": "Check the prop need transformation when set",
				"parameters": [
					{
						"name": "name",
						"description": "\n",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 619,
									"name": "SceneChildUtilitiesData"
								}
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "bValueAnimation",
				"description": "Check value is TAnimation",
				"parameters": [
					{
						"name": "value",
						"description": "\n",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "TAnimation",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "any",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "bValueLoop",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "bValueTransformable",
				"description": "Check value is TTransformableProp",
				"parameters": [
					{
						"name": "value",
						"description": "\n",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "TTransformable",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "any",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "bValueVertexCallback",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "composeLoop",
				"parameters": [
					{
						"name": "loop",
						"type": {
							"type": "reference",
							"id": 485,
							"name": "ISceneChildPropsExtendedShapeLoop"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "IShapeLoopGenerator"
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "composeVertexCallback",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 2116,
							"name": "TVertexCallback"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "getTransformedValue",
				"description": "Transform value",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 619,
									"name": "SceneChildUtilitiesData"
								}
							}
						},
						"order": 9999
					},
					{
						"name": "value",
						"description": "\n",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "TTransformable",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "any",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					]
				},
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "getTransformedValueInverse",
				"description": "Transform value inverse",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "query",
								"queryType": {
									"type": "reference",
									"id": 619,
									"name": "SceneChildUtilitiesData"
								}
							}
						},
						"order": 9999
					},
					{
						"name": "value",
						"description": "\n",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "Array"
						}
					]
				},
				"order": 9999,
				"bStatic": true
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "Timeline",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/timeline/Timeline.ts",
			"line": 13,
			"character": 14
		},
		"extends": [
			"Emitter"
		],
		"description": "Is used for sequence time management.\nIt is necessary to set the duration and the number of frames per second (frame rate).",
		"constructor_ref": {
			"parameters": [
				{
					"name": "duration",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "60000",
					"order": 9999
				},
				{
					"name": "framerate",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "60",
					"order": 9999
				}
			]
		},
		"properties": [
			{
				"name": "b_sequence_started",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "current_frame",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "current_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps_samples",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"defaultValue": "[]",
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps_samples_index",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "0",
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps_samples_size",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "30",
				"order": 9999,
				"bPrivate": true,
				"bReadonly": true
			},
			{
				"name": "last_tick",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "paused_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "0",
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "sequence",
				"type": {
					"type": "reference",
					"id": 95,
					"name": "ISequenceMeta"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "start_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "tick_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "PAUSE",
				"description": "Animation status paused",
				"type": {
					"type": "stringLiteral",
					"value": "pause"
				},
				"defaultValue": "\"pause\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "START",
				"description": "Animation status started",
				"type": {
					"type": "stringLiteral",
					"value": "start"
				},
				"defaultValue": "\"start\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "STOP",
				"description": "Animation status stop",
				"type": {
					"type": "stringLiteral",
					"value": "stop"
				},
				"defaultValue": "\"stop\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			}
		],
		"methods": [
			{
				"name": "bSequenceStarted",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "calculateFPS",
				"description": "Calculate fps",
				"parameters": [
					{
						"name": "currentFPS",
						"description": "\n",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "getCurrentFrame",
				"description": "Return current animation frame",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getDuration",
				"description": "Get timeline duration",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getFrameAtTime",
				"description": "Return frame number at time",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getFrameTime",
				"description": "get the time at specific frame number",
				"parameters": [
					{
						"name": "frame",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getFramerate",
				"description": "Return framerate",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getFramesCount",
				"description": "Get number of frames based on duration and framerate",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getSequence",
				"description": "Return the sequence",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 95,
					"name": "ISequenceMeta"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getTickTime",
				"description": "Return tick time (based on framerate)",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "getTime",
				"description": "Return the current time",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "pause",
				"description": "Pause the sequence",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setDuration",
				"description": "Set duration of timeline",
				"parameters": [
					{
						"name": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setFrame",
				"description": "set current frame",
				"parameters": [
					{
						"name": "frame",
						"description": "\n",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setFramerate",
				"description": "Set a framerate",
				"parameters": [
					{
						"name": "framerate",
						"description": "\n",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setSequence",
				"description": "Set Sequence",
				"parameters": [
					{
						"name": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "framerate",
						"description": "\n",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "setTime",
				"description": "Set animation at time",
				"parameters": [
					{
						"name": "time",
						"description": "\n",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "start",
				"description": "Start the sequence",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "stop",
				"description": "Stop the sequence and reset",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "tick",
				"description": "Animation tick",
				"parameters": [
					{
						"name": "timestamp",
						"description": "current timestamp",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"category": "Services.Timeline"
	},
	{
		"type": "Interface",
		"name": "ICallableValue",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 18,
			"character": 31
		},
		"properties": [
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"typeParameters": [
			{
				"id": 512,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				},
				"comment": {
					"shortText": "\n"
				}
			}
		],
		"category": "Services.Animation"
	},
	{
		"type": "Interface",
		"name": "IRawState",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 187,
			"character": 26
		},
		"extends": [
			"ICallableValue"
		],
		"properties": [
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"category": "Services.Animation"
	},
	{
		"type": "Interface",
		"name": "IShapeLoopAnimation",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 41,
			"character": 36
		},
		"properties": [
			{
				"name": "dynamyc",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "end",
				"type": {
					"type": "reference",
					"id": 546,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "inc",
				"type": {
					"type": "reference",
					"id": 546,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "start",
				"type": {
					"type": "reference",
					"id": 546,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "vertex",
				"type": {
					"type": "reference",
					"id": 511,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "ICallableValue"
				},
				"order": 9999
			}
		],
		"category": "Services.Animation"
	},
	{
		"type": "Interface",
		"name": "ISimpleAnimation",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 97,
			"character": 33
		},
		"properties": [
			{
				"name": "from",
				"description": "Supported color string format:\nrgba([0-255], [0-255], [0-255], 0-1)\nhsla([0-360], [0-100]%, [0-100]%, 0-1)",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "TTransformable",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "tuple",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 1
			},
			{
				"name": "to",
				"description": "Supported color string format:\nrgba([0-255], [0-255], [0-255], 0-1)\nhsla([0-360], [0-100]%, [0-100]%, 0-1)",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "TTransformable",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "tuple",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 2
			},
			{
				"name": "duration",
				"description": "Duration in millisecond",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 3
			},
			{
				"name": "invertOdd",
				"description": "Invert animation on odd repetition index",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 4
			},
			{
				"name": "type",
				"description": "'loop' | 'uncontrolled-loop' | 'static'",
				"type": {
					"type": "reference",
					"id": 550,
					"name": "TSimpleAnimationType"
				},
				"order": 4
			},
			{
				"name": "mode",
				"description": "type of animate value",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "sinusoidal",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "easing",
							"order": 9999
						}
					]
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "modeFunction",
				"description": "Is based on <mark>mode</mark> value.\nIf mode is 'sinusoidal' the modeFunction value can be 'sin' | 'cos'\nIf mode is 'easing' the modeFunction value can be <a href=\"#/ref/TEasing\">TEasing</a>",
				"type": {
					"type": "reference",
					"id": 549,
					"name": "TModeFunction"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "delay",
				"description": "Delay of start animation, available for <mark>type</mark> 'uncontrolled-loop' | 'static'",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "typeValue",
				"description": "Default is 'float', whit 'int' value, the numbers are rounded",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "int",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "float",
							"order": 9999
						}
					]
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "colorTransitionMode",
				"description": "With the 'rgb' value the color will vary linearly according to the <mark>mode</mark> and <mark>modeFunction</mark>,\nwhile with 'hue' they will be converted to hsla and then go through the color wheel",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "hue",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "rgb",
							"order": 9999
						}
					]
				},
				"order": 9,
				"bOptional": true
			}
		],
		"category": "Services.Animation"
	},
	{
		"type": "Interface",
		"name": "IVertexCallbackAnimation",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 55,
			"character": 41
		},
		"extends": [
			"ICallableValue"
		],
		"properties": [
			{
				"name": "dynamic",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"category": "Services.Animation"
	},
	{
		"name": "TAnimation",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 82,
			"character": 22
		},
		"parameter": {
			"name": "TAnimation",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "IAnimationSimple",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "IAnimationRaw",
						"type": "reference",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TCallableValue",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 32,
			"character": 26
		},
		"parameter": {
			"name": "TCallableValue",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "T",
						"type": "typeParameter",
						"order": 9999
					},
					{
						"name": "ICallableValue",
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 547,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		],
		"category": "Services.Animation"
	},
	{
		"name": "TEasing",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 8,
			"character": 19
		},
		"parameter": {
			"name": "TEasing",
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"id": 189,
						"name": "Easings"
					}
				}
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TModeFunction",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 87,
			"character": 25
		},
		"parameter": {
			"name": "TModeFunction",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "TEasing",
						"type": "reference",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "sin",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "cos",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TSimpleAnimationLoop",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 172,
			"character": 32
		},
		"parameter": {
			"name": "TSimpleAnimationLoop",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 531,
						"name": "ISimpleAnimation"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "delay"
							},
							{
								"type": "stringLiteral",
								"value": "type"
							}
						]
					}
				],
				"name": "Omit"
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TSimpleAnimationStatic",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 182,
			"character": 34
		},
		"parameter": {
			"name": "TSimpleAnimationStatic",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 531,
						"name": "ISimpleAnimation"
					},
					{
						"type": "stringLiteral",
						"value": "type"
					}
				],
				"name": "Omit"
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TSimpleAnimationType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 92,
			"character": 32
		},
		"parameter": {
			"name": "TSimpleAnimationType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "loop",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "uncontrolled-loop",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "static",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TSimpleAnimationUncontrolledLoop",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 177,
			"character": 44
		},
		"parameter": {
			"name": "TSimpleAnimationUncontrolledLoop",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 531,
						"name": "ISimpleAnimation"
					},
					{
						"type": "stringLiteral",
						"value": "type"
					}
				],
				"name": "Omit"
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"type": "Interface",
		"name": "IDrawerCanvasEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 72,
			"character": 36
		},
		"properties": [
			{
				"name": "drawer-canvas:before_draw",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 457,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"children": [
							{
								"id": 458,
								"name": "currentFrame",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/drawer.ts",
										"line": 74,
										"character": 14
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 459,
								"name": "currentTime",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/drawer.ts",
										"line": 75,
										"character": 13
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									458,
									459
								]
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/drawer.ts",
								"line": 73,
								"character": 29
							}
						]
					}
				},
				"order": 9999
			},
			{
				"name": "drawer-canvas:buffer_flush",
				"type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "drawer-canvas:buffer_loaded",
				"type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "drawer-canvas:resize",
				"type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "IDrawerCanvasOptions",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 62,
			"character": 37
		},
		"extends": [
			"IDrawerOptions"
		],
		"properties": [
			{
				"name": "backgroundImage",
				"type": {
					"type": "reference",
					"name": "CanvasImageSource"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "backgroundImageFit",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "cover",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "contain",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "clear",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostAlpha",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipFunction",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"name": "__type",
								"parameters": [
									{
										"name": "ghostRepetition",
										"type": {
											"type": "reference",
											"name": "IBaseRepetition"
										},
										"order": 9999
									},
									{
										"name": "currentTime",
										"type": {
											"type": "intrinsic",
											"name": "number"
										},
										"order": 9999
									}
								],
								"return_type": {
									"type": "intrinsic",
									"name": "number"
								},
								"order": 9999
							},
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipTime",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghosts",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "noBackground",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "simmetricLines",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "time",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "IDrawerCanvasPropArguments",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 18,
			"character": 43
		},
		"extends": [
			"IDrawerPropArguments"
		],
		"properties": [
			{
				"name": "repetition",
				"description": "Information about repetition",
				"type": {
					"type": "reference",
					"name": "IRepetition"
				},
				"order": 1
			},
			{
				"name": "recursion",
				"description": "Information about recursion (if is encapsulated in a ShapeRecursive)",
				"type": {
					"type": "reference",
					"id": 2107,
					"name": "IRecursionRepetition"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "shape",
				"description": "Current Shape",
				"type": {
					"type": "reference",
					"name": "ShapeBase"
				},
				"order": 5
			},
			{
				"name": "parent",
				"description": "Parent repetition (if encapsulated)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ISceneChildPropArguments"
						}
					],
					"name": "Partial"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "canvasContext",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "CanvasRenderingContext2D",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "OffscreenCanvasRenderingContext2D",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999
			}
		],
		"category": "Other"
	},
	{
		"type": "Interface",
		"name": "IDrawerCanvasStreamProps",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 37,
			"character": 41
		},
		"extends": [
			"IDrawerStreamProps"
		],
		"properties": [
			{
				"name": "composite",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "reference",
							"id": 483,
							"name": "TCanvasContexComposite"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "fill",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"name": "CanvasGradient"
								},
								{
									"type": "reference",
									"name": "CanvasPattern"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "filter",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineCap",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "butt"
								},
								{
									"type": "stringLiteral",
									"value": "round"
								},
								{
									"type": "stringLiteral",
									"value": "square"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineDash",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "tuple",
							"elements": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "number"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineDashOffset",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineJoin",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "bevel"
								},
								{
									"type": "stringLiteral",
									"value": "round"
								},
								{
									"type": "stringLiteral",
									"value": "miter"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "miterLimit",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "opacity",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "shadowBlur",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "shadowColor",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "shadowOffsetX",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "shadowOffsetY",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "stroke",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"name": "CanvasGradient"
								},
								{
									"type": "reference",
									"name": "CanvasPattern"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "IDrawerOptions",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 6,
			"character": 31
		},
		"properties": [
			{
				"name": "ghostAlpha",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipFunction",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"name": "__type",
								"parameters": [
									{
										"name": "ghostRepetition",
										"type": {
											"type": "reference",
											"name": "IBaseRepetition"
										},
										"order": 9999
									},
									{
										"name": "currentTime",
										"type": {
											"type": "intrinsic",
											"name": "number"
										},
										"order": 9999
									}
								],
								"return_type": {
									"type": "intrinsic",
									"name": "number"
								},
								"order": 9999
							},
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipTime",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghosts",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "noBackground",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "time",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "IDrawerPropArguments",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 15,
			"character": 37
		},
		"extends": [
			"ISceneChildPropArguments"
		],
		"properties": [
			{
				"name": "repetition",
				"description": "Information about repetition",
				"type": {
					"type": "reference",
					"name": "IRepetition"
				},
				"order": 1
			},
			{
				"name": "recursion",
				"description": "Information about recursion (if is encapsulated in a ShapeRecursive)",
				"type": {
					"type": "reference",
					"id": 2107,
					"name": "IRecursionRepetition"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "shape",
				"description": "Current Shape",
				"type": {
					"type": "reference",
					"name": "ShapeBase"
				},
				"order": 5
			},
			{
				"name": "parent",
				"description": "Parent repetition (if encapsulated)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "ISceneChildPropArguments"
						}
					],
					"name": "Partial"
				},
				"order": 7,
				"bOptional": true
			}
		],
		"category": "Other"
	},
	{
		"type": "Interface",
		"name": "IDrawerSVGEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 85,
			"character": 33
		},
		"properties": [
			{
				"name": "drawer-svg:before_draw",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 465,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"children": [
							{
								"id": 466,
								"name": "currentFrame",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/drawer.ts",
										"line": 87,
										"character": 14
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 467,
								"name": "currentTime",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/drawer.ts",
										"line": 88,
										"character": 13
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									466,
									467
								]
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/drawer.ts",
								"line": 86,
								"character": 26
							}
						]
					}
				},
				"order": 9999
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "IDrawerSVGOptions",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 55,
			"character": 34
		},
		"extends": [
			"IDrawerOptions"
		],
		"properties": [
			{
				"name": "decimals",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostAlpha",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipFunction",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"name": "__type",
								"parameters": [
									{
										"name": "ghostRepetition",
										"type": {
											"type": "reference",
											"name": "IBaseRepetition"
										},
										"order": 9999
									},
									{
										"name": "currentTime",
										"type": {
											"type": "intrinsic",
											"name": "number"
										},
										"order": 9999
									}
								],
								"return_type": {
									"type": "intrinsic",
									"name": "number"
								},
								"order": 9999
							},
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipTime",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghosts",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "noBackground",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "time",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "IDrawerStreamProps",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 28,
			"character": 35
		},
		"properties": [
			{
				"name": "fill",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"name": "CanvasGradient"
								},
								{
									"type": "reference",
									"name": "CanvasPattern"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "stroke",
				"type": {
					"type": "reference",
					"id": 473,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "reference",
									"name": "CanvasGradient"
								},
								{
									"type": "reference",
									"name": "CanvasPattern"
								}
							]
						}
					],
					"name": "TDrawerCanvasProp"
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"type": "Interface",
		"name": "ISceneChildDrawerData",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 123,
			"character": 38
		},
		"properties": [
			{
				"name": "composite",
				"type": {
					"type": "reference",
					"id": 483,
					"name": "TCanvasContexComposite"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "disableGhost",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "highlighted",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "visible",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Drawer"
	},
	{
		"name": "TDrawerCanvasProp",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 22,
			"character": 29
		},
		"parameter": {
			"name": "TDrawerCanvasProp",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "T",
						"type": "typeParameter",
						"order": 9999
					},
					{
						"type": "reflection",
						"declaration": {
							"name": "__type",
							"parameters": [
								{
									"name": "propArguments",
									"type": {
										"type": "reference",
										"id": 402,
										"name": "IDrawerCanvasPropArguments"
									},
									"order": 9999
								}
							],
							"return_type": {
								"type": "typeParameter",
								"name": "T"
							},
							"order": 9999
						},
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 474,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		]
	},
	{
		"name": "TDrawerProp",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer.ts",
			"line": 23,
			"character": 23
		},
		"parameter": {
			"name": "TDrawerProp",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "T",
						"type": "typeParameter",
						"order": 9999
					},
					{
						"type": "reflection",
						"declaration": {
							"name": "__type",
							"parameters": [
								{
									"name": "propArguments",
									"type": {
										"type": "reference",
										"id": 397,
										"name": "IDrawerPropArguments"
									},
									"order": 9999
								}
							],
							"return_type": {
								"type": "typeParameter",
								"name": "T"
							},
							"order": 9999
						},
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 479,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		]
	},
	{
		"type": "Interface",
		"name": "IGCODESettings",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 148,
			"character": 31
		},
		"properties": [
			{
				"name": "atTime",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "maxX",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "maxY",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "minX",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "minY",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "penDownCommand",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "penUpCommand",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "round",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "unit",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "millimeters",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "inches",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "velocity",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"type": "Interface",
		"name": "IProject",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 22,
			"character": 25
		},
		"properties": [
			{
				"name": "background",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "backgroundImage",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "clear",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "color",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "ghostSkipFunction",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "CallableFunction",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghostSkipTime",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghosts",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "height",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "id",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "ratio",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "resolution",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "scene",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 1302,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"indexSignature": [
							{
								"id": 1303,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {
									"isExported": true
								},
								"parameters": [
									{
										"id": 1304,
										"name": "key",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {
											"isExported": true
										},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 1305,
									"name": "IProjectSceneChild"
								}
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/exporters-importers.ts",
								"line": 45,
								"character": 7
							}
						]
					}
				},
				"order": 9999
			},
			{
				"name": "sequence",
				"type": {
					"type": "reference",
					"id": 1282,
					"name": "IProjectSequence"
				},
				"order": 9999
			},
			{
				"name": "urpflanze_version",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "width",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"type": "Interface",
		"name": "IProjectSceneChild",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 53,
			"character": 35
		},
		"properties": [
			{
				"name": "adaptMode",
				"type": {
					"type": "reference",
					"id": 2119,
					"name": "EAdaptMode"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "bClosed",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "bPrimitive",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "bUseParent",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "bUseRecursion",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "children",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1305,
							"name": "IProjectSceneChild"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "data",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 468,
							"name": "ISceneChildDrawerData"
						}
					],
					"name": "Partial"
				},
				"order": 9999
			},
			{
				"name": "depth",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "id",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "order",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "parentId",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "props",
				"type": {
					"type": "reference",
					"id": 1343,
					"name": "TProjectSceneChildProps"
				},
				"order": 9999
			},
			{
				"name": "shape",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "style",
				"type": {
					"type": "reference",
					"id": 1346,
					"name": "TProjectDrawerProps"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "vertexCallback",
				"type": {
					"type": "reference",
					"id": 521,
					"name": "IVertexCallbackAnimation"
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"type": "Interface",
		"name": "IProjectSequence",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 14,
			"character": 33
		},
		"properties": [
			{
				"name": "duration",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "framerate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"type": "Interface",
		"name": "ISVGParsed",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 140,
			"character": 27
		},
		"properties": [
			{
				"name": "buffers",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 1323,
							"name": "ISVGParsedPath"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "viewBox",
				"type": {
					"type": "tuple",
					"elements": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				},
				"order": 9999
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"type": "Interface",
		"name": "ISVGParsedPath",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 129,
			"character": 31
		},
		"properties": [
			{
				"name": "buffer",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999
			},
			{
				"name": "closed",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "fill",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "stroke",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Services.Export/Import"
	},
	{
		"name": "TProjectDrawerProps",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 109,
			"character": 31
		},
		"parameter": {
			"name": "TProjectDrawerProps",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1347,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/services/types/exporters-importers.ts",
							"line": 109,
							"character": 33
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TProjectSceneChildProps",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/exporters-importers.ts",
			"line": 105,
			"character": 35
		},
		"parameter": {
			"name": "TProjectSceneChildProps",
			"type": {
				"type": "intersection",
				"types": [
					{
						"name": "Partial",
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 499,
										"name": "TSceneChildPropsExtendedKeys"
									},
									{
										"type": "reference",
										"id": 500,
										"name": "TSceneChildPropExtendedValue"
									}
								],
								"name": "Record"
							}
						],
						"order": 9999
					},
					{
						"type": "reflection",
						"declaration": {
							"id": 1344,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 1345,
									"name": "loop",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true,
										"isOptional": true
									},
									"sources": [
										{
											"fileName": "src/services/types/exporters-importers.ts",
											"line": 106,
											"character": 5
										}
									],
									"type": {
										"type": "reference",
										"id": 515,
										"name": "IShapeLoopAnimation"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										1345
									]
								}
							],
							"sources": [
								{
									"fileName": "src/services/types/exporters-importers.ts",
									"line": 105,
									"character": 115
								}
							]
						},
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Export/Import"
	},
	{
		"type": "Interface",
		"name": "IRenderEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renderer.ts",
			"line": 47,
			"character": 30
		},
		"properties": [
			{
				"name": "renderer:render-frame",
				"type": {
					"type": "reference",
					"id": 1733,
					"name": "IRenderFrame"
				},
				"order": 9999
			},
			{
				"name": "renderer:start",
				"type": {
					"type": "reference",
					"id": 1728,
					"name": "IRenderStart"
				},
				"order": 9999
			}
		],
		"category": "Services.Renderer"
	},
	{
		"type": "Interface",
		"name": "IRenderFrame",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renderer.ts",
			"line": 35,
			"character": 29
		},
		"properties": [
			{
				"name": "forPart",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "frame",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "part",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "render_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_frames",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_parts",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"category": "Services.Renderer"
	},
	{
		"type": "Interface",
		"name": "IRenderSettings",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renderer.ts",
			"line": 14,
			"character": 32
		},
		"properties": [
			{
				"name": "noBackground",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "quality",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "size",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 1744,
					"name": "TRenderType"
				},
				"order": 9999
			}
		],
		"category": "Services.Renderer"
	},
	{
		"type": "Interface",
		"name": "IRenderStart",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renderer.ts",
			"line": 25,
			"character": 29
		},
		"properties": [
			{
				"name": "estimated_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "forPart",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_frames",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_parts",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"category": "Services.Renderer"
	},
	{
		"name": "TRenderImageType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renderer.ts",
			"line": 4,
			"character": 28
		},
		"parameter": {
			"name": "TRenderImageType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "image/png",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "image/jpeg",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Renderer"
	},
	{
		"name": "TRenderType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renderer.ts",
			"line": 9,
			"character": 23
		},
		"parameter": {
			"name": "TRenderType",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "TRenderImageType",
						"type": "reference",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "image/svg+xml",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Renderer"
	},
	{
		"type": "Interface",
		"name": "ISceneChildPropsExtendedShapeLoop",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 23,
			"character": 50
		},
		"properties": [
			{
				"name": "dynamyc",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "end",
				"type": {
					"type": "reference",
					"id": 546,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "inc",
				"type": {
					"type": "reference",
					"id": 546,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "start",
				"type": {
					"type": "reference",
					"id": 546,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "vertex",
				"type": {
					"type": "reference",
					"id": 511,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "vec2"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "ICallableValue"
				},
				"order": 9999
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"type": "Interface",
		"name": "ISceneChildPropsExtendedVertexCallback",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 103,
			"character": 55
		},
		"extends": [
			"ICallableValue"
		],
		"properties": [
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TDrawerPropExtendedValue",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 92,
			"character": 36
		},
		"parameter": {
			"name": "TDrawerPropExtendedValue",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "TAnimation",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "ICallableValue",
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T",
								"default": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "reference",
											"name": "vec2"
										}
									]
								}
							}
						],
						"order": 9999
					},
					{
						"name": "TDrawerProp",
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T",
								"default": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "reference",
											"name": "vec2"
										}
									]
								}
							}
						],
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 504,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TDrawerPropsExtendedKeys",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 86,
			"character": 36
		},
		"parameter": {
			"name": "TDrawerPropsExtendedKeys",
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "reference",
					"id": 408,
					"name": "IDrawerStreamProps"
				}
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TSceneChildPropExtendedValue",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 73,
			"character": 40
		},
		"parameter": {
			"name": "TSceneChildPropExtendedValue",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "ISceneChildPropsExtendedShapeLoop",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "TTransformable",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "TAnimation",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "ICallableValue",
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T",
								"default": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "reference",
											"name": "vec2"
										}
									]
								}
							}
						],
						"order": 9999
					},
					{
						"name": "TSceneChildProp",
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T",
								"default": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "reference",
											"name": "vec2"
										}
									]
								}
							}
						],
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 501,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TSceneChildPropsExtendedKeys",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 59,
			"character": 40
		},
		"parameter": {
			"name": "TSceneChildPropsExtendedKeys",
			"type": {
				"type": "typeOperator",
				"operator": "keyof",
				"target": {
					"type": "intersection",
					"types": [
						{
							"type": "reference",
							"name": "IShapeLoopProps"
						},
						{
							"type": "reference",
							"name": "IShapeRecursiveProps"
						},
						{
							"type": "reference",
							"name": "IShapeBufferProps"
						},
						{
							"type": "reference",
							"name": "IShapePrimitiveProps"
						},
						{
							"type": "reference",
							"name": "IPolygonProps"
						},
						{
							"type": "reference",
							"name": "ILissajousProps"
						},
						{
							"type": "reference",
							"name": "ISpiralProps"
						},
						{
							"type": "reference",
							"name": "IRoseProps"
						},
						{
							"type": "reference",
							"name": "ISuperShapeProps"
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TSceneChildUtilitiesSettings",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 129,
			"character": 40
		},
		"parameter": {
			"name": "TSceneChildUtilitiesSettings",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 509,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/services/types/scene-utilities.ts",
							"line": 129,
							"character": 42
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSceneChildUtilitiesSettingsKeys",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 124,
			"character": 44
		},
		"parameter": {
			"name": "TSceneChildUtilitiesSettingsKeys",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "TSceneChildPropsExtendedKeys",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "TDrawerPropsExtendedKeys",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "TSettingsExtendedKeys",
						"type": "reference",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSettingExtendedValue",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 120,
			"character": 33
		},
		"parameter": {
			"name": "TSettingExtendedValue",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "string",
						"type": "intrinsic",
						"order": 9999
					},
					{
						"name": "number",
						"type": "intrinsic",
						"order": 9999
					},
					{
						"name": "boolean",
						"type": "intrinsic",
						"order": 9999
					},
					{
						"name": "ISceneChildPropsExtendedVertexCallback",
						"type": "reference",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSettingsExtendedKeys",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 111,
			"character": 33
		},
		"parameter": {
			"name": "TSettingsExtendedKeys",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "id",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "name",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "order",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "bClosed",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "bUseParent",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "bUseRecursion",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "adaptMode",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "vertexCallback",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TTransformable",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 48,
			"character": 26
		},
		"parameter": {
			"name": "TTransformable",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 496,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 497,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/services/types/scene-utilities.ts",
									"line": 49,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "transformable-prop"
							}
						},
						{
							"id": 498,
							"name": "value",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/services/types/scene-utilities.ts",
									"line": 50,
									"character": 6
								}
							],
							"type": {
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"name": "vec2"
									}
								]
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								497,
								498
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/types/scene-utilities.ts",
							"line": 48,
							"character": 28
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"name": "TTransformableType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 42,
			"character": 30
		},
		"parameter": {
			"name": "TTransformableType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "none",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "angle",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "scene-size-percentage",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "scene-size-percentage-inverse",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Scene Utilities"
	},
	{
		"type": "Interface",
		"name": "ISequenceMeta",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/timeline.ts",
			"line": 17,
			"character": 30
		},
		"properties": [
			{
				"name": "duration",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "framerate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "frames",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"category": "Services.Timeline"
	},
	{
		"type": "Interface",
		"name": "ITimelineEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/timeline.ts",
			"line": 4,
			"character": 32
		},
		"properties": [
			{
				"name": "timeline:change_status",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "start",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "stop",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "pause",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "timeline:progress",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 91,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"children": [
							{
								"id": 92,
								"name": "current_frame",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/timeline.ts",
										"line": 8,
										"character": 15
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 93,
								"name": "current_time",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/timeline.ts",
										"line": 9,
										"character": 14
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 94,
								"name": "fps",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/timeline.ts",
										"line": 10,
										"character": 5
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									92,
									93,
									94
								]
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/timeline.ts",
								"line": 7,
								"character": 21
							}
						]
					}
				},
				"order": 9999
			},
			{
				"name": "timeline:update_sequence",
				"type": {
					"type": "reference",
					"id": 95,
					"name": "ISequenceMeta"
				},
				"order": 9999
			}
		],
		"category": "Services.Timeline"
	},
	[
		{
			"name": "Easings",
			"type": "Object",
			"order": 9999,
			"source": {
				"fileName": "src/services/animation/Easings.ts",
				"line": 6,
				"character": 13
			},
			"description": "Easing functions",
			"functions": [
				{
					"name": "backIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "s",
							"description": "overshoot (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "backInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "s",
							"description": "overshoot (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "backOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "s",
							"description": "overshoot (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "bounceIn",
					"parameters": [
						{
							"name": "time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "bounceInOut",
					"parameters": [
						{
							"name": "time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "bounceOut",
					"parameters": [
						{
							"name": "time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "circularIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "circularInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "circularOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "cubicIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "cubicInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "cubicOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "elasticIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "a",
							"description": "amplitude (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "p",
							"description": "period (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "elasticInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "a",
							"description": "amplitude (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "p",
							"description": "period (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "elasticOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "a",
							"description": "amplitude (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "p",
							"description": "period (optional)",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "exponentialIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "exponentialInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "exponentialOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "linear",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quadraticIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duratte",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quadraticInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quadraticOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quarticIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quarticInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quarticOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quinticIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quinticInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "quinticOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "sinusoidalIn",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "sinusoidalInOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "sinusoidalOut",
					"parameters": [
						{
							"name": "time",
							"description": "current time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "start",
							"description": "start value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "end",
							"description": "end value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "duration",
							"description": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				}
			],
			"category": "Services.Animation"
		},
		{
			"name": "Simple",
			"type": "Object",
			"order": 9999,
			"source": {
				"fileName": "src/services/animation/Simple.ts",
				"line": 17,
				"character": 12
			},
			"functions": [
				{
					"name": "compose",
					"parameters": [
						{
							"name": "simpleAnimation",
							"type": {
								"type": "reference",
								"id": 531,
								"name": "ISimpleAnimation"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"id": 2112,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "reference",
										"name": "Float32Array"
									}
								]
							}
						],
						"name": "TSceneChildProp"
					},
					"order": 9999
				},
				{
					"name": "loop",
					"parameters": [
						{
							"name": "props",
							"type": {
								"type": "reference",
								"id": 551,
								"name": "TSimpleAnimationLoop"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"id": 2112,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "reference",
										"name": "Float32Array"
									}
								]
							}
						],
						"name": "TSceneChildProp"
					},
					"order": 9999
				},
				{
					"name": "static",
					"parameters": [
						{
							"name": "props",
							"type": {
								"type": "reference",
								"id": 553,
								"name": "TSimpleAnimationStatic"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"id": 2112,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "reference",
										"name": "Float32Array"
									}
								]
							}
						],
						"name": "TSceneChildProp"
					},
					"order": 9999
				},
				{
					"name": "uncontrolledLoop",
					"parameters": [
						{
							"name": "props",
							"type": {
								"type": "reference",
								"id": 552,
								"name": "TSimpleAnimationUncontrolledLoop"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"id": 2112,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "reference",
										"name": "Float32Array"
									}
								]
							}
						],
						"name": "TSceneChildProp"
					},
					"order": 9999
				}
			],
			"category": "Services.Animation"
		},
		{
			"name": "Drawer",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/drawers/Drawer.ts",
				"line": 21,
				"character": 21
			},
			"extends": [
				"Emitter"
			],
			"description": "Abstract Drawer",
			"constructor_ref": {
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "Scene",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"defaultValue": "undefined",
						"order": 9999
					},
					{
						"name": "ratio",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"defaultValue": "undefined",
						"order": 9999
					},
					{
						"name": "duration",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "framerate",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				]
			},
			"properties": [
				{
					"name": "animation_id",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "null",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "draw_id",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "null",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "drawerOptions",
					"type": {
						"type": "typeParameter",
						"name": "IADrawerOptions",
						"constraint": {
							"type": "reference",
							"id": 386,
							"name": "IDrawerOptions"
						}
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "ratio",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "redraw_id",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "null",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "resolution",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "scene",
					"type": {
						"type": "reference",
						"id": 2070,
						"name": "Scene"
					},
					"order": 9999,
					"bOptional": true,
					"bProtected": true
				},
				{
					"name": "timeline",
					"type": {
						"type": "reference",
						"id": 100,
						"name": "Timeline"
					},
					"order": 9999,
					"bProtected": true
				}
			],
			"methods": [
				{
					"name": "animate",
					"description": "Internal tick animation",
					"parameters": [
						{
							"name": "timestamp",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "draw",
					"description": "Draw current scene",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "getOption",
					"description": "Return option valie or default",
					"parameters": [
						{
							"name": "name",
							"type": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "typeParameter",
										"name": "IADrawerOptions",
										"constraint": {
											"type": "reference",
											"id": 386,
											"name": "IDrawerOptions"
										}
									}
								}
							},
							"order": 9999
						},
						{
							"name": "defaultValue",
							"description": "\n",
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeParameter",
									"name": "K",
									"constraint": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "IADrawerOptions",
											"constraint": {
												"type": "reference",
												"id": 386,
												"name": "IDrawerOptions"
											}
										}
									}
								},
								"objectType": {
									"type": "typeParameter",
									"name": "IADrawerOptions",
									"constraint": {
										"type": "reference",
										"id": 386,
										"name": "IDrawerOptions"
									}
								}
							},
							"order": 9999
						}
					],
					"typeParameter": [
						{
							"id": 1390,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "IADrawerOptions",
									"constraint": {
										"type": "reference",
										"id": 386,
										"name": "IDrawerOptions"
									}
								}
							}
						}
					],
					"return_type": {
						"type": "indexedAccess",
						"indexType": {
							"type": "typeParameter",
							"name": "K",
							"constraint": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "IADrawerOptions",
									"constraint": {
										"type": "reference",
										"id": 386,
										"name": "IDrawerOptions"
									}
								}
							}
						},
						"objectType": {
							"type": "typeParameter",
							"name": "IADrawerOptions",
							"constraint": {
								"type": "reference",
								"id": 386,
								"name": "IDrawerOptions"
							}
						}
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getOptions",
					"description": "Return all options",
					"parameters": [],
					"return_type": {
						"type": "typeParameter",
						"name": "IADrawerOptions",
						"constraint": {
							"type": "reference",
							"id": 386,
							"name": "IDrawerOptions"
						}
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getRatio",
					"description": "Return drawer ratio",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getScene",
					"description": "Return scene",
					"parameters": [],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Scene"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getTimeline",
					"description": "Return timeline",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"id": 100,
						"name": "Timeline"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "pauseAnimation",
					"description": "Pause animation drawing",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "playAnimation",
					"description": "Play animation drawing",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "redraw",
					"description": "Redraw",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "resize",
					"description": "Resize scene and canvas",
					"parameters": [
						{
							"name": "width",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "height",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "ratio",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setOption",
					"description": "Set draw option",
					"parameters": [
						{
							"name": "name",
							"description": "\n",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "K",
										"type": "typeParameter",
										"order": 9999
									},
									{
										"name": "IADrawerOptions",
										"type": "typeParameter",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "value",
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeParameter",
									"name": "K",
									"constraint": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "typeParameter",
											"name": "IADrawerOptions",
											"constraint": {
												"type": "reference",
												"id": 386,
												"name": "IDrawerOptions"
											}
										}
									}
								},
								"objectType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "typeParameter",
											"name": "IADrawerOptions",
											"constraint": {
												"type": "reference",
												"id": 386,
												"name": "IDrawerOptions"
											}
										}
									],
									"name": "Required"
								}
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"typeParameter": [
						{
							"id": 1385,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "IADrawerOptions",
									"constraint": {
										"type": "reference",
										"id": 386,
										"name": "IDrawerOptions"
									}
								}
							}
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setRatio",
					"description": "Resize by ratio",
					"parameters": [
						{
							"name": "ratio",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setScene",
					"description": "Set scene",
					"parameters": [
						{
							"name": "scene",
							"description": "\n",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "startAnimation",
					"description": "Start animation drawing",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "stopAnimation",
					"description": "Stop animation drawing",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "eachGhosts",
					"description": "Each ghosts index and create drawerOptions to pass at the draw method",
					"parameters": [
						{
							"name": "drawerOptions",
							"type": {
								"type": "typeParameter",
								"name": "T",
								"constraint": {
									"type": "reference",
									"id": 386,
									"name": "IDrawerOptions"
								}
							},
							"order": 9999
						},
						{
							"name": "timeline",
							"type": {
								"type": "reference",
								"id": 100,
								"name": "Timeline"
							},
							"order": 9999
						},
						{
							"name": "ghostCallback",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 1423,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 1424,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 1425,
													"name": "ghostDrawerOptions",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "intersection",
														"types": [
															{
																"type": "typeParameter",
																"name": "T",
																"constraint": {
																	"type": "reference",
																	"id": 386,
																	"name": "IDrawerOptions"
																}
															},
															{
																"type": "reflection",
																"declaration": {
																	"id": 1426,
																	"name": "__type",
																	"kind": 65536,
																	"kindString": "Type literal",
																	"flags": {},
																	"children": [
																		{
																			"id": 1427,
																			"name": "ghostIndex",
																			"kind": 32,
																			"kindString": "Variable",
																			"flags": {
																				"isOptional": true
																			},
																			"sources": [
																				{
																					"fileName": "src/services/drawers/Drawer.ts",
																					"line": 312,
																					"character": 54
																				}
																			],
																			"type": {
																				"type": "union",
																				"types": [
																					{
																						"type": "intrinsic",
																						"name": "undefined"
																					},
																					{
																						"type": "intrinsic",
																						"name": "number"
																					}
																				]
																			}
																		}
																	],
																	"groups": [
																		{
																			"title": "Variables",
																			"kind": 32,
																			"children": [
																				1427
																			]
																		}
																	],
																	"sources": [
																		{
																			"fileName": "src/services/drawers/Drawer.ts",
																			"line": 312,
																			"character": 41
																		}
																	]
																}
															}
														]
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/services/drawers/Drawer.ts",
											"line": 312,
											"character": 16
										}
									]
								}
							},
							"order": 9999
						}
					],
					"typeParameter": [
						{
							"id": 1419,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"id": 386,
								"name": "IDrawerOptions"
							}
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "getStreamDrawerProp",
					"description": "Return a style value",
					"parameters": [
						{
							"name": "shape",
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "typeParameter",
										"name": "T",
										"constraint": {
											"type": "reference",
											"id": 408,
											"name": "IDrawerStreamProps"
										}
									}
								],
								"name": "ShapePrimitive"
							},
							"order": 9999
						},
						{
							"name": "key",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "T",
									"constraint": {
										"type": "reference",
										"id": 408,
										"name": "IDrawerStreamProps"
									}
								}
							},
							"order": 9999
						},
						{
							"name": "propArguments",
							"type": {
								"type": "reference",
								"id": 397,
								"name": "IDrawerPropArguments"
							},
							"order": 9999
						},
						{
							"name": "defaultValue",
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"typeParameter": [
						{
							"id": 1412,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "reference",
								"id": 408,
								"name": "IDrawerStreamProps"
							}
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "ghostifyColor",
					"description": "Create color based on ghostMultiplier",
					"parameters": [
						{
							"name": "color",
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"order": 9999
						},
						{
							"name": "ghostMultiplier",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"name": "DrawerCanvas",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/drawers/drawer-canvas/DrawerCanvas.ts",
				"line": 17,
				"character": 18
			},
			"extends": [
				"Drawer"
			],
			"constructor_ref": {
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 2070,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "canvasOrContainer",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "drawerOptions",
						"type": {
							"type": "reference",
							"id": 1474,
							"name": "GDrawerCanvasOptions"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "ratio",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"defaultValue": "undefined",
						"order": 9999
					},
					{
						"name": "duration",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "framerate",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "bBuffering",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					}
				]
			},
			"properties": [
				{
					"name": "bBuffering",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "buffer",
					"type": {
						"type": "reference",
						"id": 1451,
						"name": "FrameBuffer"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "canvas",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "HTMLCanvasElement",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "OffscreenCanvas",
								"type": "reference",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "context",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "CanvasRenderingContext2D",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "OffscreenCanvasRenderingContext2D",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "null",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "drawerOptions",
					"type": {
						"type": "typeParameter",
						"name": "GDrawerCanvasOptions",
						"constraint": {
							"type": "reference",
							"id": 440,
							"name": "IDrawerCanvasOptions"
						},
						"default": {
							"type": "reference",
							"name": "IDrawerCanvasOptions"
						}
					},
					"order": 9999,
					"bProtected": true
				}
			],
			"methods": [
				{
					"name": "applyDraw",
					"parameters": [
						{
							"name": "options",
							"type": {
								"type": "intersection",
								"types": [
									{
										"name": "IDrawerCanvasOptions",
										"type": "reference",
										"order": 9999
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1525,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1526,
													"name": "ghostIndex",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/drawers/drawer-canvas/DrawerCanvas.ts",
															"line": 347,
															"character": 62
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1526
													]
												}
											],
											"sources": [
												{
													"fileName": "src/services/drawers/drawer-canvas/DrawerCanvas.ts",
													"line": 347,
													"character": 49
												}
											]
										},
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "draw",
					"description": "Draw current scene",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "flushBuffer",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getBBuffering",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getCanvas",
					"description": "Return canvas element",
					"parameters": [],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "HTMLCanvasElement"
							},
							{
								"type": "reference",
								"name": "OffscreenCanvas"
							}
						]
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getContext",
					"description": "Return canvas context",
					"parameters": [],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "CanvasRenderingContext2D"
							},
							{
								"type": "reference",
								"name": "OffscreenCanvasRenderingContext2D"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getStoredFrames",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "redraw",
					"description": "Redraw",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "resize",
					"description": "Resize scene and canvas",
					"parameters": [
						{
							"name": "width",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "height",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "ratio",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setBuffering",
					"parameters": [
						{
							"name": "bBuffering",
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setCanvas",
					"description": "Set the canvas or append to container",
					"parameters": [
						{
							"name": "canvasOrContainer",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "HTMLElement",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "HTMLCanvasElement",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvas",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setOption",
					"description": "Set draw option",
					"parameters": [
						{
							"name": "name",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "K",
										"type": "typeParameter",
										"order": 9999
									},
									{
										"name": "IDrawerCanvasOptions",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "value",
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeParameter",
									"name": "K",
									"constraint": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"id": 440,
											"name": "IDrawerCanvasOptions"
										}
									}
								},
								"objectType": {
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "IDrawerCanvasOptions"
										}
									],
									"name": "Required"
								}
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"typeParameter": [
						{
							"id": 1515,
							"name": "K",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {},
							"comment": {},
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 440,
									"name": "IDrawerCanvasOptions"
								}
							}
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setScene",
					"description": "Set scene",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "drawSimmetricLines",
					"parameters": [
						{
							"name": "context",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "CanvasRenderingContext2D",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvasRenderingContext2D",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "simmetricLines",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "width",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "height",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "color",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"name": "FrameBuffer",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/drawers/drawer-canvas/FrameBuffer.ts",
				"line": 6,
				"character": 17
			},
			"properties": [
				{
					"name": "frames",
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1453,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 1454,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 1455,
											"name": "frameNumber",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "number"
											}
										}
									],
									"type": {
										"type": "reference",
										"name": "ImageData"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/services/drawers/drawer-canvas/FrameBuffer.ts",
									"line": 7,
									"character": 16
								}
							]
						}
					},
					"order": 9999,
					"bPrivate": true
				}
			],
			"methods": [
				{
					"name": "count",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "exist",
					"parameters": [
						{
							"name": "frameNumber",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "flush",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "get",
					"parameters": [
						{
							"name": "frameNumber",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "ImageData"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getStoredFrames",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "push",
					"parameters": [
						{
							"name": "frameNumber",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "context",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "CanvasRenderingContext2D",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvasRenderingContext2D",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"name": "DrawerSVG",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/drawers/drawer-svg/DrawerSVG.ts",
				"line": 22,
				"character": 15
			},
			"extends": [
				"Drawer"
			],
			"description": "Abstract drawer",
			"constructor_ref": {
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "Scene",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "container",
						"type": {
							"type": "reference",
							"name": "HTMLElement"
						},
						"order": 9999
					},
					{
						"name": "drawerOptions",
						"type": {
							"type": "reference",
							"id": 428,
							"name": "IDrawerSVGOptions"
						},
						"defaultValue": "{}",
						"order": 9999
					},
					{
						"name": "ratio",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"defaultValue": "undefined",
						"order": 9999
					},
					{
						"name": "duration",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "framerate",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				]
			},
			"properties": [
				{
					"name": "container",
					"type": {
						"type": "reference",
						"name": "HTMLElement"
					},
					"order": 9999,
					"bPrivate": true
				}
			],
			"methods": [
				{
					"name": "appendSVGFromPaths",
					"parameters": [
						{
							"name": "paths",
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SVGPathElement"
									}
								],
								"name": "Array"
							},
							"order": 9999
						},
						{
							"name": "drawerOptions",
							"type": {
								"type": "reference",
								"id": 428,
								"name": "IDrawerSVGOptions"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bProtected": true
				},
				{
					"name": "draw",
					"description": "Draw current scene",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "draw",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						},
						{
							"name": "paths",
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "SVGPathElement"
									}
								],
								"name": "Array"
							},
							"order": 9999
						},
						{
							"name": "options",
							"type": {
								"type": "intersection",
								"types": [
									{
										"name": "IDrawerSVGOptions",
										"type": "reference",
										"order": 9999
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 1632,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"children": [
												{
													"id": 1633,
													"name": "ghostIndex",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/drawers/drawer-svg/DrawerSVG.ts",
															"line": 137,
															"character": 43
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														1633
													]
												}
											],
											"sources": [
												{
													"fileName": "src/services/drawers/drawer-svg/DrawerSVG.ts",
													"line": 137,
													"character": 30
												}
											]
										},
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true,
					"bStatic": true
				},
				{
					"name": "setColor",
					"parameters": [
						{
							"name": "element",
							"type": {
								"type": "reference",
								"name": "SVGElement"
							},
							"order": 9999
						},
						{
							"name": "type",
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "fill",
										"order": 9999
									},
									{
										"type": "stringLiteral",
										"value": "stroke",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "color",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true,
					"bStatic": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"name": "Emitter",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/events/Emitter.ts",
				"line": 9,
				"character": 22
			},
			"description": "Class used for emit and dispatch events",
			"properties": [
				{
					"name": "callbacks",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reflection",
										"declaration": {
											"id": 63,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {},
											"signatures": [
												{
													"id": 64,
													"name": "__call",
													"kind": 4096,
													"kindString": "Call signature",
													"flags": {},
													"parameters": [
														{
															"id": 65,
															"name": "args",
															"kind": 32768,
															"kindString": "Parameter",
															"flags": {},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "typeOperator",
																	"operator": "keyof",
																	"target": {
																		"type": "typeParameter",
																		"name": "EventTypes"
																	}
																},
																"objectType": {
																	"type": "typeParameter",
																	"name": "EventTypes"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "any"
													}
												}
											],
											"sources": [
												{
													"fileName": "src/services/events/Emitter.ts",
													"line": 10,
													"character": 51
												}
											]
										}
									}
								],
								"name": "Array"
							}
						],
						"name": "Record"
					},
					"order": 9999,
					"bPrivate": true
				}
			],
			"methods": [
				{
					"name": "attach",
					"description": "Attach callback at event",
					"parameters": [
						{
							"name": "e",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							"order": 9999
						},
						{
							"name": "callback",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 72,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 73,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 74,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "typeParameter",
																"name": "EventTypes"
															}
														},
														"objectType": {
															"type": "typeParameter",
															"name": "EventTypes"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/services/events/Emitter.ts",
											"line": 23,
											"character": 45
										}
									]
								}
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "detach",
					"description": "Remove callbach listener at event",
					"parameters": [
						{
							"name": "e",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							"order": 9999
						},
						{
							"name": "callback",
							"type": {
								"type": "reflection",
								"declaration": {
									"id": 79,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"signatures": [
										{
											"id": 80,
											"name": "__call",
											"kind": 4096,
											"kindString": "Call signature",
											"flags": {},
											"parameters": [
												{
													"id": 81,
													"name": "value",
													"kind": 32768,
													"kindString": "Parameter",
													"flags": {
														"isOptional": true
													},
													"type": {
														"type": "indexedAccess",
														"indexType": {
															"type": "typeOperator",
															"operator": "keyof",
															"target": {
																"type": "typeParameter",
																"name": "EventTypes"
															}
														},
														"objectType": {
															"type": "typeParameter",
															"name": "EventTypes"
														}
													}
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "void"
											}
										}
									],
									"sources": [
										{
											"fileName": "src/services/events/Emitter.ts",
											"line": 38,
											"character": 45
										}
									]
								}
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "dispatch",
					"description": "Dispatch event",
					"parameters": [
						{
							"name": "e",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							"order": 9999
						},
						{
							"name": "params",
							"type": {
								"type": "indexedAccess",
								"indexType": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "typeParameter",
										"name": "EventTypes"
									}
								},
								"objectType": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				}
			],
			"category": "Services.Emitter"
		},
		{
			"name": "GCODEExporter",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/exporters/GCODEExporter.ts",
				"line": 5,
				"character": 19
			},
			"methods": [
				{
					"name": "concat",
					"parameters": [
						{
							"name": "result",
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "string"
									}
								],
								"name": "Array"
							},
							"order": 9999
						},
						{
							"name": "data",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "Array",
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "string"
											}
										],
										"order": 9999
									},
									{
										"name": "string",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "generate",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"id": 1332,
										"name": "IGCODESettings"
									}
								],
								"name": "Required"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "gotoTo",
					"parameters": [
						{
							"name": "x",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "y",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "round",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "velocity",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "home",
					"parameters": [
						{
							"name": "penUpCommand",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "lineTo",
					"parameters": [
						{
							"name": "x",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "y",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "velocity",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "round",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "moveTo",
					"parameters": [
						{
							"name": "penUpCommand",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						},
						{
							"name": "penDownCommand",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						},
						{
							"name": "x",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "y",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "round",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parse",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1332,
								"name": "IGCODESettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "round",
					"parameters": [
						{
							"name": "value",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "round",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "setCurrentMachinePosition",
					"parameters": [
						{
							"name": "x",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "y",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "round",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "setCurrentWorkspacePosition",
					"parameters": [
						{
							"name": "x",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "y",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "round",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "setUnit",
					"parameters": [
						{
							"name": "unit",
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "millimeters",
										"order": 9999
									},
									{
										"type": "stringLiteral",
										"value": "inches",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "useAbsolutePosition",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "useRelativePosition",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				}
			]
		},
		{
			"name": "JSONExporter",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/exporters/JSONExporter.ts",
				"line": 22,
				"character": 18
			},
			"methods": [
				{
					"name": "filterDataTye",
					"parameters": [
						{
							"name": "data",
							"type": {
								"type": "typeParameter",
								"name": "T"
							},
							"order": 9999
						},
						{
							"name": "dataType",
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "props",
										"order": 9999
									},
									{
										"type": "stringLiteral",
										"value": "drawer",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"typeParameter": [
						{
							"id": 1867,
							"name": "T",
							"kind": 131072,
							"kindString": "Type parameter",
							"flags": {}
						}
					],
					"return_type": {
						"type": "typeParameter",
						"name": "T"
					},
					"order": 9999,
					"bPrivate": true,
					"bStatic": true
				},
				{
					"name": "parse",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"EmptyProject\"",
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parseAsProject",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"defaultValue": "\"EmptyProject\"",
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"id": 1285,
						"name": "IProject"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parseSceneChild",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "parentId",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "string",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "depth",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0",
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"id": 1305,
						"name": "IProjectSceneChild"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "toString",
					"parameters": [
						{
							"name": "project",
							"type": {
								"type": "reference",
								"id": 1285,
								"name": "IProject"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"name": "SVGExporter",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/exporters/SVGExporter.ts",
				"line": 18,
				"character": 17
			},
			"methods": [
				{
					"name": "parse",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1349,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Drawer"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1722,
								"name": "IRenderSettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parseAsSVG",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1349,
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									},
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "Drawer"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1722,
								"name": "IRenderSettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"name": "SVGElement"
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"name": "JSONImporter",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/importers/JSONImporter.ts",
				"line": 21,
				"character": 18
			},
			"methods": [
				{
					"name": "createEmptyProject",
					"description": "Empty project with default value",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"id": 1285,
						"name": "IProject"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parse",
					"description": "Parse string to DrawerCanvas",
					"parameters": [
						{
							"name": "project_json",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parseSceneChild",
					"parameters": [
						{
							"name": "projectSceneChild",
							"type": {
								"type": "reference",
								"id": 1305,
								"name": "IProjectSceneChild"
							},
							"order": 9999
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SceneChild"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"name": "SVGImporter",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/importers/SVGImporter.ts",
				"line": 27,
				"character": 17
			},
			"properties": [
				{
					"name": "COMMENT_REGEX",
					"description": "Match commments",
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/<!--([\\s\\S]*?)-->/g",
					"order": 9999,
					"bStatic": true,
					"bReadonly": true
				},
				{
					"name": "HEX_REGEX",
					"description": "Match hex color",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})\"",
					"order": 9999,
					"bStatic": true,
					"bReadonly": true
				},
				{
					"name": "SVG_REGEX",
					"description": "Match string is SVG",
					"type": {
						"type": "reference",
						"name": "RegExp"
					},
					"defaultValue": "/^\\s*(?:<\\?xml[^>]*>\\s*)?(?:<!doctype svg[^>]*\\s*(?:\\[?(?:\\s*<![^>]*>\\s*)*\\]?)*[^>]*>\\s*)?(?:<svg[^>]*>[^]*<\\/svg>|<svg[^/>]*\\/\\s*>)\\s*$/i",
					"order": 9999,
					"bStatic": true,
					"bReadonly": true
				}
			],
			"methods": [
				{
					"name": "SVGStringToBuffers",
					"description": "Convert SVG string to buffers",
					"parameters": [
						{
							"name": "input",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						},
						{
							"name": "simplify",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0.001",
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1329,
								"name": "ISVGParsed"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "chunk",
					"description": "Separate multiple array",
					"parameters": [
						{
							"name": "arr",
							"type": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Array"
							},
							"order": 9999
						},
						{
							"name": "size",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "2",
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								],
								"name": "Array"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bPrivate": true,
					"bStatic": true
				},
				{
					"name": "elementToPath",
					"description": "Convert SVG Element to Path",
					"parameters": [
						{
							"name": "element",
							"type": {
								"type": "reference",
								"name": "SVGElement"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SVGPathElement"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "fromPercentage",
					"description": "Get percentage to number",
					"parameters": [
						{
							"name": "val",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "number",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "string",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "base",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true,
					"bStatic": true
				},
				{
					"name": "getStyleAttr",
					"description": "Replace 'none' to undefined",
					"parameters": [
						{
							"name": "name",
							"type": {
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "fill",
										"order": 9999
									},
									{
										"type": "stringLiteral",
										"value": "stroke",
										"order": 9999
									},
									{
										"type": "stringLiteral",
										"value": "stroke-width",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "element",
							"type": {
								"type": "reference",
								"name": "SVGElement"
							},
							"order": 9999
						},
						{
							"name": "defaultColor",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "undefined",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "string",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"order": 9999,
					"bPrivate": true,
					"bStatic": true
				},
				{
					"name": "getViewbox",
					"description": "Return SVG viewBox\nIf it is not present, calculate it based on elements",
					"parameters": [
						{
							"name": "svg",
							"type": {
								"type": "reference",
								"name": "SVGElement"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "isSVG",
					"description": "Check passed input is valid SVG string",
					"parameters": [
						{
							"name": "input",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parse",
					"description": "Convert SVG string into DrawerCanvas",
					"parameters": [
						{
							"name": "input",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						},
						{
							"name": "simplify",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0.001",
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parseAsShape",
					"description": "Convert SVG string to Shape or ShapeBuffer",
					"parameters": [
						{
							"name": "input",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						},
						{
							"name": "simplify",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0.001",
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Shape"
							},
							{
								"type": "reference",
								"name": "ShapeBuffer"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "parsedToShape",
					"description": "Convert parsed SVG to Shape or ShapeBuffer",
					"parameters": [
						{
							"name": "parsed",
							"type": {
								"type": "reference",
								"id": 1329,
								"name": "ISVGParsed"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "Shape"
							},
							{
								"type": "reference",
								"name": "ShapeBuffer"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "pathIsClosed",
					"description": "Check path is closed",
					"parameters": [
						{
							"name": "path",
							"type": {
								"type": "reference",
								"name": "SVGPathElement"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "pathToBuffer",
					"description": "Convert path to buffer between [-1, 1]",
					"parameters": [
						{
							"name": "path",
							"type": {
								"type": "reference",
								"name": "SVGPathElement"
							},
							"order": 9999
						},
						{
							"name": "steps",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0.01",
							"order": 9999
						},
						{
							"name": "viewBox",
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"defaultValue": "[-1, -1, 1, 1]",
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"name": "Float32Array"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "propagateGroupTransformAndStyleToChildren",
					"description": "Propagate transform for apply to point in path",
					"parameters": [
						{
							"name": "g",
							"description": "\n",
							"type": {
								"type": "reference",
								"name": "SVGGElement"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPrivate": true,
					"bStatic": true
				},
				{
					"name": "simpliyBuffer",
					"description": "Optimize number of points",
					"parameters": [
						{
							"name": "buffer",
							"type": {
								"type": "reference",
								"name": "Float32Array"
							},
							"order": 9999
						},
						{
							"name": "simplifyLevel",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"defaultValue": "0.01",
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"name": "Float32Array"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "stringToSVG",
					"description": "Convert string to SVGElement",
					"parameters": [
						{
							"name": "input",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SVGElement"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"name": "Capturer",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/renderer/Capturer.ts",
				"line": 15,
				"character": 14
			},
			"constructor_ref": {
				"parameters": [
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 1746,
							"name": "ICapturerSettings"
						},
						"defaultValue": "{}",
						"order": 9999
					}
				]
			},
			"properties": [
				{
					"name": "chunks",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Uint8Array"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "encoder",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "jpeg",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "png",
								"order": 9999
							}
						]
					},
					"order": 9999
				},
				{
					"name": "extension",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": ".jpg",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": ".png",
								"order": 9999
							}
						]
					},
					"order": 9999
				},
				{
					"name": "promises",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Promise"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "quality",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "started",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "type",
					"type": {
						"type": "reference",
						"id": 1744,
						"name": "TRenderType"
					},
					"order": 9999
				}
			],
			"methods": [
				{
					"name": "capture",
					"parameters": [
						{
							"name": "canvas",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "HTMLCanvasElement",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvas",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "framenumber",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Promise"
					},
					"order": 9999
				},
				{
					"name": "save",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Uint8Array"
									}
								],
								"name": "Array"
							}
						],
						"name": "Promise"
					},
					"order": 9999
				},
				{
					"name": "setSettings",
					"parameters": [
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1746,
								"name": "ICapturerSettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "start",
					"parameters": [
						{
							"name": "total_frames",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "stop",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "getBlob",
					"parameters": [
						{
							"name": "canvas",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "HTMLCanvasElement",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvas",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "type",
							"type": {
								"type": "reference",
								"id": 1744,
								"name": "TRenderType"
							},
							"order": 9999
						},
						{
							"name": "quality",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Blob"
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "getRenderTime",
					"parameters": [
						{
							"name": "canvas",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "HTMLCanvasElement",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvas",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "type",
							"type": {
								"type": "reference",
								"id": 1743,
								"name": "TRenderImageType"
							},
							"order": 9999
						},
						{
							"name": "quality",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "render",
					"parameters": [
						{
							"name": "canvas",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "HTMLCanvasElement",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "OffscreenCanvas",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "type",
							"type": {
								"type": "reference",
								"id": 1744,
								"name": "TRenderType"
							},
							"order": 9999
						},
						{
							"name": "quality",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Uint8Array"
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Renderer"
		},
		{
			"name": "Renderer",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/renderer/Renderer.ts",
				"line": 19,
				"character": 14
			},
			"extends": [
				"Emitter"
			],
			"properties": [
				{
					"name": "capturer",
					"type": {
						"type": "reference",
						"id": 1749,
						"name": "Capturer"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "renderPromise",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "ICancelablePromise",
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Uint8Array"
									}
								],
								"order": 9999
							},
							{
								"name": "ICancelablePromise",
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "reference",
												"name": "Blob"
											}
										],
										"name": "Array"
									}
								],
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "started",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"order": 9999,
					"bPrivate": true
				}
			],
			"methods": [
				{
					"name": "prepareRenderAnimation",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1722,
								"name": "IRenderSettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1728,
								"name": "IRenderStart"
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "renderAnimation",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1722,
								"name": "IRenderSettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "Blob"
									}
								],
								"name": "Array"
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "renderAnimationPart",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1722,
								"name": "IRenderSettings"
							},
							"order": 9999
						},
						{
							"name": "frame_from",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "frame_count",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "part",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "total_frames",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "total_parts",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "Blob"
									},
									{
										"type": "intrinsic",
										"name": "undefined"
									}
								]
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "renderImage",
					"parameters": [
						{
							"name": "drawer",
							"type": {
								"type": "reference",
								"id": 1473,
								"name": "DrawerCanvas"
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 1722,
								"name": "IRenderSettings"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "Uint8Array"
							}
						],
						"name": "Promise"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "stop",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				}
			],
			"category": "Services.Renderer"
		},
		{
			"type": "Interface",
			"name": "ISceneChildUtiltiesData",
			"order": 9999,
			"source": {
				"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
				"line": 25,
				"character": 40
			},
			"properties": [
				{
					"name": "animable",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "canBArray",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "dataType",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "props",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "drawer",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "settings",
								"order": 9999
							}
						]
					},
					"order": 9999
				},
				{
					"name": "default",
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999
				},
				{
					"name": "default_animate",
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "initialArray",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "label",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "max",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "min",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "name",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "options",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reflection",
								"declaration": {
									"id": 596,
									"name": "__type",
									"kind": 65536,
									"kindString": "Type literal",
									"flags": {
										"isExported": true
									},
									"children": [
										{
											"id": 597,
											"name": "key",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
													"line": 32,
													"character": 22
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										},
										{
											"id": 598,
											"name": "value",
											"kind": 32,
											"kindString": "Variable",
											"flags": {
												"isExported": true
											},
											"sources": [
												{
													"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
													"line": 32,
													"character": 37
												}
											],
											"type": {
												"type": "intrinsic",
												"name": "any"
											}
										}
									],
									"groups": [
										{
											"title": "Variables",
											"kind": 32,
											"children": [
												597,
												598
											]
										}
									],
									"sources": [
										{
											"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
											"line": 32,
											"character": 17
										}
									]
								}
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "step",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "transformation",
					"type": {
						"type": "reference",
						"id": 494,
						"name": "TTransformableType"
					},
					"order": 9999
				},
				{
					"name": "type",
					"type": {
						"type": "reference",
						"id": 607,
						"name": "TPropInputType"
					},
					"order": 9999
				},
				{
					"name": "type_value",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "float",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "int",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TPropInputType",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
				"line": 12,
				"character": 26
			},
			"parameter": {
				"name": "TPropInputType",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "range",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "multiple-range",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "color",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "select",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "checkbox",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "radio",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "slider",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "function",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TSceneChildPropsDataKeys",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
				"line": 46,
				"character": 36
			},
			"parameter": {
				"name": "TSceneChildPropsDataKeys",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "union",
							"order": 9999
						},
						{
							"name": "TDrawerPropsExtendedKeys",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "Exclude",
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 505,
									"name": "TSettingsExtendedKeys"
								},
								{
									"type": "union",
									"types": [
										{
											"type": "stringLiteral",
											"value": "id"
										},
										{
											"type": "stringLiteral",
											"value": "name"
										},
										{
											"type": "stringLiteral",
											"value": "order"
										}
									]
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "SceneChildUtilitiesData",
			"type": "Object",
			"order": 9999,
			"source": {
				"fileName": "src/services/scene-utilities/SceneChildUtilitiesData.ts",
				"line": 73,
				"character": 29
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "SceneUtilities",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/scene-utilities/SceneUtilities.ts",
				"line": 49,
				"character": 20
			},
			"properties": [
				{
					"name": "registeredSceneChilds",
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1180,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 1181,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {},
									"parameters": [
										{
											"id": 1182,
											"name": "type",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1279,
										"name": "SceneChildInstance"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/services/scene-utilities/SceneUtilities.ts",
									"line": 50,
									"character": 31
								}
							]
						}
					},
					"order": 9999,
					"bPrivate": true
				}
			],
			"methods": [
				{
					"name": "add",
					"description": "Add scene child to parent.\nCreate a group if parent is Shape and has one element (not Group) inside.",
					"parameters": [
						{
							"name": "parent",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "SceneChild",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "Scene",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "sceneChild",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "string",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "SceneChild",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 508,
								"name": "TSceneChildUtilitiesSettings"
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"id": 2070,
								"name": "Scene"
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SceneChild"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999
				},
				{
					"name": "copy",
					"description": "Return a copy of sceneChild",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"id": 2070,
								"name": "Scene"
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "strict",
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"defaultValue": "false",
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SceneChild"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999
				},
				{
					"name": "create",
					"description": "Logic creation of a SceneChild\nSince scene is not passed, name are set if they are present in args or type",
					"parameters": [
						{
							"name": "item",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "string",
										"type": "intrinsic",
										"order": 9999
									},
									{
										"name": "SceneChild",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "settings",
							"type": {
								"type": "reference",
								"id": 508,
								"name": "TSceneChildUtilitiesSettings"
							},
							"order": 9999,
							"bOptional": true
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"id": 2070,
								"name": "Scene"
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SceneChild"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999
				},
				{
					"name": "getChildren",
					"description": "Return children of a shape.\nOnly Group has array of children, Shape has only one child.",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SceneChild"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "getChildrenPrimitives",
					"description": "Return only primitive children",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ShapePrimitive"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "getCountOfSceneChildType",
					"description": "Return a number of element type into a scene",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						},
						{
							"name": "type",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "getCountSceneChildOfType",
					"description": "Return number of element from a type",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						},
						{
							"name": "type",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "getNeighbors",
					"description": "Return a list of neighbors",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SceneChild"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "getParent",
					"description": "Get first level parent",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SceneChild"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999
				},
				{
					"name": "getParents",
					"description": "Get all parents",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "SceneChild"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "getRegistered",
					"description": "Return a list of name of registered sceneChild",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getRootParent",
					"description": "Get Root parent",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"name": "SceneChild"
							},
							{
								"type": "intrinsic",
								"name": "null"
							}
						]
					},
					"order": 9999
				},
				{
					"name": "hasLoop",
					"description": "Check scene child is a ShapeLoop",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "hasShapeBuffer",
					"description": "Check sceneChild is a ShapeBuffer an are binded",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "hasShapeChild",
					"description": "Check sceneChild are Shape and has a child",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "isAPrimitive",
					"description": "Check scene child is a Primitive",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "isGroup",
					"description": "Check sceneChild is Group",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "register",
					"description": "Register scene child for fast creation",
					"parameters": [
						{
							"name": "type",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						},
						{
							"name": "ref",
							"type": {
								"type": "reference",
								"id": 1279,
								"name": "SceneChildInstance"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "remove",
					"description": "Remove scene child from",
					"parameters": [
						{
							"name": "from",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "item",
							"type": {
								"type": "reference",
								"id": 2071,
								"name": "SceneChild"
							},
							"order": 9999,
							"bOptional": true
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "set",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"id": 619,
										"name": "SceneChildUtilitiesData"
									}
								}
							},
							"order": 9999
						},
						{
							"name": "value",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "TSceneChildPropExtendedValue",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "TDrawerPropExtendedValue",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "TSettingExtendedValue",
										"type": "reference",
										"order": 9999
									}
								]
							},
							"order": 9999
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "setDrawerProp",
					"description": "Set prop, convert raw function, animation on transformable prop",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "reference",
								"id": 502,
								"name": "TDrawerPropsExtendedKeys"
							},
							"order": 9999
						},
						{
							"name": "value",
							"type": {
								"type": "reference",
								"id": 503,
								"name": "TDrawerPropExtendedValue"
							},
							"order": 9999
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "setProp",
					"description": "Set prop: convert animation or transformable props",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "reference",
								"id": 499,
								"name": "TSceneChildPropsExtendedKeys"
							},
							"order": 9999
						},
						{
							"name": "value",
							"type": {
								"type": "reference",
								"id": 500,
								"name": "TSceneChildPropExtendedValue"
							},
							"order": 9999
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "setSetting",
					"description": "TODO:\nSet Args (props, drawer, other settings)\nSceneChildPropData refactoring",
					"parameters": [
						{
							"name": "sceneChild",
							"type": {
								"type": "reference",
								"name": "SceneChild"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "reference",
								"id": 505,
								"name": "TSettingsExtendedKeys"
							},
							"order": 9999
						},
						{
							"name": "value",
							"type": {
								"type": "reference",
								"id": 506,
								"name": "TSettingExtendedValue"
							},
							"order": 9999
						},
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "unregister",
					"description": "unregister scene child",
					"parameters": [
						{
							"name": "type",
							"type": {
								"type": "intrinsic",
								"name": "string"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"name": "SceneUtilitiesExtended",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/scene-utilities/SceneUtilitiesExtended.ts",
				"line": 20,
				"character": 28
			},
			"properties": [
				{
					"name": "RAW_ARGUMENTS",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"{ repetition, recursion, shape }\"",
					"order": 9999,
					"bPublic": true,
					"bStatic": true,
					"bReadonly": true
				},
				{
					"name": "RAW_ARGUMENTS_WITH_PARENT",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"{ repetition, recursion, shape, parent }\"",
					"order": 9999,
					"bPublic": true,
					"bStatic": true,
					"bReadonly": true
				}
			],
			"methods": [
				{
					"name": "bPropInSceneChildUtilitiesData",
					"description": "Check the prop need transformation when set",
					"parameters": [
						{
							"name": "name",
							"description": "\n",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"id": 619,
										"name": "SceneChildUtilitiesData"
									}
								}
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "bValueAnimation",
					"description": "Check value is TAnimation",
					"parameters": [
						{
							"name": "value",
							"description": "\n",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "TAnimation",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "any",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "bValueLoop",
					"parameters": [
						{
							"name": "value",
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "bValueTransformable",
					"description": "Check value is TTransformableProp",
					"parameters": [
						{
							"name": "value",
							"description": "\n",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "TTransformable",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "any",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "bValueVertexCallback",
					"parameters": [
						{
							"name": "value",
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "composeLoop",
					"parameters": [
						{
							"name": "loop",
							"type": {
								"type": "reference",
								"id": 485,
								"name": "ISceneChildPropsExtendedShapeLoop"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "reference",
						"name": "IShapeLoopGenerator"
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "composeVertexCallback",
					"parameters": [
						{
							"name": "value",
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "reference",
								"id": 2116,
								"name": "TVertexCallback"
							},
							{
								"type": "intrinsic",
								"name": "undefined"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "getTransformedValue",
					"description": "Transform value",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"id": 619,
										"name": "SceneChildUtilitiesData"
									}
								}
							},
							"order": 9999
						},
						{
							"name": "value",
							"description": "\n",
							"type": {
								"type": "union",
								"types": [
									{
										"name": "TTransformable",
										"type": "reference",
										"order": 9999
									},
									{
										"name": "any",
										"type": "intrinsic",
										"order": 9999
									}
								]
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						]
					},
					"order": 9999,
					"bStatic": true
				},
				{
					"name": "getTransformedValueInverse",
					"description": "Transform value inverse",
					"parameters": [
						{
							"name": "scene",
							"type": {
								"type": "reference",
								"name": "Scene"
							},
							"order": 9999
						},
						{
							"name": "name",
							"type": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "query",
									"queryType": {
										"type": "reference",
										"id": 619,
										"name": "SceneChildUtilitiesData"
									}
								}
							},
							"order": 9999
						},
						{
							"name": "value",
							"description": "\n",
							"type": {
								"type": "intrinsic",
								"name": "any"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "number"
									}
								],
								"name": "Array"
							}
						]
					},
					"order": 9999,
					"bStatic": true
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"name": "Timeline",
			"type": "Class",
			"order": 9999,
			"source": {
				"fileName": "src/services/timeline/Timeline.ts",
				"line": 13,
				"character": 14
			},
			"extends": [
				"Emitter"
			],
			"description": "Is used for sequence time management.\nIt is necessary to set the duration and the number of frames per second (frame rate).",
			"constructor_ref": {
				"parameters": [
					{
						"name": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "60000",
						"order": 9999
					},
					{
						"name": "framerate",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "60",
						"order": 9999
					}
				]
			},
			"properties": [
				{
					"name": "b_sequence_started",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "current_frame",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "current_time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "fps",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "fps_samples",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "Array"
					},
					"defaultValue": "[]",
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "fps_samples_index",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "fps_samples_size",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "30",
					"order": 9999,
					"bPrivate": true,
					"bReadonly": true
				},
				{
					"name": "last_tick",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "paused_time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "sequence",
					"type": {
						"type": "reference",
						"id": 95,
						"name": "ISequenceMeta"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "start_time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "tick_time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "PAUSE",
					"description": "Animation status paused",
					"type": {
						"type": "stringLiteral",
						"value": "pause"
					},
					"defaultValue": "\"pause\"",
					"order": 9999,
					"bPublic": true,
					"bStatic": true,
					"bReadonly": true
				},
				{
					"name": "START",
					"description": "Animation status started",
					"type": {
						"type": "stringLiteral",
						"value": "start"
					},
					"defaultValue": "\"start\"",
					"order": 9999,
					"bPublic": true,
					"bStatic": true,
					"bReadonly": true
				},
				{
					"name": "STOP",
					"description": "Animation status stop",
					"type": {
						"type": "stringLiteral",
						"value": "stop"
					},
					"defaultValue": "\"stop\"",
					"order": 9999,
					"bPublic": true,
					"bStatic": true,
					"bReadonly": true
				}
			],
			"methods": [
				{
					"name": "bSequenceStarted",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "calculateFPS",
					"description": "Calculate fps",
					"parameters": [
						{
							"name": "currentFPS",
							"description": "\n",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPrivate": true
				},
				{
					"name": "getCurrentFrame",
					"description": "Return current animation frame",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getDuration",
					"description": "Get timeline duration",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getFrameAtTime",
					"description": "Return frame number at time",
					"parameters": [
						{
							"name": "time",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getFrameTime",
					"description": "get the time at specific frame number",
					"parameters": [
						{
							"name": "frame",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getFramerate",
					"description": "Return framerate",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getFramesCount",
					"description": "Get number of frames based on duration and framerate",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getSequence",
					"description": "Return the sequence",
					"parameters": [],
					"return_type": {
						"type": "reference",
						"id": 95,
						"name": "ISequenceMeta"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getTickTime",
					"description": "Return tick time (based on framerate)",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "getTime",
					"description": "Return the current time",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "pause",
					"description": "Pause the sequence",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setDuration",
					"description": "Set duration of timeline",
					"parameters": [
						{
							"name": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setFrame",
					"description": "set current frame",
					"parameters": [
						{
							"name": "frame",
							"description": "\n",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setFramerate",
					"description": "Set a framerate",
					"parameters": [
						{
							"name": "framerate",
							"description": "\n",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setSequence",
					"description": "Set Sequence",
					"parameters": [
						{
							"name": "duration",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						},
						{
							"name": "framerate",
							"description": "\n",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "setTime",
					"description": "Set animation at time",
					"parameters": [
						{
							"name": "time",
							"description": "\n",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "start",
					"description": "Start the sequence",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "stop",
					"description": "Stop the sequence and reset",
					"parameters": [],
					"return_type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999,
					"bPublic": true
				},
				{
					"name": "tick",
					"description": "Animation tick",
					"parameters": [
						{
							"name": "timestamp",
							"description": "current timestamp",
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"order": 9999
						}
					],
					"return_type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999,
					"bPublic": true
				}
			],
			"category": "Services.Timeline"
		},
		{
			"type": "Interface",
			"name": "ICallableValue",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 18,
				"character": 31
			},
			"properties": [
				{
					"name": "raw",
					"description": "raw function (string) return T",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "state",
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999
				}
			],
			"typeParameters": [
				{
					"id": 512,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "\n"
					}
				}
			],
			"category": "Services.Animation"
		},
		{
			"type": "Interface",
			"name": "IRawState",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 187,
				"character": 26
			},
			"extends": [
				"ICallableValue"
			],
			"properties": [
				{
					"name": "raw",
					"description": "raw function (string) return T",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "state",
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999
				}
			],
			"category": "Services.Animation"
		},
		{
			"type": "Interface",
			"name": "IShapeLoopAnimation",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 41,
				"character": 36
			},
			"properties": [
				{
					"name": "dynamyc",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "end",
					"type": {
						"type": "reference",
						"id": 546,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TCallableValue"
					},
					"order": 9999
				},
				{
					"name": "inc",
					"type": {
						"type": "reference",
						"id": 546,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TCallableValue"
					},
					"order": 9999
				},
				{
					"name": "start",
					"type": {
						"type": "reference",
						"id": 546,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TCallableValue"
					},
					"order": 9999
				},
				{
					"name": "vertex",
					"type": {
						"type": "reference",
						"id": 511,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"typeArguments": [
											{
												"type": "intrinsic",
												"name": "number"
											}
										],
										"name": "Array"
									},
									{
										"type": "reference",
										"name": "Float32Array"
									}
								]
							}
						],
						"name": "ICallableValue"
					},
					"order": 9999
				}
			],
			"category": "Services.Animation"
		},
		{
			"type": "Interface",
			"name": "ISimpleAnimation",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 97,
				"character": 33
			},
			"properties": [
				{
					"name": "from",
					"description": "Supported color string format:\nrgba([0-255], [0-255], [0-255], 0-1)\nhsla([0-360], [0-100]%, [0-100]%, 0-1)",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "TTransformable",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"type": "tuple",
								"order": 9999
							},
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 1
				},
				{
					"name": "to",
					"description": "Supported color string format:\nrgba([0-255], [0-255], [0-255], 0-1)\nhsla([0-360], [0-100]%, [0-100]%, 0-1)",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "TTransformable",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"type": "tuple",
								"order": 9999
							},
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 2
				},
				{
					"name": "duration",
					"description": "Duration in millisecond",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 3
				},
				{
					"name": "invertOdd",
					"description": "Invert animation on odd repetition index",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 4
				},
				{
					"name": "type",
					"description": "'loop' | 'uncontrolled-loop' | 'static'",
					"type": {
						"type": "reference",
						"id": 550,
						"name": "TSimpleAnimationType"
					},
					"order": 4
				},
				{
					"name": "mode",
					"description": "type of animate value",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "sinusoidal",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "easing",
								"order": 9999
							}
						]
					},
					"order": 5,
					"bOptional": true
				},
				{
					"name": "modeFunction",
					"description": "Is based on <mark>mode</mark> value.\nIf mode is 'sinusoidal' the modeFunction value can be 'sin' | 'cos'\nIf mode is 'easing' the modeFunction value can be <a href=\"#/ref/TEasing\">TEasing</a>",
					"type": {
						"type": "reference",
						"id": 549,
						"name": "TModeFunction"
					},
					"order": 6,
					"bOptional": true
				},
				{
					"name": "delay",
					"description": "Delay of start animation, available for <mark>type</mark> 'uncontrolled-loop' | 'static'",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 7,
					"bOptional": true
				},
				{
					"name": "typeValue",
					"description": "Default is 'float', whit 'int' value, the numbers are rounded",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "int",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "float",
								"order": 9999
							}
						]
					},
					"order": 8,
					"bOptional": true
				},
				{
					"name": "colorTransitionMode",
					"description": "With the 'rgb' value the color will vary linearly according to the <mark>mode</mark> and <mark>modeFunction</mark>,\nwhile with 'hue' they will be converted to hsla and then go through the color wheel",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "hue",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "rgb",
								"order": 9999
							}
						]
					},
					"order": 9,
					"bOptional": true
				}
			],
			"category": "Services.Animation"
		},
		{
			"type": "Interface",
			"name": "IVertexCallbackAnimation",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 55,
				"character": 41
			},
			"extends": [
				"ICallableValue"
			],
			"properties": [
				{
					"name": "dynamic",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "raw",
					"description": "raw function (string) return T",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "state",
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999
				}
			],
			"category": "Services.Animation"
		},
		{
			"name": "TAnimation",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 82,
				"character": 22
			},
			"parameter": {
				"name": "TAnimation",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "IAnimationSimple",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "IAnimationRaw",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"name": "TCallableValue",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 32,
				"character": 26
			},
			"parameter": {
				"name": "TCallableValue",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "T",
							"type": "typeParameter",
							"order": 9999
						},
						{
							"name": "ICallableValue",
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T"
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"typeParameters": [
				{
					"id": 547,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"category": "Services.Animation"
		},
		{
			"name": "TEasing",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 8,
				"character": 19
			},
			"parameter": {
				"name": "TEasing",
				"type": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"id": 189,
							"name": "Easings"
						}
					}
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"name": "TModeFunction",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 87,
				"character": 25
			},
			"parameter": {
				"name": "TModeFunction",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "TEasing",
							"type": "reference",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "sin",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "cos",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"name": "TSimpleAnimationLoop",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 172,
				"character": 32
			},
			"parameter": {
				"name": "TSimpleAnimationLoop",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 531,
							"name": "ISimpleAnimation"
						},
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "delay"
								},
								{
									"type": "stringLiteral",
									"value": "type"
								}
							]
						}
					],
					"name": "Omit"
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"name": "TSimpleAnimationStatic",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 182,
				"character": 34
			},
			"parameter": {
				"name": "TSimpleAnimationStatic",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 531,
							"name": "ISimpleAnimation"
						},
						{
							"type": "stringLiteral",
							"value": "type"
						}
					],
					"name": "Omit"
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"name": "TSimpleAnimationType",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 92,
				"character": 32
			},
			"parameter": {
				"name": "TSimpleAnimationType",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "loop",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "uncontrolled-loop",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "static",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"name": "TSimpleAnimationUncontrolledLoop",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/animation.ts",
				"line": 177,
				"character": 44
			},
			"parameter": {
				"name": "TSimpleAnimationUncontrolledLoop",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 531,
							"name": "ISimpleAnimation"
						},
						{
							"type": "stringLiteral",
							"value": "type"
						}
					],
					"name": "Omit"
				},
				"order": 9999
			},
			"category": "Services.Animation"
		},
		{
			"type": "Interface",
			"name": "IDrawerCanvasEvents",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 72,
				"character": 36
			},
			"properties": [
				{
					"name": "drawer-canvas:before_draw",
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 457,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 458,
									"name": "currentFrame",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/drawer.ts",
											"line": 74,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 459,
									"name": "currentTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/drawer.ts",
											"line": 75,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										458,
										459
									]
								}
							],
							"sources": [
								{
									"fileName": "src/services/types/drawer.ts",
									"line": 73,
									"character": 29
								}
							]
						}
					},
					"order": 9999
				},
				{
					"name": "drawer-canvas:buffer_flush",
					"type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "drawer-canvas:buffer_loaded",
					"type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				},
				{
					"name": "drawer-canvas:resize",
					"type": {
						"type": "intrinsic",
						"name": "void"
					},
					"order": 9999
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "IDrawerCanvasOptions",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 62,
				"character": 37
			},
			"extends": [
				"IDrawerOptions"
			],
			"properties": [
				{
					"name": "backgroundImage",
					"type": {
						"type": "reference",
						"name": "CanvasImageSource"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "backgroundImageFit",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "cover",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "contain",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "clear",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostAlpha",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipFunction",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"type": "reflection",
								"declaration": {
									"name": "__type",
									"parameters": [
										{
											"name": "ghostRepetition",
											"type": {
												"type": "reference",
												"name": "IBaseRepetition"
											},
											"order": 9999
										},
										{
											"name": "currentTime",
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"order": 9999
										}
									],
									"return_type": {
										"type": "intrinsic",
										"name": "number"
									},
									"order": 9999
								},
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipTime",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghosts",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "noBackground",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "simmetricLines",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "time",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "IDrawerCanvasPropArguments",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 18,
				"character": 43
			},
			"extends": [
				"IDrawerPropArguments"
			],
			"properties": [
				{
					"name": "repetition",
					"description": "Information about repetition",
					"type": {
						"type": "reference",
						"name": "IRepetition"
					},
					"order": 1
				},
				{
					"name": "recursion",
					"description": "Information about recursion (if is encapsulated in a ShapeRecursive)",
					"type": {
						"type": "reference",
						"id": 2107,
						"name": "IRecursionRepetition"
					},
					"order": 2,
					"bOptional": true
				},
				{
					"name": "shape",
					"description": "Current Shape",
					"type": {
						"type": "reference",
						"name": "ShapeBase"
					},
					"order": 5
				},
				{
					"name": "parent",
					"description": "Parent repetition (if encapsulated)",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ISceneChildPropArguments"
							}
						],
						"name": "Partial"
					},
					"order": 7,
					"bOptional": true
				},
				{
					"name": "canvasContext",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "CanvasRenderingContext2D",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "OffscreenCanvasRenderingContext2D",
								"type": "reference",
								"order": 9999
							}
						]
					},
					"order": 9999
				}
			],
			"category": "Other"
		},
		{
			"type": "Interface",
			"name": "IDrawerCanvasStreamProps",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 37,
				"character": 41
			},
			"extends": [
				"IDrawerStreamProps"
			],
			"properties": [
				{
					"name": "composite",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "reference",
								"id": 483,
								"name": "TCanvasContexComposite"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "fill",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CanvasGradient"
									},
									{
										"type": "reference",
										"name": "CanvasPattern"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "filter",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineCap",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "butt"
									},
									{
										"type": "stringLiteral",
										"value": "round"
									},
									{
										"type": "stringLiteral",
										"value": "square"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineDash",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "tuple",
								"elements": [
									{
										"type": "intrinsic",
										"name": "number"
									},
									{
										"type": "intrinsic",
										"name": "number"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineDashOffset",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineJoin",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "stringLiteral",
										"value": "bevel"
									},
									{
										"type": "stringLiteral",
										"value": "round"
									},
									{
										"type": "stringLiteral",
										"value": "miter"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineWidth",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "miterLimit",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "opacity",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "shadowBlur",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "shadowColor",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "shadowOffsetX",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "shadowOffsetY",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "string"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "stroke",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CanvasGradient"
									},
									{
										"type": "reference",
										"name": "CanvasPattern"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "IDrawerOptions",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 6,
				"character": 31
			},
			"properties": [
				{
					"name": "ghostAlpha",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipFunction",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"type": "reflection",
								"declaration": {
									"name": "__type",
									"parameters": [
										{
											"name": "ghostRepetition",
											"type": {
												"type": "reference",
												"name": "IBaseRepetition"
											},
											"order": 9999
										},
										{
											"name": "currentTime",
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"order": 9999
										}
									],
									"return_type": {
										"type": "intrinsic",
										"name": "number"
									},
									"order": 9999
								},
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipTime",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghosts",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "noBackground",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "time",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "IDrawerPropArguments",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 15,
				"character": 37
			},
			"extends": [
				"ISceneChildPropArguments"
			],
			"properties": [
				{
					"name": "repetition",
					"description": "Information about repetition",
					"type": {
						"type": "reference",
						"name": "IRepetition"
					},
					"order": 1
				},
				{
					"name": "recursion",
					"description": "Information about recursion (if is encapsulated in a ShapeRecursive)",
					"type": {
						"type": "reference",
						"id": 2107,
						"name": "IRecursionRepetition"
					},
					"order": 2,
					"bOptional": true
				},
				{
					"name": "shape",
					"description": "Current Shape",
					"type": {
						"type": "reference",
						"name": "ShapeBase"
					},
					"order": 5
				},
				{
					"name": "parent",
					"description": "Parent repetition (if encapsulated)",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"name": "ISceneChildPropArguments"
							}
						],
						"name": "Partial"
					},
					"order": 7,
					"bOptional": true
				}
			],
			"category": "Other"
		},
		{
			"type": "Interface",
			"name": "IDrawerSVGEvents",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 85,
				"character": 33
			},
			"properties": [
				{
					"name": "drawer-svg:before_draw",
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 465,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 466,
									"name": "currentFrame",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/drawer.ts",
											"line": 87,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 467,
									"name": "currentTime",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/drawer.ts",
											"line": 88,
											"character": 13
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										466,
										467
									]
								}
							],
							"sources": [
								{
									"fileName": "src/services/types/drawer.ts",
									"line": 86,
									"character": 26
								}
							]
						}
					},
					"order": 9999
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "IDrawerSVGOptions",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 55,
				"character": 34
			},
			"extends": [
				"IDrawerOptions"
			],
			"properties": [
				{
					"name": "decimals",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostAlpha",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipFunction",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"type": "reflection",
								"declaration": {
									"name": "__type",
									"parameters": [
										{
											"name": "ghostRepetition",
											"type": {
												"type": "reference",
												"name": "IBaseRepetition"
											},
											"order": 9999
										},
										{
											"name": "currentTime",
											"type": {
												"type": "intrinsic",
												"name": "number"
											},
											"order": 9999
										}
									],
									"return_type": {
										"type": "intrinsic",
										"name": "number"
									},
									"order": 9999
								},
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipTime",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghosts",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "noBackground",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "time",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "IDrawerStreamProps",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 28,
				"character": 35
			},
			"properties": [
				{
					"name": "fill",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CanvasGradient"
									},
									{
										"type": "reference",
										"name": "CanvasPattern"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineWidth",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "stroke",
					"type": {
						"type": "reference",
						"id": 473,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "intrinsic",
										"name": "string"
									},
									{
										"type": "reference",
										"name": "CanvasGradient"
									},
									{
										"type": "reference",
										"name": "CanvasPattern"
									}
								]
							}
						],
						"name": "TDrawerCanvasProp"
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"type": "Interface",
			"name": "ISceneChildDrawerData",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 123,
				"character": 38
			},
			"properties": [
				{
					"name": "composite",
					"type": {
						"type": "reference",
						"id": 483,
						"name": "TCanvasContexComposite"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "disableGhost",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "highlighted",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "visible",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Drawer"
		},
		{
			"name": "TDrawerCanvasProp",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 22,
				"character": 29
			},
			"parameter": {
				"name": "TDrawerCanvasProp",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "T",
							"type": "typeParameter",
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"name": "__type",
								"parameters": [
									{
										"name": "propArguments",
										"type": {
											"type": "reference",
											"id": 402,
											"name": "IDrawerCanvasPropArguments"
										},
										"order": 9999
									}
								],
								"return_type": {
									"type": "typeParameter",
									"name": "T"
								},
								"order": 9999
							},
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"typeParameters": [
				{
					"id": 474,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			]
		},
		{
			"name": "TDrawerProp",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/drawer.ts",
				"line": 23,
				"character": 23
			},
			"parameter": {
				"name": "TDrawerProp",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "T",
							"type": "typeParameter",
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"name": "__type",
								"parameters": [
									{
										"name": "propArguments",
										"type": {
											"type": "reference",
											"id": 397,
											"name": "IDrawerPropArguments"
										},
										"order": 9999
									}
								],
								"return_type": {
									"type": "typeParameter",
									"name": "T"
								},
								"order": 9999
							},
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"typeParameters": [
				{
					"id": 479,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			]
		},
		{
			"type": "Interface",
			"name": "IGCODESettings",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 148,
				"character": 31
			},
			"properties": [
				{
					"name": "atTime",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "maxX",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "maxY",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "minX",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "minY",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "penDownCommand",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "penUpCommand",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "round",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "unit",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "millimeters",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "inches",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "velocity",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"type": "Interface",
			"name": "IProject",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 22,
				"character": 25
			},
			"properties": [
				{
					"name": "background",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "backgroundImage",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "clear",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "color",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "ghostSkipFunction",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "CallableFunction",
								"type": "reference",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghostSkipTime",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "ghosts",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "height",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "id",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "name",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "ratio",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "resolution",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "scene",
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1302,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"indexSignature": [
								{
									"id": 1303,
									"name": "__index",
									"kind": 8192,
									"kindString": "Index signature",
									"flags": {
										"isExported": true
									},
									"parameters": [
										{
											"id": 1304,
											"name": "key",
											"kind": 32768,
											"kindString": "Parameter",
											"flags": {
												"isExported": true
											},
											"type": {
												"type": "intrinsic",
												"name": "string"
											}
										}
									],
									"type": {
										"type": "reference",
										"id": 1305,
										"name": "IProjectSceneChild"
									}
								}
							],
							"sources": [
								{
									"fileName": "src/services/types/exporters-importers.ts",
									"line": 45,
									"character": 7
								}
							]
						}
					},
					"order": 9999
				},
				{
					"name": "sequence",
					"type": {
						"type": "reference",
						"id": 1282,
						"name": "IProjectSequence"
					},
					"order": 9999
				},
				{
					"name": "urpflanze_version",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "width",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"type": "Interface",
			"name": "IProjectSceneChild",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 53,
				"character": 35
			},
			"properties": [
				{
					"name": "adaptMode",
					"type": {
						"type": "reference",
						"id": 2119,
						"name": "EAdaptMode"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "bClosed",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "bPrimitive",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "bUseParent",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "bUseRecursion",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "false",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "true",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "children",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1305,
								"name": "IProjectSceneChild"
							}
						],
						"name": "Array"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "data",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 468,
								"name": "ISceneChildDrawerData"
							}
						],
						"name": "Partial"
					},
					"order": 9999
				},
				{
					"name": "depth",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "id",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "name",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "order",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "parentId",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "props",
					"type": {
						"type": "reference",
						"id": 1343,
						"name": "TProjectSceneChildProps"
					},
					"order": 9999
				},
				{
					"name": "shape",
					"type": {
						"type": "reference",
						"name": "Float32Array"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "style",
					"type": {
						"type": "reference",
						"id": 1346,
						"name": "TProjectDrawerProps"
					},
					"order": 9999
				},
				{
					"name": "type",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "vertexCallback",
					"type": {
						"type": "reference",
						"id": 521,
						"name": "IVertexCallbackAnimation"
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"type": "Interface",
			"name": "IProjectSequence",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 14,
				"character": 33
			},
			"properties": [
				{
					"name": "duration",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "framerate",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"type": "Interface",
			"name": "ISVGParsed",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 140,
				"character": 27
			},
			"properties": [
				{
					"name": "buffers",
					"type": {
						"type": "reference",
						"typeArguments": [
							{
								"type": "reference",
								"id": 1323,
								"name": "ISVGParsedPath"
							}
						],
						"name": "Array"
					},
					"order": 9999
				},
				{
					"name": "viewBox",
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					},
					"order": 9999
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"type": "Interface",
			"name": "ISVGParsedPath",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 129,
				"character": 31
			},
			"properties": [
				{
					"name": "buffer",
					"type": {
						"type": "reference",
						"name": "Float32Array"
					},
					"order": 9999
				},
				{
					"name": "closed",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "fill",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "lineWidth",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "stroke",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "string",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				}
			],
			"category": "Services.Export/Import"
		},
		{
			"name": "TProjectDrawerProps",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 109,
				"character": 31
			},
			"parameter": {
				"name": "TProjectDrawerProps",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 1347,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"sources": [
							{
								"fileName": "src/services/types/exporters-importers.ts",
								"line": 109,
								"character": 33
							}
						]
					}
				},
				"order": 9999
			},
			"category": "Other"
		},
		{
			"name": "TProjectSceneChildProps",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/exporters-importers.ts",
				"line": 105,
				"character": 35
			},
			"parameter": {
				"name": "TProjectSceneChildProps",
				"type": {
					"type": "intersection",
					"types": [
						{
							"name": "Partial",
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"id": 499,
											"name": "TSceneChildPropsExtendedKeys"
										},
										{
											"type": "reference",
											"id": 500,
											"name": "TSceneChildPropExtendedValue"
										}
									],
									"name": "Record"
								}
							],
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"id": 1344,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"children": [
									{
										"id": 1345,
										"name": "loop",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true,
											"isOptional": true
										},
										"sources": [
											{
												"fileName": "src/services/types/exporters-importers.ts",
												"line": 106,
												"character": 5
											}
										],
										"type": {
											"type": "reference",
											"id": 515,
											"name": "IShapeLoopAnimation"
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											1345
										]
									}
								],
								"sources": [
									{
										"fileName": "src/services/types/exporters-importers.ts",
										"line": 105,
										"character": 115
									}
								]
							},
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Export/Import"
		},
		{
			"type": "Interface",
			"name": "IRenderEvents",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/renderer.ts",
				"line": 47,
				"character": 30
			},
			"properties": [
				{
					"name": "renderer:render-frame",
					"type": {
						"type": "reference",
						"id": 1733,
						"name": "IRenderFrame"
					},
					"order": 9999
				},
				{
					"name": "renderer:start",
					"type": {
						"type": "reference",
						"id": 1728,
						"name": "IRenderStart"
					},
					"order": 9999
				}
			],
			"category": "Services.Renderer"
		},
		{
			"type": "Interface",
			"name": "IRenderFrame",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/renderer.ts",
				"line": 35,
				"character": 29
			},
			"properties": [
				{
					"name": "forPart",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "frame",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "part",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "render_time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "total_frames",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "total_parts",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				}
			],
			"category": "Services.Renderer"
		},
		{
			"type": "Interface",
			"name": "IRenderSettings",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/renderer.ts",
				"line": 14,
				"character": 32
			},
			"properties": [
				{
					"name": "noBackground",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "quality",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "size",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "type",
					"type": {
						"type": "reference",
						"id": 1744,
						"name": "TRenderType"
					},
					"order": 9999
				}
			],
			"category": "Services.Renderer"
		},
		{
			"type": "Interface",
			"name": "IRenderStart",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/renderer.ts",
				"line": 25,
				"character": 29
			},
			"properties": [
				{
					"name": "estimated_time",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "forPart",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "total_frames",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "total_parts",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				}
			],
			"category": "Services.Renderer"
		},
		{
			"name": "TRenderImageType",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/renderer.ts",
				"line": 4,
				"character": 28
			},
			"parameter": {
				"name": "TRenderImageType",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "image/png",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "image/jpeg",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Renderer"
		},
		{
			"name": "TRenderType",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/renderer.ts",
				"line": 9,
				"character": 23
			},
			"parameter": {
				"name": "TRenderType",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "TRenderImageType",
							"type": "reference",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "image/svg+xml",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Renderer"
		},
		{
			"type": "Interface",
			"name": "ISceneChildPropsExtendedShapeLoop",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 23,
				"character": 50
			},
			"properties": [
				{
					"name": "dynamyc",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"order": 9999
				},
				{
					"name": "end",
					"type": {
						"type": "reference",
						"id": 546,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TCallableValue"
					},
					"order": 9999
				},
				{
					"name": "inc",
					"type": {
						"type": "reference",
						"id": 546,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TCallableValue"
					},
					"order": 9999
				},
				{
					"name": "start",
					"type": {
						"type": "reference",
						"id": 546,
						"typeArguments": [
							{
								"type": "intrinsic",
								"name": "number"
							}
						],
						"name": "TCallableValue"
					},
					"order": 9999
				},
				{
					"name": "vertex",
					"type": {
						"type": "reference",
						"id": 511,
						"typeArguments": [
							{
								"type": "union",
								"types": [
									{
										"type": "reference",
										"name": "vec2"
									},
									{
										"type": "reference",
										"name": "Float32Array"
									}
								]
							}
						],
						"name": "ICallableValue"
					},
					"order": 9999
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"type": "Interface",
			"name": "ISceneChildPropsExtendedVertexCallback",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 103,
				"character": 55
			},
			"extends": [
				"ICallableValue"
			],
			"properties": [
				{
					"name": "raw",
					"description": "raw function (string) return T",
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"order": 9999
				},
				{
					"name": "state",
					"type": {
						"type": "intrinsic",
						"name": "any"
					},
					"order": 9999
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TDrawerPropExtendedValue",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 92,
				"character": 36
			},
			"parameter": {
				"name": "TDrawerPropExtendedValue",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "TAnimation",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "ICallableValue",
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T",
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "vec2"
											}
										]
									}
								}
							],
							"order": 9999
						},
						{
							"name": "TDrawerProp",
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T",
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "vec2"
											}
										]
									}
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"typeParameters": [
				{
					"id": 504,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TDrawerPropsExtendedKeys",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 86,
				"character": 36
			},
			"parameter": {
				"name": "TDrawerPropsExtendedKeys",
				"type": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "reference",
						"id": 408,
						"name": "IDrawerStreamProps"
					}
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TSceneChildPropExtendedValue",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 73,
				"character": 40
			},
			"parameter": {
				"name": "TSceneChildPropExtendedValue",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "ISceneChildPropsExtendedShapeLoop",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "TTransformable",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "TAnimation",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "ICallableValue",
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T",
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "vec2"
											}
										]
									}
								}
							],
							"order": 9999
						},
						{
							"name": "TSceneChildProp",
							"type": "reference",
							"typeArguments": [
								{
									"type": "typeParameter",
									"name": "T",
									"default": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "reference",
												"name": "vec2"
											}
										]
									}
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"typeParameters": [
				{
					"id": 501,
					"name": "T",
					"kind": 131072,
					"kindString": "Type parameter",
					"flags": {
						"isExported": true
					}
				}
			],
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TSceneChildPropsExtendedKeys",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 59,
				"character": 40
			},
			"parameter": {
				"name": "TSceneChildPropsExtendedKeys",
				"type": {
					"type": "typeOperator",
					"operator": "keyof",
					"target": {
						"type": "intersection",
						"types": [
							{
								"type": "reference",
								"name": "IShapeLoopProps"
							},
							{
								"type": "reference",
								"name": "IShapeRecursiveProps"
							},
							{
								"type": "reference",
								"name": "IShapeBufferProps"
							},
							{
								"type": "reference",
								"name": "IShapePrimitiveProps"
							},
							{
								"type": "reference",
								"name": "IPolygonProps"
							},
							{
								"type": "reference",
								"name": "ILissajousProps"
							},
							{
								"type": "reference",
								"name": "ISpiralProps"
							},
							{
								"type": "reference",
								"name": "IRoseProps"
							},
							{
								"type": "reference",
								"name": "ISuperShapeProps"
							}
						]
					}
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TSceneChildUtilitiesSettings",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 129,
				"character": 40
			},
			"parameter": {
				"name": "TSceneChildUtilitiesSettings",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 509,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"sources": [
							{
								"fileName": "src/services/types/scene-utilities.ts",
								"line": 129,
								"character": 42
							}
						]
					}
				},
				"order": 9999
			},
			"category": "Other"
		},
		{
			"name": "TSceneChildUtilitiesSettingsKeys",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 124,
				"character": 44
			},
			"parameter": {
				"name": "TSceneChildUtilitiesSettingsKeys",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "TSceneChildPropsExtendedKeys",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "TDrawerPropsExtendedKeys",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "TSettingsExtendedKeys",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Other"
		},
		{
			"name": "TSettingExtendedValue",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 120,
				"character": 33
			},
			"parameter": {
				"name": "TSettingExtendedValue",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "boolean",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "ISceneChildPropsExtendedVertexCallback",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Other"
		},
		{
			"name": "TSettingsExtendedKeys",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 111,
				"character": 33
			},
			"parameter": {
				"name": "TSettingsExtendedKeys",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "id",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "name",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "order",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "bClosed",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "bUseParent",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "bUseRecursion",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "adaptMode",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "vertexCallback",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TTransformable",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 48,
				"character": 26
			},
			"parameter": {
				"name": "TTransformable",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 496,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"children": [
							{
								"id": 497,
								"name": "type",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/scene-utilities.ts",
										"line": 49,
										"character": 5
									}
								],
								"type": {
									"type": "stringLiteral",
									"value": "transformable-prop"
								}
							},
							{
								"id": 498,
								"name": "value",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/scene-utilities.ts",
										"line": 50,
										"character": 6
									}
								],
								"type": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "number"
										},
										{
											"type": "reference",
											"name": "vec2"
										}
									]
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									497,
									498
								]
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/scene-utilities.ts",
								"line": 48,
								"character": 28
							}
						]
					}
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"name": "TTransformableType",
			"type": "Type",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/scene-utilities.ts",
				"line": 42,
				"character": 30
			},
			"parameter": {
				"name": "TTransformableType",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "none",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "angle",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "scene-size-percentage",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "scene-size-percentage-inverse",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			"category": "Services.Scene Utilities"
		},
		{
			"type": "Interface",
			"name": "ISequenceMeta",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/timeline.ts",
				"line": 17,
				"character": 30
			},
			"properties": [
				{
					"name": "duration",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "framerate",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				},
				{
					"name": "frames",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"order": 9999
				}
			],
			"category": "Services.Timeline"
		},
		{
			"type": "Interface",
			"name": "ITimelineEvents",
			"order": 9999,
			"source": {
				"fileName": "src/services/types/timeline.ts",
				"line": 4,
				"character": 32
			},
			"properties": [
				{
					"name": "timeline:change_status",
					"type": {
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "start",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "stop",
								"order": 9999
							},
							{
								"type": "stringLiteral",
								"value": "pause",
								"order": 9999
							}
						]
					},
					"order": 9999
				},
				{
					"name": "timeline:progress",
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 91,
							"name": "__type",
							"kind": 65536,
							"kindString": "Type literal",
							"flags": {
								"isExported": true
							},
							"children": [
								{
									"id": 92,
									"name": "current_frame",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/timeline.ts",
											"line": 8,
											"character": 15
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 93,
									"name": "current_time",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/timeline.ts",
											"line": 9,
											"character": 14
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 94,
									"name": "fps",
									"kind": 32,
									"kindString": "Variable",
									"flags": {
										"isExported": true
									},
									"sources": [
										{
											"fileName": "src/services/types/timeline.ts",
											"line": 10,
											"character": 5
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"groups": [
								{
									"title": "Variables",
									"kind": 32,
									"children": [
										92,
										93,
										94
									]
								}
							],
							"sources": [
								{
									"fileName": "src/services/types/timeline.ts",
									"line": 7,
									"character": 21
								}
							]
						}
					},
					"order": 9999
				},
				{
					"name": "timeline:update_sequence",
					"type": {
						"type": "reference",
						"id": 95,
						"name": "ISequenceMeta"
					},
					"order": 9999
				}
			],
			"category": "Services.Timeline"
		}
	]
]