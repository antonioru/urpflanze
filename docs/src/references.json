[
	{
		"name": "clamp",
		"description": "Return number between min and max",
		"parameters": [
			{
				"name": "min",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "max",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "value",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"examples": [
			"\n```javascript\nUrpflanze.clamp(0, 1, 1.2) // 1\nUrpflanze.clamp(0, 1, -2) // 0\n```"
		],
		"return_type": {
			"type": "intrinsic",
			"name": "number"
		},
		"type": "Function",
		"source": {
			"fileName": "src/Utilites.ts",
			"line": 145,
			"character": 21
		},
		"category": "Utilities"
	},
	{
		"name": "relativeClamp",
		"description": "Map number between refMin e refMax from min and max",
		"parameters": [
			{
				"name": "refMin",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "refMax",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "value",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "toMin",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "toMax",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"examples": [
			"\n```javascript\nUrpflanze.relativeClamp(0, 1, 0.5, 100, 200) // 150\n```\n"
		],
		"return_type": {
			"type": "intrinsic",
			"name": "number"
		},
		"type": "Function",
		"source": {
			"fileName": "src/Utilites.ts",
			"line": 166,
			"character": 29
		},
		"category": "Utilities"
	},
	{
		"name": "toDegrees",
		"description": "Convert number from radians to degrees",
		"parameters": [
			{
				"name": "radians",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"examples": [
			"\n```javascript\nUrpflanze.toDegrees(Math.PI) // 180\n```\n"
		],
		"return_type": {
			"type": "intrinsic",
			"name": "number"
		},
		"type": "Function",
		"source": {
			"fileName": "src/Utilites.ts",
			"line": 93,
			"character": 25
		},
		"category": "Utilities"
	},
	{
		"name": "toRadians",
		"description": "Convert angle from degrees to radians",
		"parameters": [
			{
				"name": "degrees",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"examples": [
			"\n```javascript\nUrpflanze.toRadians(180) // 3.141592653589793\n```\n"
		],
		"return_type": {
			"type": "intrinsic",
			"name": "number"
		},
		"type": "Function",
		"source": {
			"fileName": "src/Utilites.ts",
			"line": 108,
			"character": 25
		},
		"category": "Utilities"
	},
	{
		"name": "Scene",
		"type": "Class",
		"order": 1,
		"source": {
			"fileName": "src/core/Scene.ts",
			"line": 15,
			"character": 11
		},
		"description": "Container for all SceneChild.\nThe main purpose is to manage the drawing order and update the child buffers",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 729,
						"name": "ISceneSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Scene.\nYou can see the default values in the property definitions"
		},
		"properties": [
			{
				"name": "background",
				"description": "Default background color (black)",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"hsla(0, 0%, 0%, 1)\"",
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "center",
				"description": "Refers to the central point of the scene",
				"type": {
					"type": "tuple",
					"elements": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "current_time",
				"description": "Current time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "0",
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "height",
				"description": "Logical number, the drawer will take care\nof defining the unit of measure",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "400",
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "mainColor",
				"description": "Default ScenePrimitive stroke color (white)",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"hsla(0, 0%, 100%, 1)\"",
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "width",
				"description": "Logical number, the drawer will take care\nof defining the unit of measure",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "400",
				"order": 9999,
				"bPublic": true
			}
		],
		"methods": [
			{
				"name": "add",
				"description": "Add SceneChild to Scene, pass `order` for drawing priorities",
				"parameters": [
					{
						"name": "item",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "order",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "find",
				"description": "Find sceneChild from id or name in the whole scene",
				"parameters": [
					{
						"name": "id_or_name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "get",
				"description": "Get shape by index",
				"parameters": [
					{
						"name": "index",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getChildren",
				"description": "Return a list of children",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				},
				"bPublic": true
			},
			{
				"name": "getParentsOfSceneChild",
				"description": "Returns the list of sceneChild hierarchy starting from the scene",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				},
				"bPublic": true
			},
			{
				"name": "isFirstLevelChild",
				"description": "Return true if sceneChild is direct children",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "remove",
				"description": "Remove a shape by index",
				"parameters": [
					{
						"name": "index",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "removeChildren",
				"description": "Removes all children",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "removeFromId",
				"description": "Remove sceneChild by id or name",
				"parameters": [
					{
						"name": "id_or_name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "resize",
				"description": "Resize the scene size",
				"parameters": [
					{
						"name": "width",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "height",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "width",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "sortChildren",
				"description": "Sort children by order",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "stream",
				"description": "Traverse the child buffer and use it with callback",
				"parameters": [
					{
						"name": "callback",
						"type": {
							"type": "reference",
							"id": 734,
							"name": "TStreamCallback"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "update",
				"description": "Update all children, generate a streamable buffer for drawing",
				"parameters": [
					{
						"name": "at_time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "getParentsOfSceneChild",
				"description": "Returns the list of sceneChild hierarchy starting from the scene",
				"parameters": [
					{
						"name": "current",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "Scene",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "parents",
						"type": {
							"type": "reference",
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 50,
											"name": "SceneChild"
										},
										{
											"type": "reference",
											"id": 941,
											"name": "Scene"
										}
									]
								}
							],
							"name": "Array"
						},
						"defaultValue": "[]",
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "union",
									"types": [
										{
											"type": "reference",
											"id": 50,
											"name": "SceneChild"
										},
										{
											"type": "reference",
											"id": 941,
											"name": "Scene"
										}
									]
								}
							],
							"name": "Array"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bStatic": true
			},
			{
				"name": "propagateToChilden",
				"description": "Propagate scene to sceneChild (and children)",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bStatic": true
			},
			{
				"name": "walk",
				"description": "Walk through the scene",
				"parameters": [
					{
						"name": "callback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 998,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 999,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 1000,
												"name": "sceneChild",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "reference",
													"id": 50,
													"name": "SceneChild"
												}
											}
										],
										"type": {
											"type": "union",
											"types": [
												{
													"type": "intrinsic",
													"name": "boolean"
												},
												{
													"type": "intrinsic",
													"name": "void"
												}
											]
										}
									}
								],
								"sources": [
									{
										"fileName": "src/core/Scene.ts",
										"line": 312,
										"character": 22
									}
								]
							}
						},
						"order": 9999
					},
					{
						"name": "current",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "Scene",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "boolean"
						},
						{
							"type": "intrinsic",
							"name": "void"
						}
					]
				},
				"bStatic": true
			}
		],
		"category": "Core.Scene"
	},
	{
		"name": "SceneChild",
		"type": "Class",
		"order": 2,
		"source": {
			"fileName": "src/core/SceneChild.ts",
			"line": 25,
			"character": 25
		},
		"description": "The element to be added into a scene.\nPreserve props, drawing order, generate and return buffers.\nThe only implementations of this class are <a href=\"#/ref/Group\">Group</a> and <a href=\"#/ref/ShapeBase\">ShapeBase</a>",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 682,
						"name": "ISceneChildSettings"
					},
					"order": 9999
				}
			],
			"description": "Creates an instance of SceneChild.\nBase values will be assigned in case they are not passed"
		},
		"properties": [
			{
				"name": "data",
				"description": "Custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "id",
				"description": "The unique id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "name",
				"description": "The human readable name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "order",
				"description": "The number that refers to the drawinf order",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "props",
				"description": "The basic properties",
				"type": {
					"type": "reference",
					"id": 666,
					"name": "ISceneChildProps"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "scene",
				"description": "Reference of the scene to which it is attached",
				"type": {
					"type": "reference",
					"id": 941,
					"name": "Scene"
				},
				"order": 9999,
				"bOptional": true,
				"bPublic": true
			},
			{
				"name": "type",
				"description": "The human readable type label",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"methods": [
			{
				"name": "clearBuffer",
				"description": "Clear buffer",
				"parameters": [
					{
						"name": "bClearIndexed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					},
					{
						"name": "bPropagateToParents",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "find",
				"description": "Find this or form or children.\nOverridden by classes that extend it",
				"parameters": [
					{
						"name": "id_or_name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "generate",
				"description": "Generate shape.\nBest explained in <a href=\"#/ref/ShapeBase\">ShapeBase</a>",
				"parameters": [
					{
						"name": "generate_id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "bDirectSceneChild",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					},
					{
						"name": "parent_prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "getBounding",
				"description": "Get buffer bounding",
				"parameters": [
					{
						"name": "bDirectSceneChild",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 215,
					"name": "IShapeBounding"
				}
			},
			{
				"name": "getBuffer",
				"description": "Return buffer of vertext if is generated",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "Float32Array"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getBufferLength",
				"description": "Get length of buffer",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "getIndexedBuffer",
				"description": "Return indexed buffer",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 109,
									"name": "IBufferIndex"
								}
							],
							"name": "Array"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getProp",
				"description": "Return a sceneChild prop or default value",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 666,
								"name": "ISceneChildProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "getProps",
				"description": "Return the sceneChild properties",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 666,
					"name": "ISceneChildProps"
				},
				"bPublic": true
			},
			{
				"name": "isStatic",
				"description": "With this method it is possible to check if the buffer will be generated at each update",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStaticIndexed",
				"description": "With this method you can check if the streaming buffer will be generated at each update",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set a single or multiple props and clear buffer if shape vertex depends from prop",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "K",
									"type": "typeParameter",
									"order": 9999
								},
								{
									"name": "ISceneChildProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 666,
										"name": "ISceneChildProps"
									}
								}
							},
							"objectType": {
								"type": "reference",
								"name": "ISceneChildProps"
							}
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "bClearIndexed",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "false",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "true",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"typeParameter": [
					{
						"id": 77,
						"name": "K",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 666,
								"name": "ISceneChildProps"
							}
						}
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "setPropUnsafe",
				"description": "Set a single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "ISceneChildProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "ISceneChildProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "stream",
				"description": "Stream shape\nBest explained in ShapeBase",
				"parameters": [
					{
						"name": "callback",
						"type": {
							"type": "reference",
							"id": 734,
							"name": "TStreamCallback"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			}
		],
		"category": "Core.Abstract"
	},
	{
		"name": "Group",
		"type": "Class",
		"order": 3,
		"source": {
			"fileName": "src/core/Group.ts",
			"line": 33,
			"character": 11
		},
		"extends": [
			"SceneChild"
		],
		"description": "A SceneChild container, propagates properties to children",
		"examples": [
			"\n```javascript\n// Group example\n\nconst rect = new Urpflanze.Rect({\n\tdistance: 100 // <- if a property is set the group will not overwrite it\n})\nconst group = new Urpflanze.Group({\n\trepetitions: 3,\n\tdistance: 200\n})\n\ngroup.add(rect)\ngroup.add(new Urpflanze.Triangle())\n```"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 682,
						"name": "ISceneChildSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Group"
		},
		"properties": [],
		"methods": [
			{
				"name": "add",
				"description": "Add iitem to Group",
				"parameters": [
					{
						"name": "item",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "clearBuffer",
				"description": "Chear children buffer",
				"parameters": [
					{
						"name": "bClearIndexed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					},
					{
						"name": "bPropagateToParents",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "true",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "find",
				"description": "Find scene child from id or name",
				"parameters": [
					{
						"name": "id_or_name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "generate",
				"description": "Generate children buffers",
				"parameters": [
					{
						"name": "indexing_id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "bDirectSceneChild",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					},
					{
						"name": "parent_prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "get",
				"description": "Get item from group",
				"parameters": [
					{
						"name": "index",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getBounding",
				"parameters": [
					{
						"name": "bDirectSceneChild",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 215,
					"name": "IShapeBounding"
				},
				"bPublic": true
			},
			{
				"name": "getBuffer",
				"description": "return a single buffer binded from children",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "Float32Array"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getBufferLength",
				"description": "Return length of buffer",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getChildren",
				"description": "Return shape children",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				},
				"bPublic": true
			},
			{
				"name": "getIndexedBuffer",
				"description": "return a single buffer binded from children",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 109,
									"name": "IBufferIndex"
								}
							],
							"name": "Array"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "isStatic",
				"description": "Check group has static children",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStaticIndexed",
				"description": "Check group has static children indexed",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "remove",
				"description": "Remove item from group",
				"parameters": [
					{
						"name": "index",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "false"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 50,
									"name": "SceneChild"
								}
							],
							"name": "Array"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "removeFromId",
				"description": "Remove from id",
				"parameters": [
					{
						"name": "id",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set a single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "ISceneChildProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "ISceneChildProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setPropUnsafe",
				"description": "Set a single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "ISceneChildProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "ISceneChildProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "sortChildren",
				"description": "Sort children",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "stream",
				"description": "Call strem on children",
				"parameters": [
					{
						"name": "callback",
						"type": {
							"type": "reference",
							"id": 734,
							"name": "TStreamCallback"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Core.Scene"
	},
	{
		"name": "Context",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/core/Context.ts",
			"line": 29,
			"character": 13
		},
		"description": "Utilities function passed to <a href=\"#/ref/ISceneChildPropArguments\">ISceneChildPropArguments</a>",
		"examples": [
			"\n```javascript\nconst circle = new Urpflanze.Circle({\n\tdistance: ({ context, repetition }) => context.noise('seed', repetition.current_index) * 200\n})\n```\n"
		],
		"functions": [
			{
				"name": "angle",
				"description": "Return angle (atan) from offset (or center) for matrix repetition.\nOffset is array between [-1, -1] and [1, 1].\nThe return value is bettween -Math.PI / 2 and Math.PI / 2",
				"parameters": [
					{
						"name": "repetition",
						"type": {
							"type": "reference",
							"id": 658,
							"name": "IRepetition"
						},
						"order": 9999
					},
					{
						"name": "offsetFromCenter",
						"type": {
							"type": "reference",
							"name": "vec2"
						},
						"defaultValue": "[0, 0]",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "angle2",
				"description": "Return angle (atan2, 4 quadrants) from offset (or center) for matrix repetition.\nOffset is array between [-1, -1] and [1, 1].\nThe return value is bettween -Math.PI an Math.PI",
				"parameters": [
					{
						"name": "repetition",
						"type": {
							"type": "reference",
							"id": 658,
							"name": "IRepetition"
						},
						"order": 9999
					},
					{
						"name": "offsetFromCenter",
						"type": {
							"type": "reference",
							"name": "vec2"
						},
						"defaultValue": "[0, 0]",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "distance",
				"description": "Return distance from offset (or center) for matrix repetition.\nThe return value is between 0 and 1",
				"parameters": [
					{
						"name": "repetition",
						"type": {
							"type": "reference",
							"id": 658,
							"name": "IRepetition"
						},
						"order": 9999
					},
					{
						"name": "offsetFromCenter",
						"description": "offset relative to distance prop",
						"type": {
							"type": "reference",
							"name": "vec2"
						},
						"defaultValue": "[0, 0]",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "noise",
				"description": "<a href=\"https://github.com/jwagner/simplex-noise.js\" target=\"_blank\">SimplexNoise</a>\nUse 'random' as seed property for random seed.\nReturn value between -1 and 1",
				"parameters": [
					{
						"name": "seed",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"defaultValue": "\"random\"",
						"order": 9999
					},
					{
						"name": "x",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0",
						"order": 9999
					},
					{
						"name": "y",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0",
						"order": 9999
					},
					{
						"name": "z",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "percH",
				"description": "Get value percentage of scene height.",
				"parameters": [
					{
						"name": "percentage",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "percW",
				"description": "Get value percentage of scene width.",
				"parameters": [
					{
						"name": "percentage",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			}
		],
		"category": "Core.Utilities"
	},
	{
		"name": "fromSkew",
		"description": "Skew matrix",
		"parameters": [
			{
				"name": "out",
				"type": {
					"type": "reference",
					"name": "mat4"
				},
				"order": 9999
			},
			{
				"name": "skew",
				"type": {
					"type": "tuple",
					"elements": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "intrinsic",
							"name": "number"
						}
					]
				},
				"order": 9999
			}
		],
		"return_type": {
			"type": "reference",
			"name": "mat4"
		},
		"type": "Function",
		"source": {
			"fileName": "src/core/math/gl-matrix-extensions.ts",
			"line": 13,
			"character": 24
		}
	},
	{
		"name": "toVec2",
		"description": "number to vec 2",
		"parameters": [
			{
				"name": "x",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "Array",
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			}
		],
		"return_type": {
			"type": "reference",
			"name": "vec2"
		},
		"type": "Function",
		"source": {
			"fileName": "src/core/math/gl-matrix-extensions.ts",
			"line": 38,
			"character": 22
		}
	},
	{
		"name": "toVec3",
		"description": "number to vec 3",
		"parameters": [
			{
				"name": "x",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "Array",
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "defaultZValue",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "0",
				"order": 9999
			}
		],
		"return_type": {
			"type": "reference",
			"name": "vec3"
		},
		"type": "Function",
		"source": {
			"fileName": "src/core/math/gl-matrix-extensions.ts",
			"line": 48,
			"character": 22
		}
	},
	{
		"name": "ShapeBase",
		"type": "Class",
		"order": 4,
		"source": {
			"fileName": "src/core/shapes/ShapeBase.ts",
			"line": 38,
			"character": 24
		},
		"extends": [
			"SceneChild"
		],
		"description": "Main class for shape generation",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 114,
						"name": "IShapeBaseSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of ShapeBase"
		},
		"properties": [
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"examples": [
					"\n```javascript\n// Use parent repetition for generate different types of roses\n\nconst rose = new Urpflanze.Rose({\n\trepetitions: 3,\n\tn: ({ parent }) => parent.repetition.current_index, // <- use parent\n\td: ({ repetition }) => repetition.current_index,\n\tsideLength: 20,\n\tdistance: 30,\n\tbUseParent: true // <- add this for use `parent` as prop_argument of `n` property\n})\n\nconst shape = new Urpflanze.Shape({\n\tshape: rose,\n\trepetitions: 4,\n\tdistance: 100\n})\n```\n"
				],
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"examples": [
					"\n```javascript\n// vertexCallback example\n// Generate lines with noise\n\nconst line = new Urpflanze.Line({\n\trepetitions: [1, 50],\n\tdistance: [0, 4],\n\tsideLength: ({ context, shape }) => context.percW(40, shape), // <- make the shape non-static\n\tvertexCallback: (vertex, { repetition, context, time }, vertex_repetition) => {\n\t\tconst noise = context.noise('seed', vertex_repetition.offset * 2, repetition.row.offset * 2, time / 1000)\n\t\tvertex[0] += noise * 10\n\t\tvertex[1] += noise * 10\n\t},\n})\n\nline.subdivide(5)\n```\n"
				],
				"order": 9999,
				"bOptional": true,
				"bPublic": true
			}
		],
		"methods": [
			{
				"name": "addIndex",
				"description": "Add into indexed_buffer",
				"parameters": [
					{
						"name": "frame_length",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "current_repetition",
						"type": {
							"type": "reference",
							"id": 658,
							"name": "IRepetition"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bProtected": true
			},
			{
				"name": "clearBuffer",
				"description": " Unset buffer",
				"parameters": [
					{
						"name": "bClearIndexed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					},
					{
						"name": "bPropagateToParents",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "true",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "generate",
				"description": "Update the vertex array if the shape is not static and update the indexed_buffer if it is also not static",
				"parameters": [
					{
						"name": "generate_id",
						"description": "generation id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "bDirectSceneChild",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					},
					{
						"name": "parent_prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "generateBuffer",
				"description": "Return a buffer of children shape or loop generated buffer",
				"parameters": [
					{
						"name": "generate_id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bProtected": true
			},
			{
				"name": "getBuffer",
				"description": "Return buffer",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "Float32Array"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getIndexedBuffer",
				"description": "Return indexed buffer",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"id": 109,
									"name": "IBufferIndex"
								}
							],
							"name": "Array"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getProp",
				"description": "Return a prop value",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 666,
								"name": "ISceneChildProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "getRepetitionCount",
				"description": "Get number of repetitions",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "isStatic",
				"description": "Check if the shape should be generated every time",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStaticIndexed",
				"description": "Check if the indexed_buffer array needs to be recreated every time,\nthis can happen when a shape generates an array of vertices different in length at each repetition",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set a single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "ISceneChildProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "ISceneChildProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "bClearIndexed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setShape",
				"description": "Set shape",
				"parameters": [
					{
						"name": "shape_or_loop",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "stream",
				"description": "Stream buffer",
				"parameters": [
					{
						"name": "callback",
						"type": {
							"type": "reference",
							"id": 734,
							"name": "TStreamCallback"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Core.Abstract"
	},
	{
		"name": "Shape",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/Shape.ts",
			"line": 13,
			"character": 11
		},
		"extends": [
			"ShapeBase"
		],
		"description": "Container of ShapeBase or Group, it applies transformations on each repetition",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 137,
						"name": "IShapeSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Shape."
		},
		"properties": [
			{
				"name": "shape",
				"description": "child shape",
				"type": {
					"type": "reference",
					"id": 50,
					"name": "SceneChild"
				},
				"order": 9999,
				"bOptional": true,
				"bPublic": true
			}
		],
		"methods": [
			{
				"name": "addIndex",
				"parameters": [
					{
						"name": "frame_length",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "repetition",
						"type": {
							"type": "reference",
							"id": 658,
							"name": "IRepetition"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bProtected": true
			},
			{
				"name": "find",
				"description": "Find shape by id or name",
				"parameters": [
					{
						"name": "id_or_name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "generateBuffer",
				"description": "Return a buffer of children shape or loop generated buffer",
				"parameters": [
					{
						"name": "generate_id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bProtected": true
			},
			{
				"name": "getBounding",
				"description": "Return bounding",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 215,
					"name": "IShapeBounding"
				},
				"bPublic": true
			},
			{
				"name": "getBufferLength",
				"description": "Return length of buffer",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "isStatic",
				"description": "Check if shape is static",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStaticIndexed",
				"description": "Check if shape has static index",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "setShape",
				"description": "Set shape",
				"parameters": [
					{
						"name": "shape",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Core.Shapes"
	},
	{
		"name": "ShapeBuffer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/ShapeBuffer.ts",
			"line": 9,
			"character": 17
		},
		"extends": [
			"ShapePrimitive"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1027,
						"name": "IShapeBufferSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of ShapeBuffer."
		},
		"properties": [
			{
				"name": "shape",
				"description": "Float32Array between -1, 1\n",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "shape_buffer",
				"description": "Adapted buffer",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "bindBuffer",
				"description": "Apply sideLength on <mark>.shape</mark> buffer and calculate bounding",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPrivate": true
			},
			{
				"name": "clearBuffer",
				"description": " Unset buffer",
				"parameters": [
					{
						"name": "bClearIndexed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					},
					{
						"name": "bPropagateToParents",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "true",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "generateBuffer",
				"description": "Return a buffer of children shape or loop generated buffer",
				"parameters": [
					{
						"name": "generate_id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bProtected": true
			},
			{
				"name": "getBufferLength",
				"description": "Return length of buffer",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "setShape",
				"description": "Set shape",
				"parameters": [
					{
						"name": "shape",
						"type": {
							"type": "reference",
							"name": "Float32Array"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "subdivide",
				"description": "Subdivide buffer n times",
				"parameters": [
					{
						"name": "level",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "1",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "subdivide",
				"description": "Subdivide buffer",
				"parameters": [
					{
						"name": "shape",
						"type": {
							"type": "reference",
							"name": "Float32Array"
						},
						"order": 9999
					},
					{
						"name": "bClosed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "true",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bPublic": true,
				"bStatic": true
			}
		],
		"category": "Core.Shapes"
	},
	{
		"name": "ShapeLoop",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/ShapeLoop.ts",
			"line": 35,
			"character": 15
		},
		"extends": [
			"ShapePrimitive"
		],
		"description": "Shape Loop",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1083,
						"name": "IShapeLoopSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				},
				{
					"name": "bPreventGeneration",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"order": 9999
				}
			],
			"description": "Creates an instance of ShapeLoop."
		},
		"properties": [
			{
				"name": "bStaticLoop",
				"description": "chek if loop generate a static shape",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "loop",
				"description": "Loop generator",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "loop_buffer",
				"description": "Generate static loop buffer whem IShapeLoopGenerator props\nhaven't dynamic properties",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bOptional": true,
				"bProtected": true
			},
			{
				"name": "props",
				"description": "Shape loop props",
				"type": {
					"type": "reference",
					"id": 1062,
					"name": "IShapeLoopProps"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "shapeLoopPropsDependencies",
				"description": "list of prop has impact on shape loop generation",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "vertexCallback"
								},
								{
									"type": "stringLiteral",
									"value": "prop_arguments"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "PI2",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "Math.PI * 2",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "PId2",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"defaultValue": "Math.PI / 2",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			}
		],
		"methods": [
			{
				"name": "clearBuffer",
				"description": " Unset buffer",
				"parameters": [
					{
						"name": "bClearIndexed",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					},
					{
						"name": "bPropagateToParents",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "true",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "generateBuffer",
				"description": "Return a buffer of children shape or loop generated buffer",
				"parameters": [
					{
						"name": "generate_id",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bProtected": true
			},
			{
				"name": "generateLoopBuffer",
				"description": "Generate loop buffer",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bPrivate": true
			},
			{
				"name": "getBufferLength",
				"description": "Return length of buffer",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getLoop",
				"description": "Return information about a client loop gnerator",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"defaultValue": "ShapeBase.EMPTY_PROP_ARGUMENTS",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"name": "ILoopMeta"
				},
				"bPublic": true
			},
			{
				"name": "getProp",
				"description": "Get prop",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 1062,
								"name": "IShapeLoopProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "isStatic",
				"description": "Check if shape is static",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStaticIndexed",
				"description": "Check if shape has static indexed",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStaticLoop",
				"description": "Check if loop_buffer is static",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "IShapeLoopProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "IShapeLoopProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setShape",
				"description": "Set shape from loop generator",
				"parameters": [
					{
						"name": "loop",
						"type": {
							"type": "reference",
							"id": 1057,
							"name": "IShapeLoopGenerator"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Core.Shapes"
	},
	{
		"name": "ShapePrimitive",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/ShapePrimitive.ts",
			"line": 17,
			"character": 29
		},
		"extends": [
			"ShapeBase"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 186,
						"name": "IShapePrimitiveSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of ShapePrimitive."
		},
		"properties": [
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "bCloseShape",
				"description": "Define shape is closed",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "props",
				"description": "Item props",
				"type": {
					"type": "reference",
					"id": 166,
					"name": "IShapePrimitiveProps"
				},
				"order": 9999,
				"bProtected": true
			},
			{
				"name": "sideLength",
				"description": "Scale buffer",
				"type": {
					"type": "reference",
					"name": "vec2"
				},
				"order": 9999,
				"bPublic": true
			}
		],
		"methods": [
			{
				"name": "adapt",
				"description": "Set adaptMode",
				"parameters": [
					{
						"name": "adaptMode",
						"type": {
							"type": "reference",
							"id": 161,
							"name": "EShapePrimitiveAdaptMode"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "addIndex",
				"description": "Add this to indexed_buffer",
				"parameters": [
					{
						"name": "frame_length",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "repetition",
						"type": {
							"type": "reference",
							"id": 658,
							"name": "IRepetition"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bProtected": true
			},
			{
				"name": "bindSideLength",
				"description": "set side length when generate a buffer into shape loop or shape buffer",
				"parameters": [
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bProtected": true
			},
			{
				"name": "getAdaptMode",
				"description": "Return adaptMode",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"bPublic": true
			},
			{
				"name": "getBounding",
				"description": "Return a bounding of generated buffer if is direct scene child",
				"parameters": [
					{
						"name": "bDirectSceneChild",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 215,
					"name": "IShapeBounding"
				},
				"bPublic": true
			},
			{
				"name": "getProp",
				"description": "Get prop",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 166,
								"name": "IShapePrimitiveProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "isClosed",
				"description": "Return bCloseShape",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "isStatic",
				"description": "Check if shape is static",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "setClosed",
				"description": "Set bCloseShape",
				"parameters": [
					{
						"name": "bCloseShape",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "adaptBuffer",
				"description": "Return adapted buffer between [-1,-1] and [1,1]",
				"parameters": [
					{
						"name": "input",
						"type": {
							"type": "reference",
							"name": "Float32Array"
						},
						"order": 9999
					},
					{
						"name": "mode",
						"type": {
							"type": "reference",
							"id": 161,
							"name": "EShapePrimitiveAdaptMode"
						},
						"order": 9999
					},
					{
						"name": "rect",
						"type": {
							"type": "reference",
							"id": 215,
							"name": "IShapeBounding"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"bPublic": true,
				"bStatic": true
			},
			{
				"name": "getBounding",
				"description": "Get buffer bounding",
				"parameters": [
					{
						"name": "buffer",
						"type": {
							"type": "reference",
							"name": "Float32Array"
						},
						"order": 9999
					},
					{
						"name": "bounding",
						"type": {
							"type": "reference",
							"id": 215,
							"name": "IShapeBounding"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "reference",
					"id": 215,
					"name": "IShapeBounding"
				},
				"bPublic": true,
				"bStatic": true
			}
		],
		"category": "Core.Abstract"
	},
	{
		"name": "Circle",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Circle.ts",
			"line": 11,
			"character": 12
		},
		"extends": [
			"ShapeLoop"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1083,
						"name": "IShapeLoopSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Circle."
		},
		"properties": [],
		"methods": [],
		"category": "Core.Primitives"
	},
	{
		"name": "Line",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Line.ts",
			"line": 12,
			"character": 10
		},
		"extends": [
			"ShapeBuffer"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1027,
						"name": "IShapeBufferSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Line."
		},
		"properties": [],
		"methods": [],
		"category": "Core.Primitives"
	},
	{
		"name": "Lissajous",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Lissajous.ts",
			"line": 14,
			"character": 15
		},
		"extends": [
			"ShapeLoop"
		],
		"description": "Lissajous shape",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1306,
						"name": "ILissajousSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Lissajous."
		},
		"properties": [
			{
				"name": "props",
				"type": {
					"type": "reference",
					"id": 1282,
					"name": "ILissajousProps"
				},
				"order": 9999,
				"bProtected": true
			}
		],
		"methods": [
			{
				"name": "getProp",
				"description": "Get property value",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 1282,
								"name": "ILissajousProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "ILissajousProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "ILissajousProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Core.Primitives"
	},
	{
		"name": "Rect",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Rect.ts",
			"line": 11,
			"character": 10
		},
		"extends": [
			"ShapeBuffer"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1027,
						"name": "IShapeBufferSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Rect."
		},
		"properties": [],
		"methods": [],
		"category": "Core.Primitives"
	},
	{
		"name": "RegularPolygon",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/RegularPolygon.ts",
			"line": 13,
			"character": 20
		},
		"extends": [
			"ShapeLoop"
		],
		"description": "Polygon shape",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1136,
						"name": "IRegularPolygonSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			]
		},
		"properties": [
			{
				"name": "props",
				"type": {
					"type": "reference",
					"id": 1114,
					"name": "IRegularPolygonProps"
				},
				"order": 9999,
				"bProtected": true
			}
		],
		"methods": [
			{
				"name": "getProp",
				"description": "Get property value",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 1114,
								"name": "IRegularPolygonProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "IRegularPolygonProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "IRegularPolygonSettings",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Core.Primitives"
	},
	{
		"name": "Rose",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Rose.ts",
			"line": 14,
			"character": 10
		},
		"extends": [
			"ShapeLoop"
		],
		"description": "Rose shape",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1191,
						"name": "IRoseSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Rose."
		},
		"properties": [
			{
				"name": "props",
				"type": {
					"type": "reference",
					"id": 1168,
					"name": "IRoseProps"
				},
				"order": 9999,
				"bProtected": true
			}
		],
		"methods": [
			{
				"name": "getProp",
				"description": "Get property value",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 1168,
								"name": "IRoseProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "IRoseProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "IRoseSettings",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "getFinalAngleFromK",
				"description": "Return end angle of rose",
				"parameters": [
					{
						"name": "n",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "d",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bStatic": true
			}
		],
		"category": "Core.Primitives"
	},
	{
		"name": "Spiral",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Spiral.ts",
			"line": 14,
			"character": 12
		},
		"extends": [
			"ShapeLoop"
		],
		"description": "Spiral shape",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1248,
						"name": "ISpiralSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Spiral."
		},
		"properties": [
			{
				"name": "props",
				"type": {
					"type": "reference",
					"id": 1224,
					"name": "ISpiralProps"
				},
				"order": 9999,
				"bProtected": true
			}
		],
		"methods": [
			{
				"name": "getProp",
				"description": "Get property value",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 1224,
								"name": "ISpiralProps"
							}
						},
						"order": 9999
					},
					{
						"name": "prop_arguments",
						"type": {
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "default_value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "any"
				},
				"bPublic": true
			},
			{
				"name": "setProp",
				"description": "Set single or multiple props",
				"parameters": [
					{
						"name": "key",
						"type": {
							"type": "union",
							"types": [
								{
									"type": "typeOperator",
									"operator": "keyof",
									"order": 9999,
									"target": {
										"name": "ISpiralProps",
										"type": "reference",
										"order": 9999
									}
								},
								{
									"name": "ISpiralProps",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "getRFromTSpiralType",
				"description": "Point position and scale factor for spiral types",
				"parameters": [
					{
						"name": "spiral",
						"type": {
							"type": "reference",
							"id": 1345,
							"name": "TSpiralType"
						},
						"order": 9999
					},
					{
						"name": "angle",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bStatic": true
			}
		],
		"category": "Core.Primitives"
	},
	{
		"name": "Triangle",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/core/shapes/primitives/Triangle.ts",
			"line": 10,
			"character": 14
		},
		"extends": [
			"ShapeBuffer"
		],
		"description": "Triangle ShapeBuffer",
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 1027,
						"name": "IShapeBufferSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			],
			"description": "Creates an instance of Triangleeee."
		},
		"properties": [],
		"methods": [],
		"category": "Core.Primitives"
	},
	{
		"type": "Interface",
		"name": "ISceneSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene.ts",
			"line": 13,
			"character": 31
		},
		"description": "The object to pass as the argument of a new scene",
		"properties": [
			{
				"name": "width",
				"description": "Scene width",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "height",
				"description": "Scene height",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "background",
				"description": "Default background color",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "mainColor",
				"description": "Default stroke color of shapes",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 4,
				"bOptional": true
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"name": "TStreamCallback",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene.ts",
			"line": 6,
			"character": 27
		},
		"parameter": {
			"name": "TStreamCallback",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 735,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 736,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 737,
									"name": "stream_arguments",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 710,
										"name": "ISceneChildStreamArguments"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/core/types/scene.ts",
							"line": 6,
							"character": 29
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Core.Types"
	},
	{
		"name": "ERepetitionType",
		"type": "Enumeration",
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 12,
			"character": 27
		},
		"order": 9999,
		"description": "Repetition type enumerator.",
		"members": [
			{
				"name": "Ring",
				"defaultValue": "1",
				"description": "Defines the type of repetition of the shape,\nin a circular way starting from the center of the scene",
				"order": 1
			},
			{
				"name": "Matrix",
				"defaultValue": "2",
				"description": "Defines the type of repetition of the shape,\non a nxm grid starting from the center of the scene",
				"order": 2
			}
		],
		"category": "Core.Enums"
	},
	{
		"type": "Interface",
		"name": "IBaseRepetition",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 33,
			"character": 32
		},
		"description": "Base repetition",
		"properties": [
			{
				"name": "index",
				"description": "Index of repetition, from 1 to count",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 1
			},
			{
				"name": "offset",
				"description": "Current repetition offset from 0 (first repetition) to 1 (last repetition)",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 2
			},
			{
				"name": "count",
				"description": "Number of repetitions",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 3
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "IRepetition",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 72,
			"character": 28
		},
		"extends": [
			"IShapeLoopRepetition"
		],
		"description": "Information about prop_arguments repetition",
		"properties": [
			{
				"name": "index",
				"description": "Index of repetition, from 1 to count",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 1
			},
			{
				"name": "offset",
				"description": "Current repetition offset from 0 (first repetition) to 1 (last repetition)",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 2
			},
			{
				"name": "count",
				"description": "Number of repetitions",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 3
			},
			{
				"name": "angle",
				"description": "angle of current repetition = repetition.offset * Math.PI * 2",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 4
			},
			{
				"name": "type",
				"description": "Define the type of repetition",
				"type": {
					"type": "reference",
					"id": 646,
					"name": "ERepetitionType"
				},
				"order": 5
			},
			{
				"name": "row",
				"description": "Information about rows of matrix repetition",
				"type": {
					"type": "reference",
					"id": 649,
					"name": "IBaseRepetition"
				},
				"order": 6
			},
			{
				"name": "col",
				"description": "Information about columns of matrix repetition",
				"type": {
					"type": "reference",
					"id": 649,
					"name": "IBaseRepetition"
				},
				"order": 7
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "ISceneChildPropArguments",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 282,
			"character": 41
		},
		"description": "Object argument for sceneChild props",
		"properties": [
			{
				"name": "context",
				"type": {
					"type": "query",
					"queryType": {
						"type": "reference",
						"id": 231,
						"name": "Context"
					}
				},
				"order": 9999
			},
			{
				"name": "data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "parent",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 703,
							"name": "ISceneChildPropArguments"
						}
					],
					"name": "Partial"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "repetition",
				"type": {
					"type": "reference",
					"id": 658,
					"name": "IRepetition"
				},
				"order": 9999
			},
			{
				"name": "shape",
				"type": {
					"type": "reference",
					"id": 512,
					"name": "ShapeBase"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "ISceneChildProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 98,
			"character": 33
		},
		"description": "Props interface.\nRemember: any size refere to dimension of a scene.",
		"properties": [
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "ISceneChildSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 245,
			"character": 36
		},
		"extends": [
			"ISceneChildProps"
		],
		"properties": [
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "ISceneChildStreamArguments",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 306,
			"character": 43
		},
		"description": "Object passed to the drawer where it is possible to draw the current frame\nstarting from frame_buffer_index up to frame_buffer_index + frame_length,\nthe fill or strtoke color of the frame is also present",
		"properties": [
			{
				"name": "shape",
				"type": {
					"type": "reference",
					"id": 275,
					"name": "ShapePrimitive"
				},
				"order": 1
			},
			{
				"name": "parent",
				"type": {
					"type": "reference",
					"id": 109,
					"name": "IBufferIndex"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 4
			},
			{
				"name": "fillColor",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 5
			},
			{
				"name": "strokeColor",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 6
			},
			{
				"name": "buffer",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 7
			},
			{
				"name": "frame_buffer_index",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 8
			},
			{
				"name": "frame_length",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9
			},
			{
				"name": "current_shape_index",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 10
			},
			{
				"name": "total_shapes",
				"description": "total primitives",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 11
			},
			{
				"name": "repetition",
				"description": "repetition of current generated shape",
				"type": {
					"type": "reference",
					"id": 658,
					"name": "IRepetition"
				},
				"order": 12
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeLoopRepetition",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 58,
			"character": 37
		},
		"extends": [
			"IBaseRepetition"
		],
		"properties": [
			{
				"name": "index",
				"description": "Index of repetition, from 1 to count",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 1
			},
			{
				"name": "offset",
				"description": "Current repetition offset from 0 (first repetition) to 1 (last repetition)",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 2
			},
			{
				"name": "count",
				"description": "Number of repetitions",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 3
			},
			{
				"name": "angle",
				"description": "angle of current repetition = repetition.offset * Math.PI * 2",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 4
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"name": "TSceneChildProp",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/scene-child.ts",
			"line": 297,
			"character": 27
		},
		"description": "Value or callable",
		"parameter": {
			"name": "TSceneChildProp",
			"description": "Value or callable",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "T",
						"type": "typeParameter",
						"order": 9999
					},
					{
						"type": "reflection",
						"declaration": {
							"name": "__type",
							"parameters": [
								{
									"name": "prop_arguments",
									"type": {
										"type": "reference",
										"id": 703,
										"name": "ISceneChildPropArguments"
									},
									"order": 9999
								}
							],
							"return_type": {
								"type": "typeParameter",
								"name": "T"
							}
						},
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 724,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		],
		"category": "Core.Types"
	},
	{
		"name": "EShapePrimitiveAdaptMode",
		"type": "Enumeration",
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 91,
			"character": 36
		},
		"order": 9999,
		"members": [
			{
				"name": "None",
				"description": "The buffer is not changed",
				"order": 1
			},
			{
				"name": "Scale",
				"defaultValue": "1 << 1",
				"description": "The buffer is scaled in a range between [-1, -1] and [1,1]",
				"order": 2
			},
			{
				"name": "Center",
				"defaultValue": "1 << 2",
				"description": "The buffer is scaled in a range between [-1, -1] and [1,1] and is centered",
				"order": 3
			},
			{
				"name": "Fill",
				"defaultValue": "1 << 3",
				"description": "The buffer is adapted centrally and expanded in a range between [-1, -1] and [1,1]",
				"order": 4
			}
		],
		"category": "Core.Enums"
	},
	{
		"type": "Interface",
		"name": "IBufferIndex",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 17,
			"character": 29
		},
		"description": "Object for index the buffer",
		"properties": [
			{
				"name": "frame_length",
				"description": "Frame length",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "parent",
				"description": "Parent indexing",
				"type": {
					"type": "reference",
					"id": 109,
					"name": "IBufferIndex"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "repetition",
				"description": "Current repetition reference oof frame",
				"type": {
					"type": "reference",
					"id": 658,
					"name": "IRepetition"
				},
				"order": 9999
			},
			{
				"name": "shape",
				"description": "Reference to shape",
				"type": {
					"type": "reference",
					"id": 512,
					"name": "ShapeBase"
				},
				"order": 9999
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeBaseSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 54,
			"character": 35
		},
		"extends": [
			"ISceneChildSettings"
		],
		"description": "ShapeBaseSettings",
		"properties": [
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeBounding",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 171,
			"character": 31
		},
		"description": "Size of a buffer and its position relative to the scene.\ncx|y is the center",
		"properties": [
			{
				"name": "x",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 1
			},
			{
				"name": "y",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 2
			},
			{
				"name": "cx",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 3
			},
			{
				"name": "cy",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 4
			},
			{
				"name": "height",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 5
			},
			{
				"name": "width",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 5
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapePrimitiveProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 121,
			"character": 37
		},
		"extends": [
			"ISceneChildProps"
		],
		"properties": [
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapePrimitiveSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 151,
			"character": 40
		},
		"extends": [
			"IShapePrimitiveProps",
			"IShapeBaseSettings"
		],
		"properties": [
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 78,
			"character": 31
		},
		"extends": [
			"IShapeBaseSettings"
		],
		"description": "Shape settings",
		"properties": [
			{
				"name": "shape",
				"description": "shape to apply repetitions and transformation",
				"type": {
					"type": "reference",
					"id": 50,
					"name": "SceneChild"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"name": "TVertexCallback",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-base.ts",
			"line": 43,
			"character": 27
		},
		"description": "Callback to pass at vertextCallback property",
		"parameter": {
			"name": "TVertexCallback",
			"description": "Callback to pass at vertextCallback property",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 223,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 224,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 225,
									"name": "vertex",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "tuple",
										"elements": [
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											},
											{
												"type": "intrinsic",
												"name": "number"
											}
										]
									}
								},
								{
									"id": 226,
									"name": "prop_arguments",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 703,
										"name": "ISceneChildPropArguments"
									}
								},
								{
									"id": 227,
									"name": "vertex_repetition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 649,
										"name": "IBaseRepetition"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/core/types/shape-base.ts",
							"line": 43,
							"character": 29
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Core.Types"
	},
	{
		"type": "Interface",
		"name": "ILissajousProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 169,
			"character": 32
		},
		"extends": [
			"IShapeLoopProps"
		],
		"description": "For <mark>wx</mark>, <mark>wy</mark> and <mark>wx</mark> see Lissajous on <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Lissajous_curve\">Wikipedia</a>",
		"properties": [
			{
				"name": "wx",
				"description": "wx coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -37,
				"bOptional": true
			},
			{
				"name": "wy",
				"description": "wy coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -36,
				"bOptional": true
			},
			{
				"name": "wz",
				"description": "wz coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -35,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "ILissajousSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 193,
			"character": 35
		},
		"extends": [
			"ILissajousProps",
			"IShapeLoopSettings"
		],
		"properties": [
			{
				"name": "wx",
				"description": "wx coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -37,
				"bOptional": true
			},
			{
				"name": "wy",
				"description": "wy coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -36,
				"bOptional": true
			},
			{
				"name": "wz",
				"description": "wz coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -35,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "shapeLoopPropsDependencies",
				"description": "Array of properties on which shapeloop generation depends,\nfor example the circle varies the number of points based on the radius (sideLength)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "vertexCallback"
								},
								{
									"type": "stringLiteral",
									"value": "prop_arguments"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Array"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "IRegularPolygonProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 90,
			"character": 37
		},
		"extends": [
			"IShapeLoopProps"
		],
		"properties": [
			{
				"name": "sideNumber",
				"description": "sideNumber / segments",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -35,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "IRegularPolygonSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 102,
			"character": 40
		},
		"extends": [
			"IRegularPolygonProps",
			"IShapeLoopSettings"
		],
		"properties": [
			{
				"name": "sideNumber",
				"description": "sideNumber / segments",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -35,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "shapeLoopPropsDependencies",
				"description": "Array of properties on which shapeloop generation depends,\nfor example the circle varies the number of points based on the radius (sideLength)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "vertexCallback"
								},
								{
									"type": "stringLiteral",
									"value": "prop_arguments"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Array"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "IRoseProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 109,
			"character": 27
		},
		"extends": [
			"IShapeLoopProps"
		],
		"description": "For <mark>n</mark> and <mark>d</mark> see Rose on <a target=\"_blank\" href=\"https://en.wikipedia.org/wiki/Rose_(mathematics)\">Wikipedia</a>",
		"properties": [
			{
				"name": "n",
				"description": "n coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -31,
				"bOptional": true
			},
			{
				"name": "d",
				"description": "d coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "IRoseSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 127,
			"character": 30
		},
		"extends": [
			"IRoseProps",
			"IShapeLoopSettings"
		],
		"properties": [
			{
				"name": "n",
				"description": "n coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -31,
				"bOptional": true
			},
			{
				"name": "d",
				"description": "d coefficient",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "shapeLoopPropsDependencies",
				"description": "Array of properties on which shapeloop generation depends,\nfor example the circle varies the number of points based on the radius (sideLength)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "vertexCallback"
								},
								{
									"type": "stringLiteral",
									"value": "prop_arguments"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Array"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeBufferProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 9,
			"character": 34
		},
		"extends": [
			"IShapePrimitiveProps"
		],
		"properties": [
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeBufferSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 15,
			"character": 37
		},
		"extends": [
			"IShapeBufferProps",
			"IShapePrimitiveSettings"
		],
		"properties": [
			{
				"name": "shape",
				"description": "[x1,y1, x2,y1-, ...., xn, yn]",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "Float32Array",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "Array",
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"order": 9999
						}
					]
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeLoopGenerator",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 52,
			"character": 36
		},
		"description": "Object to create a shape from a loop from <mark>start</mark>\nto <mark>end</mark> by <mark>inc</mark> increments.",
		"properties": [
			{
				"name": "end",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "inc",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "start",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "vertex",
				"type": {
					"type": "reference",
					"id": 1340,
					"name": "TShapeLoopGeneratorFormula"
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Core.Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeLoopProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 63,
			"character": 32
		},
		"extends": [
			"IShapePrimitiveProps"
		],
		"properties": [
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "IShapeLoopSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 75,
			"character": 35
		},
		"extends": [
			"IShapeLoopProps",
			"IShapePrimitiveSettings"
		],
		"properties": [
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "shapeLoopPropsDependencies",
				"description": "Array of properties on which shapeloop generation depends,\nfor example the circle varies the number of points based on the radius (sideLength)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "vertexCallback"
								},
								{
									"type": "stringLiteral",
									"value": "prop_arguments"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Array"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Props and Settings Interfaces"
	},
	{
		"type": "Interface",
		"name": "ISpiralProps",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 139,
			"character": 29
		},
		"extends": [
			"IShapeLoopProps"
		],
		"properties": [
			{
				"name": "spiral",
				"description": "type of spiral",
				"type": {
					"type": "reference",
					"id": 1345,
					"name": "TSpiralType"
				},
				"order": -35,
				"bOptional": true
			},
			{
				"name": "twists",
				"description": "number of twists",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -34,
				"bOptional": true
			},
			{
				"name": "twists_start",
				"description": "twist start",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -33,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"type": "Interface",
		"name": "ISpiralSettings",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 163,
			"character": 32
		},
		"extends": [
			"ISpiralProps",
			"IShapeLoopSettings"
		],
		"properties": [
			{
				"name": "spiral",
				"description": "type of spiral",
				"type": {
					"type": "reference",
					"id": 1345,
					"name": "TSpiralType"
				},
				"order": -35,
				"bOptional": true
			},
			{
				"name": "twists",
				"description": "number of twists",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -34,
				"bOptional": true
			},
			{
				"name": "twists_start",
				"description": "twist start",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -33,
				"bOptional": true
			},
			{
				"name": "loop",
				"description": "<a href=\"#/ref/IShapeLoopGenerator\">IShapeLoopGenerator</a> for more details",
				"type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "shapeLoopPropsDependencies",
				"description": "Array of properties on which shapeloop generation depends,\nfor example the circle varies the number of points based on the radius (sideLength)",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "stringLiteral",
									"value": "vertexCallback"
								},
								{
									"type": "stringLiteral",
									"value": "prop_arguments"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "Array"
				},
				"order": -30,
				"bOptional": true
			},
			{
				"name": "sideLength",
				"description": "scalar that multiplies the buffer or loop",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -20,
				"bOptional": true
			},
			{
				"name": "fillColor",
				"description": "fill color of the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -19,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"description": "stroke color oh the shape, hsl or rgb is preferred",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "intrinsic",
									"name": "string"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -18,
				"bOptional": true
			},
			{
				"name": "lineWidth",
				"description": "stroke dimension",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": -17,
				"bOptional": true
			},
			{
				"name": "adaptMode",
				"description": "Adapt buffer mode, see <a href=\"#/ref/EShapePrimitiveAdaptMode\">EShapePrimitiveAdaptMode</a> for more details",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": -16,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -15,
				"bOptional": true
			},
			{
				"name": "bUseParent",
				"description": "With this parameter the shape will be created at each repetition,\nuseful if you want to encapsulate this shape in another and use its <mark>repetition</mark> object.\nIn the case of ShapePrimitive fillColor, strokeColor and lineWidth don't need to as they are generated during the buffer stream.",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -14,
				"bOptional": true
			},
			{
				"name": "vertexCallback",
				"description": "Callback to apply transform at any vertex",
				"type": {
					"type": "reference",
					"id": 222,
					"name": "TVertexCallback"
				},
				"order": -13,
				"bOptional": true
			},
			{
				"name": "id",
				"description": "id of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -5,
				"bOptional": true
			},
			{
				"name": "name",
				"description": "human readablle name",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -4,
				"bOptional": true
			},
			{
				"name": "order",
				"description": "order for drawing priority",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -3,
				"bOptional": true
			},
			{
				"name": "type",
				"description": "human readable type of element",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": -2,
				"bOptional": true
			},
			{
				"name": "data",
				"description": "custom client data",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": -1,
				"bOptional": true
			},
			{
				"name": "repetitions",
				"description": "It defines the type of repetition.\nIf a number is passed the repetition will be Ring.\nIf an array (1) is passed the repetition will be nxn,\nif an array (2) the repetition will be nxm",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 1,
				"bOptional": true
			},
			{
				"name": "distance",
				"description": "If the repeat is Ring, pass a numerical value\nreferring to the distance from the center.\nIf the repeat is Matrix, pass an array (2) which refers\nto the distance between columns and rows.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 2,
				"bOptional": true
			},
			{
				"name": "displace",
				"description": "For Ring repeats, define the starting angle of the repeat",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 3,
				"bOptional": true
			},
			{
				"name": "skewX",
				"description": "skewX transformation.",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 4,
				"bOptional": true
			},
			{
				"name": "skewY",
				"description": "skewY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 5,
				"bOptional": true
			},
			{
				"name": "squeezeX",
				"description": "squeezeX transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 6,
				"bOptional": true
			},
			{
				"name": "squeezeY",
				"description": "squeezeY transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 7,
				"bOptional": true
			},
			{
				"name": "scale",
				"description": "scale transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 8,
				"bOptional": true
			},
			{
				"name": "translate",
				"description": "tranlsate transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 9,
				"bOptional": true
			},
			{
				"name": "rotateX",
				"description": "rotateX transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 10,
				"bOptional": true
			},
			{
				"name": "rotateY",
				"description": "rotateY transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 11,
				"bOptional": true
			},
			{
				"name": "rotateZ",
				"description": "rotateZ transformation in degeress",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 12,
				"bOptional": true
			},
			{
				"name": "transformOrigin",
				"description": "Origin of transformation",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 13,
				"bOptional": true
			},
			{
				"name": "perspective",
				"description": "perspective of rotation between 0 and 1",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 14,
				"bOptional": true
			},
			{
				"name": "perspectiveOrigin",
				"description": "perspective origin between [-1, -1] and [1, 1]",
				"type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				},
				"order": 15,
				"bOptional": true
			}
		],
		"category": "Core.Primitive Interfaces"
	},
	{
		"name": "TShapeLoopGeneratorFormula",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 27,
			"character": 38
		},
		"parameter": {
			"name": "TShapeLoopGeneratorFormula",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 1341,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"signatures": [
						{
							"id": 1342,
							"name": "__call",
							"kind": 4096,
							"kindString": "Call signature",
							"flags": {
								"isExported": true
							},
							"parameters": [
								{
									"id": 1343,
									"name": "shape_loop_repetition",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 653,
										"name": "IShapeLoopRepetition"
									}
								},
								{
									"id": 1344,
									"name": "prop_arguments",
									"kind": 32768,
									"kindString": "Parameter",
									"flags": {
										"isExported": true
									},
									"type": {
										"type": "reference",
										"id": 703,
										"name": "ISceneChildPropArguments"
									}
								}
							],
							"type": {
								"type": "reference",
								"name": "vec2"
							}
						}
					],
					"sources": [
						{
							"fileName": "src/core/types/shape-primitive.ts",
							"line": 27,
							"character": 40
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Core.Types"
	},
	{
		"name": "TSpiralType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/core/types/shape-primitive.ts",
			"line": 133,
			"character": 23
		},
		"parameter": {
			"name": "TSpiralType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "ARCHIMEDE",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "HYPERBOLIC",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "FERMAT",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "LITUUS",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "LOGARITHMIC",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Core.Types"
	},
	{
		"name": "Animation",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/animation/Animation.ts",
			"line": 8,
			"character": 15
		},
		"functions": [
			{
				"name": "composeAnimation",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "prop_name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "animation",
						"type": {
							"type": "reference",
							"id": 3459,
							"name": "TAnimation"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "any"
						}
					],
					"name": "TSceneChildProp"
				}
			}
		]
	},
	{
		"name": "TEasing",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/animation/Easings.ts",
			"line": 1,
			"character": 19
		},
		"parameter": {
			"name": "TEasing",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "linear",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quadraticIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quadraticOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quadraticInOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "cubicIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "cubicOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "cubicInOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quarticIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quarticOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quarticInOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quinticIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quinticOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "quinticInOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "sinusoidalIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "sinusoidalOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "sinusoidalInOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "exponentialIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "exponentialOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "exponentialInOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "circularIn",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "circularOut",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "circularInOut",
						"order": 9999
					}
				]
			},
			"order": 9999
		}
	},
	{
		"name": "Easings",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/animation/Easings.ts",
			"line": 25,
			"character": 13
		},
		"functions": [
			{
				"name": "backBoth",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "s",
						"description": "overshoot (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "backIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "s",
						"description": "overshoot (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "backOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "s",
						"description": "overshoot (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "bounceBoth",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "bounceIn",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "bounceOut",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "circularIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "circularInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "circularOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "cubicIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "cubicInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "cubicOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "elasticBoth",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "a",
						"description": "amplitude (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "p",
						"description": "period (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "elasticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "a",
						"description": "amplitude (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "p",
						"description": "period (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "elasticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "a",
						"description": "amplitude (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "p",
						"description": "period (optional)",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "exponentialIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "exponentialInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "exponentialOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "linear",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quadraticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "duratte",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quadraticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quadraticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quarticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quarticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quarticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quinticIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quinticInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "quinticOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "sinusoidalIn",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "sinusoidalInOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "sinusoidalOut",
				"parameters": [
					{
						"name": "time",
						"description": "current time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "start",
						"description": "start value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"description": "end value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "durate",
						"description": "duration",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			}
		]
	},
	{
		"name": "Simple",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/animation/Simple.ts",
			"line": 13,
			"character": 12
		},
		"functions": [
			{
				"name": "compose",
				"parameters": [
					{
						"name": "simpleAnimation",
						"type": {
							"type": "reference",
							"id": 3438,
							"name": "ISimpleAnimation"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				}
			},
			{
				"name": "loop",
				"parameters": [
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 3462,
							"name": "TSimpleAnimationLoop"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				}
			},
			{
				"name": "static",
				"parameters": [
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 3464,
							"name": "TSimpleAnimationStatic"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				}
			},
			{
				"name": "uncontrolledLoop",
				"parameters": [
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 3463,
							"name": "TSimpleAnimationUncontrolledLoop"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 723,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "intrinsic",
									"name": "string"
								},
								{
									"type": "intrinsic",
									"name": "number"
								},
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "TSceneChildProp"
				}
			}
		]
	},
	{
		"name": "DrawerCanvas",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/drawer-canvas/DrawerCanvas.ts",
			"line": 18,
			"character": 18
		},
		"extends": [
			"Emitter"
		],
		"constructor_ref": {
			"parameters": [
				{
					"name": "scene",
					"type": {
						"type": "reference",
						"id": 941,
						"name": "Scene"
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "canvasOrContainer",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "HTMLElement",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "HTMLCanvasElement",
								"type": "reference",
								"order": 9999
							},
							{
								"name": "OffscreenCanvas",
								"type": "reference",
								"order": 9999
							}
						]
					},
					"order": 9999,
					"bOptional": true
				},
				{
					"name": "drawOptions",
					"type": {
						"type": "reference",
						"id": 4118,
						"name": "DrawOptions"
					},
					"defaultValue": "{}",
					"order": 9999
				},
				{
					"name": "ratio",
					"type": {
						"type": "union",
						"types": [
							{
								"name": "number",
								"type": "intrinsic",
								"order": 9999
							},
							{
								"name": "undefined",
								"type": "intrinsic",
								"order": 9999
							}
						]
					},
					"defaultValue": "undefined",
					"order": 9999
				},
				{
					"name": "resolution",
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0",
					"order": 9999
				},
				{
					"name": "bBuffering",
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"defaultValue": "false",
					"order": 9999
				}
			]
		},
		"properties": [
			{
				"name": "animation_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "bBuffering",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"defaultValue": "false",
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "buffer",
				"type": {
					"type": "reference",
					"id": 4096,
					"name": "FrameBuffer"
				},
				"order": 9999,
				"bPublic": true
			},
			{
				"name": "canvas",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "HTMLCanvasElement",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "OffscreenCanvas",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "context",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "CanvasRenderingContext2D",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "OffscreenCanvasRenderingContext2D",
							"type": "reference",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "drawOptions",
				"type": {
					"type": "reference",
					"id": 4118,
					"name": "DrawOptions"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "draw_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "ratio",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "redraw_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "null",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "resolution",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "scene",
				"type": {
					"type": "reference",
					"id": 941,
					"name": "Scene"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "timeline",
				"type": {
					"type": "reference",
					"id": 3123,
					"name": "Timeline"
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "animate",
				"description": "Internal tick animation",
				"parameters": [
					{
						"name": "timestamp",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPrivate": true
			},
			{
				"name": "draw",
				"description": "Draw current scene",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "flushBuffer",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "getBBuffering",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "getCanvas",
				"description": "Return canvas element",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "HTMLCanvasElement"
						},
						{
							"type": "reference",
							"name": "OffscreenCanvas"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getContext",
				"description": "Return canvas context",
				"parameters": [],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "CanvasRenderingContext2D"
						},
						{
							"type": "reference",
							"name": "OffscreenCanvasRenderingContext2D"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getOption",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "typeParameter",
							"name": "K",
							"constraint": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 4118,
									"name": "DrawOptions"
								}
							}
						},
						"order": 9999
					},
					{
						"name": "default_value",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4118,
										"name": "DrawOptions"
									}
								}
							},
							"objectType": {
								"type": "reference",
								"name": "DrawOptions"
							}
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"typeParameter": [
					{
						"id": 4216,
						"name": "K",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 4118,
								"name": "DrawOptions"
							}
						}
					}
				],
				"return_type": {
					"type": "indexedAccess",
					"indexType": {
						"type": "typeParameter",
						"name": "K",
						"constraint": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 4118,
								"name": "DrawOptions"
							}
						}
					},
					"objectType": {
						"type": "reference",
						"name": "DrawOptions"
					}
				},
				"bPublic": true
			},
			{
				"name": "getOptions",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 4118,
					"name": "DrawOptions"
				},
				"bPublic": true
			},
			{
				"name": "getRatio",
				"description": "Return drawer ratio",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getRenderedFrames",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"bPublic": true
			},
			{
				"name": "getResolution",
				"description": "Get resolution",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getScene",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 941,
					"name": "Scene"
				},
				"bPublic": true
			},
			{
				"name": "getTimeline",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 3123,
					"name": "Timeline"
				},
				"bPublic": true
			},
			{
				"name": "getValueFromResolution",
				"description": "Get scene value scaled based on resolution",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getValueFromResolutionScaled",
				"description": "Get scene value scaled based on resolution",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "pauseAnimation",
				"description": "Pause animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "playAnimation",
				"description": "Play animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "redraw",
				"description": "Redraw",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "resize",
				"description": "Resize scene and canvas",
				"parameters": [
					{
						"name": "width",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "height",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "ratio",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "resolution",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setBuffering",
				"parameters": [
					{
						"name": "bBuffering",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setCanvas",
				"description": "Set the canvas or append to container",
				"parameters": [
					{
						"name": "canvasOrContainer",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setOption",
				"description": "Set draw option",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "K",
									"type": "typeParameter",
									"order": 9999
								},
								{
									"name": "DrawOptions",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeParameter",
								"name": "K",
								"constraint": {
									"type": "typeOperator",
									"operator": "keyof",
									"target": {
										"type": "reference",
										"id": 4118,
										"name": "DrawOptions"
									}
								}
							},
							"objectType": {
								"type": "reference",
								"typeArguments": [
									{
										"type": "reference",
										"name": "DrawOptions"
									}
								],
								"name": "Required"
							}
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"typeParameter": [
					{
						"id": 4211,
						"name": "K",
						"kind": 131072,
						"kindString": "Type parameter",
						"flags": {},
						"comment": {},
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "reference",
								"id": 4118,
								"name": "DrawOptions"
							}
						}
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setRatio",
				"description": "Resize by ratio",
				"parameters": [
					{
						"name": "ratio",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setResolution",
				"description": "Get resolution of drawer",
				"parameters": [
					{
						"name": "resolution",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setScene",
				"description": "Set scene",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "startAnimation",
				"description": "Start animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "stopAnimation",
				"description": "Stop animation drawing",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "draw",
				"description": "Static draw scene",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "context",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "CanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "null",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "options",
						"type": {
							"type": "reference",
							"id": 4118,
							"name": "DrawOptions"
						},
						"order": 9999
					},
					{
						"name": "resolution",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "undefined",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true,
				"bStatic": true
			}
		],
		"category": "Services"
	},
	{
		"name": "FrameBuffer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/drawer-canvas/FrameBuffer.ts",
			"line": 6,
			"character": 17
		},
		"properties": [
			{
				"name": "frames",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 4098,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"indexSignature": [
							{
								"id": 4099,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 4100,
										"name": "frameNumber",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								],
								"type": {
									"type": "reference",
									"name": "ImageData"
								}
							}
						],
						"sources": [
							{
								"fileName": "src/services/drawer-canvas/FrameBuffer.ts",
								"line": 7,
								"character": 16
							}
						]
					}
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "count",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "exist",
				"parameters": [
					{
						"name": "frameNumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "flush",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "get",
				"parameters": [
					{
						"name": "frameNumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"name": "ImageData"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bPublic": true
			},
			{
				"name": "getRenderedFrames",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"bPublic": true
			},
			{
				"name": "push",
				"parameters": [
					{
						"name": "frameNumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "context",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "CanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvasRenderingContext2D",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Services.DrawerCavnas"
	},
	{
		"name": "Emitter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/events/Emitter.ts",
			"line": 8,
			"character": 22
		},
		"properties": [
			{
				"name": "callbacks",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reflection",
									"declaration": {
										"id": 3084,
										"name": "__type",
										"kind": 65536,
										"kindString": "Type literal",
										"flags": {},
										"signatures": [
											{
												"id": 3085,
												"name": "__call",
												"kind": 4096,
												"kindString": "Call signature",
												"flags": {},
												"parameters": [
													{
														"id": 3086,
														"name": "args",
														"kind": 32768,
														"kindString": "Parameter",
														"flags": {},
														"type": {
															"type": "indexedAccess",
															"indexType": {
																"type": "typeOperator",
																"operator": "keyof",
																"target": {
																	"type": "typeParameter",
																	"name": "EventTypes"
																}
															},
															"objectType": {
																"type": "typeParameter",
																"name": "EventTypes"
															}
														}
													}
												],
												"type": {
													"type": "intrinsic",
													"name": "any"
												}
											}
										],
										"sources": [
											{
												"fileName": "src/services/events/Emitter.ts",
												"line": 9,
												"character": 51
											}
										]
									}
								}
							],
							"name": "Array"
						}
					],
					"name": "Record"
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "attach",
				"description": "Attach callback at event",
				"parameters": [
					{
						"name": "e",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					},
					{
						"name": "callback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 3093,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 3094,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 3095,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "typeParameter",
															"name": "EventTypes"
														}
													},
													"objectType": {
														"type": "typeParameter",
														"name": "EventTypes"
													}
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/services/events/Emitter.ts",
										"line": 23,
										"character": 45
									}
								]
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "detach",
				"description": "Remove callbach listener at event",
				"parameters": [
					{
						"name": "e",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					},
					{
						"name": "callback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 3100,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 3101,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 3102,
												"name": "value",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {
													"isOptional": true
												},
												"type": {
													"type": "indexedAccess",
													"indexType": {
														"type": "typeOperator",
														"operator": "keyof",
														"target": {
															"type": "typeParameter",
															"name": "EventTypes"
														}
													},
													"objectType": {
														"type": "typeParameter",
														"name": "EventTypes"
													}
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/services/events/Emitter.ts",
										"line": 38,
										"character": 45
									}
								]
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "dispatch",
				"description": "Dispatch event",
				"parameters": [
					{
						"name": "e",
						"type": {
							"type": "typeOperator",
							"operator": "keyof",
							"target": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					},
					{
						"name": "params",
						"type": {
							"type": "indexedAccess",
							"indexType": {
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "typeParameter",
									"name": "EventTypes"
								}
							},
							"objectType": {
								"type": "typeParameter",
								"name": "EventTypes"
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Services"
	},
	{
		"name": "JSONExporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/exporters/JSONExporter.ts",
			"line": 23,
			"character": 18
		},
		"methods": [
			{
				"name": "parse",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"defaultValue": "\"EmptyProject\"",
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			{
				"name": "parseAsProject",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"defaultValue": "\"EmptyProject\"",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 3471,
					"name": "IProject"
				}
			},
			{
				"name": "parseSceneChild",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "parent_id",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "number",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "depth",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"defaultValue": "0",
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 3507,
					"name": "IProjectSceneChild"
				}
			},
			{
				"name": "toString",
				"parameters": [
					{
						"name": "project",
						"type": {
							"type": "reference",
							"id": 3471,
							"name": "IProject"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				}
			}
		],
		"category": "Services"
	},
	{
		"name": "SVGExporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/exporters/SVGExporter.ts",
			"line": 19,
			"character": 17
		},
		"methods": [
			{
				"name": "parse",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 4304,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "string"
				}
			},
			{
				"name": "draw",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "options",
						"type": {
							"type": "reference",
							"id": 4118,
							"name": "DrawOptions"
						},
						"order": 9999
					},
					{
						"name": "resolution",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "decimals",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Array"
				},
				"bStatic": true
			}
		],
		"category": "Services"
	},
	{
		"name": "JSONImporter",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/importers/JSONImporter.ts",
			"line": 16,
			"character": 18
		},
		"methods": [
			{
				"name": "parse",
				"parameters": [
					{
						"name": "project_json",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "parseSceneChild",
				"parameters": [
					{
						"name": "projectSceneChild",
						"type": {
							"type": "reference",
							"id": 3507,
							"name": "IProjectSceneChild"
						},
						"order": 9999
					},
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "createEmptyProject",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 3471,
					"name": "IProject"
				},
				"bStatic": true
			}
		],
		"category": "Services"
	},
	{
		"name": "Capturer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/renderer/Capturer.ts",
			"line": 13,
			"character": 14
		},
		"constructor_ref": {
			"parameters": [
				{
					"name": "settings",
					"type": {
						"type": "reference",
						"id": 4328,
						"name": "ICapturerSettings"
					},
					"defaultValue": "{}",
					"order": 9999
				}
			]
		},
		"properties": [
			{
				"name": "chunks",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Uint8Array"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "encoder",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "jpeg",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "png",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "extension",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": ".jpg",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": ".png",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "promises",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "Promise"
						}
					],
					"name": "Array"
				},
				"order": 9999
			},
			{
				"name": "quality",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "started",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 4326,
					"name": "TRenderType"
				},
				"order": 9999
			}
		],
		"methods": [
			{
				"name": "capture",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "framenumber",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Promise"
				}
			},
			{
				"name": "save",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "Uint8Array"
								}
							],
							"name": "Array"
						}
					],
					"name": "Promise"
				}
			},
			{
				"name": "setSettings",
				"parameters": [
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 4328,
							"name": "ICapturerSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "start",
				"parameters": [
					{
						"name": "total_frames",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "stop",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "getBlob",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "reference",
							"id": 4326,
							"name": "TRenderType"
						},
						"order": 9999
					},
					{
						"name": "quality",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Blob"
						}
					],
					"name": "Promise"
				},
				"bStatic": true
			},
			{
				"name": "getRenderTime",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "reference",
							"id": 4325,
							"name": "TRenderImageType"
						},
						"order": 9999
					},
					{
						"name": "quality",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Promise"
				},
				"bStatic": true
			},
			{
				"name": "render",
				"parameters": [
					{
						"name": "canvas",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "HTMLCanvasElement",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "OffscreenCanvas",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "reference",
							"id": 4326,
							"name": "TRenderType"
						},
						"order": 9999
					},
					{
						"name": "quality",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Uint8Array"
						}
					],
					"name": "Promise"
				},
				"bStatic": true
			}
		],
		"category": "Services.Renderer"
	},
	{
		"name": "Renderer",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/renderer/Renderer.ts",
			"line": 18,
			"character": 14
		},
		"extends": [
			"Emitter"
		],
		"properties": [
			{
				"name": "capturer",
				"type": {
					"type": "reference",
					"id": 4331,
					"name": "Capturer"
				},
				"order": 9999
			},
			{
				"name": "renderPromise",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "ICancelablePromise",
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "Uint8Array"
								}
							],
							"order": 9999
						},
						{
							"name": "ICancelablePromise",
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "reference",
											"name": "Blob"
										}
									],
									"name": "Array"
								}
							],
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "started",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			}
		],
		"methods": [
			{
				"name": "prepareRenderAnimation",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 4304,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 4310,
							"name": "IRenderStart"
						}
					],
					"name": "Promise"
				},
				"bPrivate": true
			},
			{
				"name": "renderAnimation",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 4304,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "reference",
									"name": "Blob"
								}
							],
							"name": "Array"
						}
					],
					"name": "Promise"
				},
				"bPublic": true
			},
			{
				"name": "renderAnimationPart",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 4304,
							"name": "IRenderSettings"
						},
						"order": 9999
					},
					{
						"name": "frame_from",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "frame_count",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "part",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "total_frames",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "total_parts",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"name": "Blob"
								},
								{
									"type": "intrinsic",
									"name": "undefined"
								}
							]
						}
					],
					"name": "Promise"
				},
				"bPrivate": true
			},
			{
				"name": "renderImage",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "settings",
						"type": {
							"type": "reference",
							"id": 4304,
							"name": "IRenderSettings"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"name": "Uint8Array"
						}
					],
					"name": "Promise"
				},
				"bPublic": true
			},
			{
				"name": "stop",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			}
		],
		"category": "Services.Renderer"
	},
	{
		"type": "Interface",
		"name": "ISceneChildPropData",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
			"line": 8,
			"character": 36
		},
		"properties": [
			{
				"name": "animable",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "canBArray",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "default",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			},
			{
				"name": "default_animate",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "label",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "max",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "min",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "options",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reflection",
							"declaration": {
								"id": 3546,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"children": [
									{
										"id": 3547,
										"name": "key",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true
										},
										"sources": [
											{
												"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
												"line": 15,
												"character": 22
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									},
									{
										"id": 3548,
										"name": "value",
										"kind": 32,
										"kindString": "Variable",
										"flags": {
											"isExported": true
										},
										"sources": [
											{
												"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
												"line": 15,
												"character": 37
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"groups": [
									{
										"title": "Variables",
										"kind": 32,
										"children": [
											3547,
											3548
										]
									}
								],
								"sources": [
									{
										"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
										"line": 15,
										"character": 17
									}
								]
							}
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "step",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "transformation",
				"type": {
					"type": "reference",
					"id": 3454,
					"name": "TDrawerTransformation"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 3555,
					"name": "TPropInputType"
				},
				"order": 9999
			},
			{
				"name": "type_value",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "float",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "int",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		]
	},
	{
		"name": "TPropInputType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
			"line": 6,
			"character": 26
		},
		"parameter": {
			"name": "TPropInputType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "range",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "multiple-range",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "color",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "select",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "checkbox",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "radio",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "slider",
						"order": 9999
					}
				]
			},
			"order": 9999
		}
	},
	{
		"name": "TSceneChildPropsDataKeys",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
			"line": 24,
			"character": 36
		},
		"parameter": {
			"name": "TSceneChildPropsDataKeys",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "union",
						"types": [
							{
								"type": "typeOperator",
								"operator": "keyof",
								"target": {
									"type": "reference",
									"id": 3529,
									"name": "TSceneChildProps"
								}
							},
							{
								"type": "stringLiteral",
								"value": "loop.start"
							},
							{
								"type": "stringLiteral",
								"value": "loop.end"
							},
							{
								"type": "stringLiteral",
								"value": "loop.inc"
							}
						]
					},
					{
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "shapeLoopPropsDependencies"
							},
							{
								"type": "stringLiteral",
								"value": "vertexCallback"
							},
							{
								"type": "stringLiteral",
								"value": "loop"
							},
							{
								"type": "stringLiteral",
								"value": "name"
							},
							{
								"type": "stringLiteral",
								"value": "order"
							},
							{
								"type": "stringLiteral",
								"value": "type"
							},
							{
								"type": "stringLiteral",
								"value": "data"
							},
							{
								"type": "stringLiteral",
								"value": "shape"
							},
							{
								"type": "stringLiteral",
								"value": "id"
							}
						]
					}
				],
				"name": "Exclude"
			},
			"order": 9999
		}
	},
	{
		"name": "SceneChildPropsData",
		"type": "Object",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneChildPropsData.ts",
			"line": 48,
			"character": 25
		}
	},
	{
		"name": "ScenePropUtilities",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/ScenePropUtilities.ts",
			"line": 17,
			"character": 24
		},
		"properties": [
			{
				"name": "RAW_ARGUMENTS",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"{ context, repetition, time, shape, shape_loop, data }\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			},
			{
				"name": "RAW_ARGUMENTS_WITH_PARENT",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"{ context, repetition, parent, time, shape, shape_loop, data }\"",
				"order": 9999,
				"bPublic": true,
				"bStatic": true,
				"bReadonly": true
			}
		],
		"methods": [
			{
				"name": "bPropTransformable",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bStatic": true
			},
			{
				"name": "bValueAnimation",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "TAnimation",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "any",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bStatic": true
			},
			{
				"name": "bValueDrawer",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "TDrawerValue",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "any",
									"type": "intrinsic",
									"order": 9999
								}
							]
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bStatic": true
			},
			{
				"name": "bValueLoop",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bStatic": true
			},
			{
				"name": "bValueVertexCallback",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bStatic": true
			},
			{
				"name": "composeLoop",
				"parameters": [
					{
						"name": "loop",
						"type": {
							"type": "reference",
							"id": 3422,
							"name": "IShapeLoop"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"id": 1057,
					"name": "IShapeLoopGenerator"
				},
				"bStatic": true
			},
			{
				"name": "composeVertexCallback",
				"parameters": [
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 222,
							"name": "TVertexCallback"
						},
						{
							"type": "intrinsic",
							"name": "undefined"
						}
					]
				},
				"bStatic": true
			},
			{
				"name": "getTransformedValue",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "string"
						},
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "Array"
						}
					]
				},
				"bStatic": true
			},
			{
				"name": "getTransformedValueInverse",
				"parameters": [
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "reference",
							"id": 3556,
							"name": "TSceneChildPropsDataKeys"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "intrinsic",
							"name": "number"
						},
						{
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"name": "Array"
						}
					]
				},
				"bStatic": true
			},
			{
				"name": "getValueDrawerTransformationType",
				"parameters": [
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 3454,
							"name": "TDrawerTransformation"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				},
				"bStatic": true
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "SceneUtilities",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneUtilities.ts",
			"line": 40,
			"character": 20
		},
		"properties": [
			{
				"name": "registeredSceneChilds",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 4003,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"indexSignature": [
							{
								"id": 4004,
								"name": "__index",
								"kind": 8192,
								"kindString": "Index signature",
								"flags": {},
								"parameters": [
									{
										"id": 4005,
										"name": "type",
										"kind": 32768,
										"kindString": "Parameter",
										"flags": {},
										"type": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								],
								"type": {
									"type": "reference",
									"id": 4093,
									"name": "SceneChildInstance"
								}
							}
						],
						"sources": [
							{
								"fileName": "src/services/scene-utilities/SceneUtilities.ts",
								"line": 41,
								"character": 31
							}
						]
					}
				},
				"order": 9999,
				"bPrivate": true
			}
		],
		"methods": [
			{
				"name": "add",
				"description": "Add scene child to parent.\nCreate a group if parent is Shape and has one element (not Group) inside.",
				"parameters": [
					{
						"name": "parent",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								},
								{
									"name": "Scene",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "sceneChild",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 3529,
							"name": "TSceneChildProps"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "copy",
				"description": "Return a copy of sceneChild",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "strict",
						"type": {
							"type": "intrinsic",
							"name": "boolean"
						},
						"defaultValue": "false",
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "create",
				"description": "Logic creation of a SceneChild\nSince scene is not passed, name are set if they are present in args or type",
				"parameters": [
					{
						"name": "item",
						"type": {
							"type": "union",
							"types": [
								{
									"name": "string",
									"type": "intrinsic",
									"order": 9999
								},
								{
									"name": "SceneChild",
									"type": "reference",
									"order": 9999
								}
							]
						},
						"order": 9999
					},
					{
						"name": "props",
						"type": {
							"type": "reference",
							"id": 3529,
							"name": "TSceneChildProps"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999,
						"bOptional": true
					},
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "getChildren",
				"description": "Return children of a shape.\nOnly Group has array of children, Shape has only one child.",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				}
			},
			{
				"name": "getChildrenPrimitives",
				"description": "Return only primitive children",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				}
			},
			{
				"name": "getCountOfSceneChildType",
				"description": "Return a number of element type into a scene",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "getCountSceneChildOfType",
				"description": "Return number of element from a type",
				"parameters": [
					{
						"name": "scene",
						"type": {
							"type": "reference",
							"id": 941,
							"name": "Scene"
						},
						"order": 9999
					},
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				}
			},
			{
				"name": "getNeighbors",
				"description": "Return a list of neighbors",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				}
			},
			{
				"name": "getParent",
				"description": "Get first level parent",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "getParents",
				"description": "Get all parents",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						}
					],
					"name": "Array"
				}
			},
			{
				"name": "getRegistered",
				"description": "Return a list of name of registered sceneChild",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "string"
						}
					],
					"name": "Array"
				},
				"bPublic": true
			},
			{
				"name": "getRootParent",
				"description": "Get Root parent",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "union",
					"types": [
						{
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						{
							"type": "intrinsic",
							"name": "null"
						}
					]
				}
			},
			{
				"name": "hasLoop",
				"description": "Check scene child is a ShapeLoop",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				}
			},
			{
				"name": "hasShapeBuffer",
				"description": "Check sceneChild is a ShapeBuffer an are binded",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				}
			},
			{
				"name": "hasShapeChild",
				"description": "Check sceneChild are Shape and has a child",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				}
			},
			{
				"name": "isAPrimitive",
				"description": "Check scene child is a Primitive",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				}
			},
			{
				"name": "isGroup",
				"description": "Check sceneChild is Group",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				}
			},
			{
				"name": "register",
				"description": "Register scene child for fast creation",
				"parameters": [
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "ref",
						"type": {
							"type": "reference",
							"id": 4093,
							"name": "SceneChildInstance"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "remove",
				"description": "Remove scene child from",
				"parameters": [
					{
						"name": "from",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "item",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999,
						"bOptional": true
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "setProp",
				"description": "Set UISceneChild prop, convert animation on transformable props",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "name",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					},
					{
						"name": "value",
						"type": {
							"type": "intrinsic",
							"name": "any"
						},
						"order": 9999
					},
					{
						"name": "drawer",
						"type": {
							"type": "reference",
							"id": 4143,
							"name": "DrawerCanvas"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			},
			{
				"name": "unregister",
				"description": "unregister scene child",
				"parameters": [
					{
						"name": "type",
						"type": {
							"type": "intrinsic",
							"name": "string"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "walk",
				"description": "Walk through sceneChild",
				"parameters": [
					{
						"name": "sceneChild",
						"type": {
							"type": "reference",
							"id": 50,
							"name": "SceneChild"
						},
						"order": 9999
					},
					{
						"name": "callback",
						"type": {
							"type": "reflection",
							"declaration": {
								"id": 4069,
								"name": "__type",
								"kind": 65536,
								"kindString": "Type literal",
								"flags": {
									"isExported": true
								},
								"signatures": [
									{
										"id": 4070,
										"name": "__call",
										"kind": 4096,
										"kindString": "Call signature",
										"flags": {},
										"parameters": [
											{
												"id": 4071,
												"name": "child",
												"kind": 32768,
												"kindString": "Parameter",
												"flags": {},
												"type": {
													"type": "reference",
													"id": 50,
													"name": "SceneChild"
												}
											}
										],
										"type": {
											"type": "intrinsic",
											"name": "void"
										}
									}
								],
								"sources": [
									{
										"fileName": "src/services/scene-utilities/SceneUtilities.ts",
										"line": 431,
										"character": 39
									}
								]
							}
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				}
			}
		],
		"category": "Services.Scene Utilities"
	},
	{
		"name": "SceneChildInstance",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/scene-utilities/SceneUtilities.ts",
			"line": 33,
			"character": 30
		},
		"parameter": {
			"name": "SceneChildInstance",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 4094,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"sources": [
						{
							"fileName": "src/services/scene-utilities/SceneUtilities.ts",
							"line": 33,
							"character": 32
						}
					]
				}
			},
			"order": 9999
		}
	},
	{
		"name": "Timeline",
		"type": "Class",
		"order": 9999,
		"source": {
			"fileName": "src/services/timeline/Timeline.ts",
			"line": 11,
			"character": 14
		},
		"extends": [
			"Emitter"
		],
		"properties": [
			{
				"name": "accumulator",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "b_sequence_started",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "current_frame",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps_samples",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps_samples_index",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "fps_samples_size",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "last_tick",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "paused_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "sequence",
				"type": {
					"type": "reference",
					"id": 3116,
					"name": "SequenceMeta"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "start_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "tick_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999,
				"bPrivate": true
			},
			{
				"name": "PAUSE",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"pause\"",
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "START",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"start\"",
				"order": 9999,
				"bStatic": true
			},
			{
				"name": "STOP",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"defaultValue": "\"stop\"",
				"order": 9999,
				"bStatic": true
			}
		],
		"methods": [
			{
				"name": "bSequenceStarted",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			},
			{
				"name": "calculateFPS",
				"description": "Calculate fps",
				"parameters": [
					{
						"name": "currentFPS",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPrivate": true
			},
			{
				"name": "calculateTickAndSequence",
				"description": "Set the number of frames based on the sequence",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPrivate": true
			},
			{
				"name": "getCurrentFrame",
				"description": "Return current animation frame",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getFrameAtTime",
				"description": "Return frame number at time",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getFrameTime",
				"description": "get the time at specific frame number",
				"parameters": [
					{
						"name": "frame",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getFramerate",
				"description": "Return framerate",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getFramesCount",
				"description": "Get number of frames of animation",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getSequence",
				"description": "Return the sequence",
				"parameters": [],
				"return_type": {
					"type": "reference",
					"id": 3116,
					"name": "SequenceMeta"
				},
				"bPublic": true
			},
			{
				"name": "getSequenceDuration",
				"description": "Get animation durate",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getSequenceEndTime",
				"description": "Get a aniamtion end time",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getSequenceStartTime",
				"description": "Get animation start time",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getTickTime",
				"description": "Return tick time (based on framerate)",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "getTime",
				"description": "Return the current time based on current frame",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "number"
				},
				"bPublic": true
			},
			{
				"name": "pause",
				"description": "Pause the sequence",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setFrame",
				"description": "set current frame",
				"parameters": [
					{
						"name": "frame",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setFramerate",
				"description": "Set a framerate of animation",
				"parameters": [
					{
						"name": "framerate",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setSequence",
				"description": "Set sequence",
				"parameters": [
					{
						"name": "start",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "end",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					},
					{
						"name": "framerate",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setSequenceEndTime",
				"description": "Set animation end time",
				"parameters": [
					{
						"name": "end_time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setSequenceStartTime",
				"description": "Set animation start time",
				"parameters": [
					{
						"name": "start_time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "setTime",
				"description": "Set animation at time",
				"parameters": [
					{
						"name": "time",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "start",
				"description": "Start the sequence",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "stop",
				"description": "Stop the sequence and reset",
				"parameters": [],
				"return_type": {
					"type": "intrinsic",
					"name": "void"
				},
				"bPublic": true
			},
			{
				"name": "tick",
				"description": "Animation tick",
				"parameters": [
					{
						"name": "timestamp",
						"description": "current timestamp",
						"type": {
							"type": "intrinsic",
							"name": "number"
						},
						"order": 9999
					}
				],
				"return_type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"bPublic": true
			}
		],
		"category": "Services.Timeline"
	},
	{
		"type": "Interface",
		"name": "ICallableValue",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 11,
			"character": 31
		},
		"properties": [
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"typeParameters": [
			{
				"id": 3419,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				},
				"comment": {
					"shortText": "\n"
				}
			}
		],
		"category": "Services.Animation"
	},
	{
		"type": "Interface",
		"name": "IRawState",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 89,
			"character": 26
		},
		"extends": [
			"ICallableValue"
		],
		"properties": [
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"category": "Other"
	},
	{
		"type": "Interface",
		"name": "IShapeLoop",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 39,
			"character": 27
		},
		"properties": [
			{
				"name": "dynamyc",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "end",
				"type": {
					"type": "reference",
					"id": 3452,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "inc",
				"type": {
					"type": "reference",
					"id": 3452,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "start",
				"type": {
					"type": "reference",
					"id": 3452,
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "TCallableValue"
				},
				"order": 9999
			},
			{
				"name": "vertex",
				"type": {
					"type": "reference",
					"id": 3418,
					"typeArguments": [
						{
							"type": "union",
							"types": [
								{
									"type": "reference",
									"typeArguments": [
										{
											"type": "intrinsic",
											"name": "number"
										}
									],
									"name": "Array"
								},
								{
									"type": "reference",
									"name": "Float32Array"
								}
							]
						}
					],
					"name": "ICallableValue"
				},
				"order": 9999
			}
		],
		"category": "Other"
	},
	{
		"type": "Interface",
		"name": "ISimpleAnimation",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 70,
			"character": 33
		},
		"properties": [
			{
				"name": "colorTransitionMode",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "hue",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "rgb",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "delay",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "durate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "from",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "Array",
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "invertOdd",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "mode",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "sinusoidal",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "easing",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "mode_function",
				"type": {
					"type": "reference",
					"id": 3460,
					"name": "TModeFunction"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "to",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "Array",
							"type": "reference",
							"typeArguments": [
								{
									"type": "intrinsic",
									"name": "number"
								}
							],
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 3461,
					"name": "TSimpleAnimationType"
				},
				"order": 9999
			},
			{
				"name": "type_value",
				"type": {
					"type": "union",
					"types": [
						{
							"type": "stringLiteral",
							"value": "int",
							"order": 9999
						},
						{
							"type": "stringLiteral",
							"value": "float",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		],
		"category": "Other"
	},
	{
		"type": "Interface",
		"name": "IVertexCallback",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 49,
			"character": 32
		},
		"extends": [
			"ICallableValue"
		],
		"properties": [
			{
				"name": "dynamic",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "raw",
				"description": "raw function (string) return T",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "state",
				"type": {
					"type": "intrinsic",
					"name": "any"
				},
				"order": 9999
			}
		],
		"category": "Other"
	},
	{
		"name": "TAnimation",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 65,
			"character": 22
		},
		"parameter": {
			"name": "TAnimation",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "IAnimationSimple",
						"type": "reference",
						"order": 9999
					},
					{
						"name": "IAnimationRaw",
						"type": "reference",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TCallableValue",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 25,
			"character": 26
		},
		"parameter": {
			"name": "TCallableValue",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "T",
						"type": "typeParameter",
						"order": 9999
					},
					{
						"name": "ICallableValue",
						"type": "reference",
						"typeArguments": [
							{
								"type": "typeParameter",
								"name": "T"
							}
						],
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"typeParameters": [
			{
				"id": 3453,
				"name": "T",
				"kind": 131072,
				"kindString": "Type parameter",
				"flags": {
					"isExported": true
				}
			}
		],
		"category": "Services.Animation"
	},
	{
		"name": "TDrawerTransformation",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 30,
			"character": 33
		},
		"parameter": {
			"name": "TDrawerTransformation",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "none",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "angle",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "resolution-based",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "resolution-scaled-based",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Services.Animation"
	},
	{
		"name": "TDrawerValue",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 32,
			"character": 24
		},
		"parameter": {
			"name": "TDrawerValue",
			"type": {
				"type": "reflection",
				"declaration": {
					"id": 3456,
					"name": "__type",
					"kind": 65536,
					"kindString": "Type literal",
					"flags": {
						"isExported": true
					},
					"children": [
						{
							"id": 3457,
							"name": "type",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/services/types/animation.ts",
									"line": 33,
									"character": 5
								}
							],
							"type": {
								"type": "stringLiteral",
								"value": "drawer-transformation"
							}
						},
						{
							"id": 3458,
							"name": "value",
							"kind": 32,
							"kindString": "Variable",
							"flags": {
								"isExported": true
							},
							"sources": [
								{
									"fileName": "src/services/types/animation.ts",
									"line": 34,
									"character": 6
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "any"
							}
						}
					],
					"groups": [
						{
							"title": "Variables",
							"kind": 32,
							"children": [
								3457,
								3458
							]
						}
					],
					"sources": [
						{
							"fileName": "src/services/types/animation.ts",
							"line": 32,
							"character": 26
						}
					]
				}
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TModeFunction",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 67,
			"character": 25
		},
		"parameter": {
			"name": "TModeFunction",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "TEasing",
						"type": "reference",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "sin",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "cos",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSimpleAnimationLoop",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 85,
			"character": 32
		},
		"parameter": {
			"name": "TSimpleAnimationLoop",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 3438,
						"name": "ISimpleAnimation"
					},
					{
						"type": "union",
						"types": [
							{
								"type": "stringLiteral",
								"value": "delay"
							},
							{
								"type": "stringLiteral",
								"value": "type"
							}
						]
					}
				],
				"name": "Omit"
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSimpleAnimationStatic",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 87,
			"character": 34
		},
		"parameter": {
			"name": "TSimpleAnimationStatic",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 3438,
						"name": "ISimpleAnimation"
					},
					{
						"type": "stringLiteral",
						"value": "type"
					}
				],
				"name": "Omit"
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSimpleAnimationType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 68,
			"character": 32
		},
		"parameter": {
			"name": "TSimpleAnimationType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "loop",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "uncontrolled-loop",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "static",
						"order": 9999
					}
				]
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"name": "TSimpleAnimationUncontrolledLoop",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/animation.ts",
			"line": 86,
			"character": 44
		},
		"parameter": {
			"name": "TSimpleAnimationUncontrolledLoop",
			"type": {
				"type": "reference",
				"typeArguments": [
					{
						"type": "reference",
						"id": 3438,
						"name": "ISimpleAnimation"
					},
					{
						"type": "stringLiteral",
						"value": "type"
					}
				],
				"name": "Omit"
			},
			"order": 9999
		},
		"category": "Other"
	},
	{
		"type": "Interface",
		"name": "DrawOptions",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer-canvas.ts",
			"line": 1,
			"character": 28
		},
		"properties": [
			{
				"name": "backgroundImage",
				"type": {
					"type": "reference",
					"name": "CanvasImageSource"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "clearCanvas",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "fixedLineWidth",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghost_index",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghost_skip_function",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "reflection",
							"declaration": {
								"name": "__type",
								"parameters": [
									{
										"name": "ghost_index",
										"type": {
											"type": "intrinsic",
											"name": "number"
										},
										"order": 9999
									}
								],
								"return_type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghost_skip_time",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghosts",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "noBackground",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "scale",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "simmetricLine",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "time",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "translate",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "intrinsic",
							"name": "number"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bOptional": true
			}
		]
	},
	{
		"type": "Interface",
		"name": "DrawerCanvasEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/drawer-canvas.ts",
			"line": 16,
			"character": 35
		},
		"properties": [
			{
				"name": "drawer-canvas:before_draw",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 4136,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"children": [
							{
								"id": 4137,
								"name": "current_frame",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/drawer-canvas.ts",
										"line": 18,
										"character": 15
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 4138,
								"name": "current_time",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/drawer-canvas.ts",
										"line": 19,
										"character": 14
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									4137,
									4138
								]
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/drawer-canvas.ts",
								"line": 17,
								"character": 29
							}
						]
					}
				},
				"order": 9999
			},
			{
				"name": "drawer-canvas:buffer_flush",
				"type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "drawer-canvas:buffer_loaded",
				"type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			},
			{
				"name": "drawer-canvas:resize",
				"type": {
					"type": "intrinsic",
					"name": "void"
				},
				"order": 9999
			}
		]
	},
	{
		"type": "Interface",
		"name": "IProject",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/project.ts",
			"line": 12,
			"character": 25
		},
		"properties": [
			{
				"name": "background",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "backgroundImage",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "clearCanvas",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "ghost_skip_function",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "CallableFunction",
							"type": "reference",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghost_skip_time",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "ghosts",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "height",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "id",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "mainColor",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "ratio",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "resolution",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "scene",
				"type": {
					"type": "reference",
					"id": 3487,
					"name": "IProjectScene"
				},
				"order": 9999
			},
			{
				"name": "sequence",
				"type": {
					"type": "reference",
					"id": 3466,
					"name": "IProjectSequence"
				},
				"order": 9999
			},
			{
				"name": "width",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		]
	},
	{
		"type": "Interface",
		"name": "IProjectScene",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/project.ts",
			"line": 37,
			"character": 30
		},
		"properties": []
	},
	{
		"type": "Interface",
		"name": "IProjectSceneChild",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/project.ts",
			"line": 60,
			"character": 35
		},
		"properties": [
			{
				"name": "adaptMode",
				"type": {
					"type": "reference",
					"id": 161,
					"name": "EShapePrimitiveAdaptMode"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "bCloseShape",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "bPrimitive",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "bUseParent",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "children",
				"type": {
					"type": "reference",
					"typeArguments": [
						{
							"type": "reference",
							"id": 3507,
							"name": "IProjectSceneChild"
						}
					],
					"name": "Array"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "data",
				"type": {
					"type": "reference",
					"id": 3490,
					"name": "IProjectSceneChildData"
				},
				"order": 9999
			},
			{
				"name": "depth",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "id",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "name",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "order",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "parent_id",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "number",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "props",
				"type": {
					"type": "reference",
					"id": 3523,
					"name": "IProjectSceneChildDataProps"
				},
				"order": 9999
			},
			{
				"name": "shape",
				"type": {
					"type": "reference",
					"name": "Float32Array"
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "type",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "vertexCallback",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "string",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			}
		]
	},
	{
		"type": "Interface",
		"name": "IProjectSceneChildData",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/project.ts",
			"line": 41,
			"character": 39
		},
		"properties": [
			{
				"name": "disableGhost",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "fillColor",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "reflection",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "highlighted",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "imported",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "false",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"name": "true",
							"type": "intrinsic",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "strokeColor",
				"type": {
					"type": "union",
					"types": [
						{
							"name": "undefined",
							"type": "intrinsic",
							"order": 9999
						},
						{
							"type": "reflection",
							"order": 9999
						}
					]
				},
				"order": 9999,
				"bOptional": true
			},
			{
				"name": "visible",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			}
		]
	},
	{
		"type": "Interface",
		"name": "IProjectSequence",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/project.ts",
			"line": 5,
			"character": 33
		},
		"properties": [
			{
				"name": "durate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "end",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "framerate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "start",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		]
	},
	{
		"name": "IProjectSceneChildDataProps",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/project.ts",
			"line": 50,
			"character": 39
		},
		"parameter": {
			"name": "IProjectSceneChildDataProps",
			"type": {
				"type": "intersection",
				"types": [
					{
						"type": "reflection",
						"order": 9999
					},
					{
						"type": "reflection",
						"order": 9999
					}
				]
			},
			"order": 9999
		}
	},
	{
		"type": "Interface",
		"name": "IRenderEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renedrer.ts",
			"line": 28,
			"character": 30
		},
		"properties": [
			{
				"name": "renderer:render-frame",
				"type": {
					"type": "reference",
					"id": 4315,
					"name": "IRenderFrame"
				},
				"order": 9999
			},
			{
				"name": "renderer:start",
				"type": {
					"type": "reference",
					"id": 4310,
					"name": "IRenderStart"
				},
				"order": 9999
			}
		]
	},
	{
		"type": "Interface",
		"name": "IRenderFrame",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renedrer.ts",
			"line": 19,
			"character": 29
		},
		"properties": [
			{
				"name": "forPart",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "frame",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "part",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "render_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_frames",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_parts",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		]
	},
	{
		"type": "Interface",
		"name": "IRenderSettings",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renedrer.ts",
			"line": 4,
			"character": 32
		},
		"properties": [
			{
				"name": "noBackground",
				"type": {
					"type": "intrinsic",
					"name": "boolean"
				},
				"order": 9999
			},
			{
				"name": "quality",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "size",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "type",
				"type": {
					"type": "reference",
					"id": 4326,
					"name": "TRenderType"
				},
				"order": 9999
			}
		]
	},
	{
		"type": "Interface",
		"name": "IRenderStart",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renedrer.ts",
			"line": 12,
			"character": 29
		},
		"properties": [
			{
				"name": "estimated_time",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "forPart",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_frames",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "total_parts",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		]
	},
	{
		"name": "TRenderImageType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renedrer.ts",
			"line": 1,
			"character": 28
		},
		"parameter": {
			"name": "TRenderImageType",
			"type": {
				"type": "union",
				"types": [
					{
						"type": "stringLiteral",
						"value": "image/png",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "image/jpeg",
						"order": 9999
					}
				]
			},
			"order": 9999
		}
	},
	{
		"name": "TRenderType",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/renedrer.ts",
			"line": 2,
			"character": 23
		},
		"parameter": {
			"name": "TRenderType",
			"type": {
				"type": "union",
				"types": [
					{
						"name": "TRenderImageType",
						"type": "reference",
						"order": 9999
					},
					{
						"type": "stringLiteral",
						"value": "image/svg+xml",
						"order": 9999
					}
				]
			},
			"order": 9999
		}
	},
	{
		"name": "TSceneChildProps",
		"type": "Type",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/scene-utilities.ts",
			"line": 14,
			"character": 28
		},
		"parameter": {
			"name": "TSceneChildProps",
			"type": {
				"type": "intersection",
				"types": [
					{
						"name": "Omit",
						"type": "reference",
						"typeArguments": [
							{
								"type": "intersection",
								"types": [
									{
										"type": "intersection",
										"types": [
											{
												"type": "reference",
												"id": 1083,
												"name": "IShapeLoopSettings"
											},
											{
												"type": "reference",
												"id": 1027,
												"name": "IShapeBufferSettings"
											},
											{
												"type": "reference",
												"id": 137,
												"name": "IShapeSettings"
											},
											{
												"type": "reference",
												"id": 1136,
												"name": "IRegularPolygonSettings"
											},
											{
												"type": "reference",
												"id": 1306,
												"name": "ILissajousSettings"
											},
											{
												"type": "reference",
												"id": 1248,
												"name": "ISpiralSettings"
											},
											{
												"type": "reference",
												"id": 1191,
												"name": "IRoseSettings"
											}
										]
									},
									{
										"type": "reflection",
										"declaration": {
											"id": 3530,
											"name": "__type",
											"kind": 65536,
											"kindString": "Type literal",
											"flags": {
												"isExported": true
											},
											"children": [
												{
													"id": 3534,
													"name": "data",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/types/scene-utilities.ts",
															"line": 25,
															"character": 6
														}
													],
													"type": {
														"type": "reference",
														"id": 3490,
														"name": "IProjectSceneChildData"
													}
												},
												{
													"id": 3531,
													"name": "id",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/types/scene-utilities.ts",
															"line": 22,
															"character": 4
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "number"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 3532,
													"name": "name",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/types/scene-utilities.ts",
															"line": 23,
															"character": 6
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "string"
															}
														]
													}
												},
												{
													"id": 3533,
													"name": "order",
													"kind": 32,
													"kindString": "Variable",
													"flags": {
														"isExported": true,
														"isOptional": true
													},
													"sources": [
														{
															"fileName": "src/services/types/scene-utilities.ts",
															"line": 24,
															"character": 7
														}
													],
													"type": {
														"type": "union",
														"types": [
															{
																"type": "intrinsic",
																"name": "undefined"
															},
															{
																"type": "intrinsic",
																"name": "number"
															}
														]
													}
												}
											],
											"groups": [
												{
													"title": "Variables",
													"kind": 32,
													"children": [
														3534,
														3531,
														3532,
														3533
													]
												}
											],
											"sources": [
												{
													"fileName": "src/services/types/scene-utilities.ts",
													"line": 21,
													"character": 18
												}
											]
										}
									}
								]
							},
							{
								"type": "stringLiteral",
								"value": "shape"
							}
						],
						"order": 9999
					},
					{
						"type": "reflection",
						"order": 9999
					}
				]
			},
			"order": 9999
		}
	},
	{
		"type": "Interface",
		"name": "SequenceMeta",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/timeline.ts",
			"line": 11,
			"character": 29
		},
		"properties": [
			{
				"name": "durate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "end",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "framerate",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "frames",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			},
			{
				"name": "start",
				"type": {
					"type": "intrinsic",
					"name": "number"
				},
				"order": 9999
			}
		]
	},
	{
		"type": "Interface",
		"name": "TimelineEvents",
		"order": 9999,
		"source": {
			"fileName": "src/services/types/timeline.ts",
			"line": 1,
			"character": 31
		},
		"properties": [
			{
				"name": "timeline:change_status",
				"type": {
					"type": "intrinsic",
					"name": "string"
				},
				"order": 9999
			},
			{
				"name": "timeline:progress",
				"type": {
					"type": "reflection",
					"declaration": {
						"id": 3112,
						"name": "__type",
						"kind": 65536,
						"kindString": "Type literal",
						"flags": {
							"isExported": true
						},
						"children": [
							{
								"id": 3113,
								"name": "current_frame",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/timeline.ts",
										"line": 5,
										"character": 15
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 3114,
								"name": "current_time",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/timeline.ts",
										"line": 6,
										"character": 14
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							},
							{
								"id": 3115,
								"name": "fps",
								"kind": 32,
								"kindString": "Variable",
								"flags": {
									"isExported": true
								},
								"sources": [
									{
										"fileName": "src/services/types/timeline.ts",
										"line": 7,
										"character": 5
									}
								],
								"type": {
									"type": "intrinsic",
									"name": "number"
								}
							}
						],
						"groups": [
							{
								"title": "Variables",
								"kind": 32,
								"children": [
									3113,
									3114,
									3115
								]
							}
						],
						"sources": [
							{
								"fileName": "src/services/types/timeline.ts",
								"line": 4,
								"character": 21
							}
						]
					}
				},
				"order": 9999
			},
			{
				"name": "timeline:update_sequence",
				"type": {
					"type": "reference",
					"id": 3116,
					"name": "SequenceMeta"
				},
				"order": 9999
			}
		]
	}
]